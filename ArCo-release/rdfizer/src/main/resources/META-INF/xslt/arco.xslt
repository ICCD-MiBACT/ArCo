<?xml version="1.0" encoding="UTF-8"?>
<xsl:stylesheet
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:arco-core="https://w3id.org/arco/ontology/core/"
	xmlns:arco-arco="https://w3id.org/arco/ontology/arco/"
	xmlns:arco-lite="https://w3id.org/arco/ontology/arco-lite/"
	xmlns:arco-fn="https://w3id.org/arco/saxon-extension"
	xmlns:arco-catalogue="https://w3id.org/arco/ontology/catalogue/"
	xmlns:arco-spe="https://w3id.org/arco/ontology/natural-specimen-description/"
	xmlns:cis="http://dati.beniculturali.it/cis/"
	xmlns:clvapit="https://w3id.org/italia/onto/CLV/"
	xmlns:smapit="https://w3id.org/italia/onto/SM/"
	xmlns:arco-dd="https://w3id.org/arco/ontology/denotative-description/"
	xmlns:arco-cd="https://w3id.org/arco/ontology/context-description/"
	xmlns:arco-ce="https://w3id.org/arco/ontology/cultural-event/"
	xmlns:arco-con="https://w3id.org/arco/ontology/construction-description/"
	xmlns:dcterms="http://purl.org/dc/terms/creator"
	xmlns:dc="http://purl.org/dc/elements/1.1/"
	xmlns:pico="http://data.cochrane.org/ontologies/pico/"
	xmlns:fn="http://www.w3.org/2005/xpath-functions"
	xmlns:foaf="http://xmlns.com/foaf/0.1/"
	xmlns:frbr="http://purl.org/vocab/frbr/core#"
	xmlns:l0="https://w3id.org/italia/onto/l0/"
	xmlns:arco-location="https://w3id.org/arco/ontology/location/"
	xmlns:owl="http://www.w3.org/2002/07/owl#"
	xmlns:php="http://php.net/xsl"
	xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#"
	xmlns:rdfs="http://www.w3.org/2000/01/rdf-schema#"
	xmlns:roapit="https://w3id.org/italia/onto/RO/"
	xmlns:tiapit="https://w3id.org/italia/onto/TI/"
	xmlns:xs="http://www.w3.org/2001/XMLSchema"
	xmlns:mu="https://w3id.org/italia/onto/MU/"
	xmlns:language="https://w3id.org/italia/onto/Language/"
	xmlns:ar-agentrole="https://w3id.org/arco/resource/AgentRole/"
	xmlns:ar-agent="https://w3id.org/arco/resource/Agent/"
	xmlns:ar-role="https://w3id.org/arco/resource/Role/"
	xmlns:ar-privacyReason="https://w3id.org/arco/resource/PrivacyReason/"
	xmlns:COV="https://w3id.org/italia/onto/COV/"
	xmlns:CPV="https://w3id.org/italia/onto/CPV/"
	xmlns:ar-archeologicalProperty="https://w3id.org/arco/resource/ArchaeologicalProperty/"
	xmlns:ar-TimeInterval="https://w3id.org/arco/resource/TimeInterval/"
	xmlns:ar-city="https://w3id.org/arco/resource/City/"
	xmlns:ar-geometry="https://w3id.org/arco/resource/Geometry/"
	xmlns:ar-event="https://w3id.org/arco/resource/Event/"
	xmlns:ar-country="https://w3id.org/arco/resource/Country/"
	xmlns:ar-timeIndexedTypedLocation="https://w3id.org/arco/resource/TimeIndexedTypedLocation/"
	xmlns:ar-feature="https://w3id.org/arco/resource/Feature/"
	xmlns:ar-timeIndexedRole="https://w3id.org/arco/resource/TimeIndexedRole/"
	xmlns:ar-catalogueRecordSI="https://w3id.org/arco/resource/CatalogueRecordSI/"
	xmlns:ar-detectionMethod="https://w3id.org/arco/resource/DetectionMethod/"
	xmlns:ar-interpretationCriterion="https://w3id.org/arco/resource/InterpretationCriterion/"
	xmlns:ar-bibliography="https://w3id.org/arco/resource/Bibliography/"
	xmlns:ar-culturalPropertyDefinition="https://w3id.org/arco/resource/CulturalPropertyDefinition/"
	xmlns:ar-legalSituation="https://w3id.org/arco/resource/LegalSituation/"
	xmlns:ar-province="https://w3id.org/arco/resource/Province/"
	xmlns:ar-culturalPropertySpecification="https://w3id.org/arco/resource/CulturalPropertySpecification/"
	xmlns:ar-addressArea="https://w3id.org/arco/resource/AddressArea/"
	xmlns:ar-designationInTime="https://w3id.org/arco/resource/DesignationInTime/"
	xmlns:ar-accessProfile="https://w3id.org/arco/resource/AccessProfile/"
	xmlns:ar-documentType="https://w3id.org/arco/resource/DocumentationType/"
	xmlns:ar-address="https://w3id.org/arco/resource/Address/"
	xmlns:ar-culturalPropertyType="https://w3id.org/arco/resource/CulturalPropertyType/"
	xmlns:ar-photograpyDocumentation="https://w3id.org/arco/resource/PhotographicDocumentation/"
	xmlns:ar-docutmentationType="https://w3id.org/arco/resource/DocumentationType/"
	xmlns:ar-dating="https://w3id.org/arco/resource/Dating/"
	xmlns:ar-archeologicalFieldSurvey="https://w3id.org/arco/resource/ArchaeologicalFieldSurvey/"
	xmlns:ar-region="https://w3id.org/arco/resource/Region/"
	xmlns:ar-catalogueRecordVersion="https://w3id.org/arco/resource/CatalogueRecordVersion/"
	xmlns:ar-HistoricOrArtisticProperty="https://w3id.org/arco/resource/HistoricOrArtisticProperty/"
	xmlns:ar-CulturalPropertyCataloguingCategory="https://w3id.org/arco/resource/CulturalPropertyCataloguingCategory/"
	xmlns:ar-RelatedWorkSituation="https://w3id.org/arco/resource/RelatedWorkSituation/"
	xmlns:ar-TechnicalStatus="https://w3id.org/arco/resource/TechnicalStatus/"
	xmlns:ar-Value="https://w3id.org/arco/resource/Value/"
	xmlns:ar-PreferredAuthorshipAttribution="https://w3id.org/arco/resource/PreferredAuthorshipAttribution/"
	xmlns:ar-CatalogueRecordOA="https://w3id.org/arco/resource/CatalogueRecordOA/"
	xmlns:ar-TechnicalCharacteristic="https://w3id.org/arco/resource/TechnicalCharacteristic/"
	xmlns:ar-Site="https://w3id.org/arco/resource/Site/"
	xmlns:ar-SiteType="https://w3id.org/arco/resource/SiteType/"
	xmlns:ar-ConservationStatus="https://w3id.org/arco/resource/ConservationStatus/"
	xmlns:ar-Subject="https://w3id.org/arco/resource/Subject/"
	xmlns:ar-SourceAndDocument="https://w3id.org/arco/resource/SourceAndDocument/"
	xmlns:ar-cis="https://w3id.org/arco/resource/CulturalInstituteOrSite/"
	xmlns:ar-SiteDefinition="https://w3id.org/arco/resource/SiteDefinition/"
	xmlns:ar-MeasurementCollection="https://w3id.org/arco/resource/MeasurementCollection/"
	xmlns:ar-CISNameInTime="https://w3id.org/arco/resource/CISNameInTime/"
	xmlns:ar-Measurement="https://w3id.org/arco/resource/Measurement/"

	xmlns:skos="http://www.w3.org/2004/02/skos/core#" version="2.0"
	exclude-result-prefixes="xsl php">
	<xsl:output method="xml" encoding="utf-8" indent="yes" />

	<xsl:template name="CamelCase">
		<xsl:param name="text" />
		<xsl:choose>
			<xsl:when test="contains($text,' ')">
				<xsl:call-template name="CamelCaseWord">
					<xsl:with-param name="text" select="substring-before($text,' ')" />
				</xsl:call-template>
				<xsl:text> </xsl:text>
				<xsl:call-template name="CamelCase">
					<xsl:with-param name="text" select="substring-after($text,' ')" />
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:call-template name="CamelCaseWord">
					<xsl:with-param name="text" select="$text" />
				</xsl:call-template>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="CamelCaseWord">
		<xsl:param name="text" />
		<xsl:value-of select="translate(substring($text,1,1),'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')" />
		<xsl:value-of select="translate(substring($text,2,string-length($text)-1),'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz')" />
	</xsl:template>
	
	<xsl:template name="CamelCase1">
		<xsl:param name="text" />
		<xsl:value-of select="translate(($text),'ABCDEFGHIJKLMNOPQRSTUVWXYZ', 'abcdefghijklmnopqrstuvwxyz')" />
	</xsl:template>

	<xsl:param name="item" />
	<xsl:param name="NS" />
	<!-- xsl:variable name="NS" select="'https://w3id.org/arco/resource/'" /-->
	<!-- xsl:import href="./prova.xsl" / -->
	
	<xsl:template match="/">

		<rdf:RDF>
		<!-- xsl:variable name="sheetType" select="record/metadata/schede/*/CD/TSK/text()"></xsl:variable -->
		<xsl:variable name="sheetType" select="name(record/metadata/schede/*[1])" />
		<xsl:if test="not($sheetType='CF' or $sheetType='CG' or $sheetType='AUT' or $sheetType='DSC' or $sheetType='BIB' or $sheetType='RCG') and not(administrativeDataRecord/metadata) and not(root)" >
				
			<xsl:variable name="itemURI">
				<xsl:choose>
					<xsl:when test="record/metadata/schede/*/CD/NCT/NCTN">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/RV/RVE/RVEL">
								<xsl:variable name="rvel-punto" select="lower-case(normalize-space(record/metadata/schede/*/RV/RVE/RVEL))" />
								<xsl:variable name="rvel" select="translate($rvel-punto, '.', '_')" />
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS, '-', arco-fn:urify($rvel))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS)" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:when>
					<xsl:when test="record/metadata/schede/*/CD/CDM">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/CD/CBC">
								<xsl:value-of select="arco-fn:urify(record/metadata/schede/*/CD/CBC)" />
							</xsl:when>
							<xsl:when test="record/metadata/schede/*/CD/CDR">
								<xsl:value-of select="concat(arco-fn:urify(record/metadata/schede/*/CD/CDR), arco-fn:urify(record/metadata/schede/*/CD/CDM))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="arco-fn:urify(record/metadata/schede/*/CD/CDM)" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:when>
					<xsl:otherwise>
					<xsl:variable name="accc-space" >
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/AC/ACC/ACCC">
								<xsl:value-of select="record/metadata/schede/*/AC/ACC[1]/ACCC" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="record/metadata/schede/*/CD/ACC[1]/ACCC" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="accc-nospace" select="translate($accc-space, ' ', '')" />
					<xsl:variable name="accc" select="translate($accc-nospace, '/', '_')" />
					<xsl:variable name="acc-space" select="record/metadata/schede/*/*/ACC[1]" />
					<xsl:variable name="acc-nospace" select="translate($acc-space, ' ', '')" />
					<xsl:variable name="acc" select="translate($acc-nospace, '/', '_')" />
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/AC/ACC/ACCC">
								<xsl:value-of select="$accc" />
							</xsl:when>
							<xsl:when test="record/metadata/schede/*/CD/ACC/ACCC">
								<xsl:value-of select="$accc" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="$acc" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:variable name="sheetVersion" select="record/metadata/schede/*/@version" />
			<xsl:variable name="culturalProperty">
				<xsl:choose>
					<xsl:when test="$sheetType='MODI'">
						<xsl:value-of select="concat($NS, arco-fn:local-name(arco-fn:getSpecificPropertyType(record/metadata/schede/MODI/OG/AMB)), '/', $itemURI)" />
					</xsl:when>
					<xsl:when test="$sheetType='SCAN'">
						<xsl:choose>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni architettonici e paesaggistici'">
								<xsl:value-of select="concat($NS, 'ArchitecturalOrLandscapeHeritage/', $itemURI)" />
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni storici e artistici'">
								<xsl:value-of select="concat($NS, 'HistoricOrArtisticProperty/', $itemURI)" />
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni archeologici'">
								<xsl:value-of select="concat($NS, 'ArchaeologicalProperty/', $itemURI)" />
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni demoetnoantopologici'">
								<xsl:value-of select="concat($NS, 'DemoEthnoAnthropologicalHeritage/', $itemURI)" />
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni fotografici'">
								<xsl:value-of select="concat($NS, 'PhotographicHeritage/', $itemURI)" />
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni musicali'">
								<xsl:value-of select="concat($NS, 'MusicHeritage/', $itemURI)" />
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni naturalistici'">
								<xsl:value-of select="concat($NS, 'NaturalHeritage/', $itemURI)" />
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni numismatici'">
								<xsl:value-of select="concat($NS, 'NumismaticProperty/', $itemURI)" />
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/SET))='beni scientifici e tecnologici'">
								<xsl:value-of select="concat($NS, 'ScientificOrTechnologicalHeritage/', $itemURI)" />
							</xsl:when>
						</xsl:choose>
					</xsl:when>
					<xsl:when test="$sheetType='MINP'">
						<xsl:value-of select="concat($NS, 'ArchaeologicalProperty/', $itemURI)" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="concat($NS, arco-fn:local-name(arco-fn:getSpecificPropertyType($sheetType)), '/', $itemURI)" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
				<!-- variable objectOfDescription -->	
			<xsl:variable name="objectOfDescription">
				<xsl:choose>
					<xsl:when test="record/metadata/schede/*/OG/OGT/OGTP and ($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00')">
						<xsl:value-of select="concat($NS, arco-fn:local-name(arco-fn:getSpecificPropertyType($sheetType)), '/', $itemURI, '-component')" />
					</xsl:when>
					<xsl:when test="record/metadata/schede/*/OG/OGT/OGTW and ($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00')">
						<xsl:value-of select="concat($NS, arco-fn:local-name(arco-fn:getSpecificPropertyType($sheetType)), '/', $itemURI, '-residual')" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$culturalProperty" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			
			<xsl:variable name="cp-name" select="''" />
			<xsl:variable name="cis">	
				<xsl:choose>
					<xsl:when test="record/metadata/schede/harvesting/idContenitoreGiuridico">
					<xsl:variable name="CG" select="record/metadata/schede/harvesting/idContenitoreGiuridico" />
					<xsl:variable name="idCG">
						<xsl:value-of select="arco-fn:find-cg($CG)"/>
					</xsl:variable>
						<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', $idCG)" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LDC/LDCM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'n.r')))">
								<xsl:choose>
									<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
										<xsl:choose>	
											<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
											</xsl:when>
											<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCC)))))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:when>
									<xsl:when test="record/metadata/schede/*/LC/LCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/LCS))='italia')">
										<xsl:choose>	
											<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCS)), normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
											</xsl:when>
											<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCS)), normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCC)))))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCS)), normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:when>
									<xsl:when test="record/metadata/schede/*/LC/LCC">
										<xsl:choose>	
											<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
											</xsl:when>
											<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCC)))))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
											</xsl:otherwise>
										</xsl:choose>	
									</xsl:when>
									<xsl:otherwise>
										<xsl:choose>	
											<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
											</xsl:when>
											<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCC)))))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
											</xsl:otherwise>
										</xsl:choose>								
									</xsl:otherwise>
								</xsl:choose>
							</xsl:when>
							<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:variable name="ldcm"><xsl:for-each select="record/metadata/schede/*/LC/LDC/LDCM"><xsl:value-of select="arco-fn:urify(.)"/></xsl:for-each></xsl:variable>
			<xsl:variable name="pvcc"><xsl:for-each select="record/metadata/schede/*/LC/PVC/PVCC"><xsl:value-of select="arco-fn:urify(.)"/></xsl:for-each></xsl:variable>
			<!-- We firstly introduce the sheet. -->
			<rdf:Description>
				<xsl:attribute name="rdf:about">
                    <xsl:value-of select="concat($NS, 'CatalogueRecord', $sheetType, '/', $itemURI)" />
                </xsl:attribute>
				<rdf:type>
					<xsl:attribute name="rdf:resource">
                        <xsl:value-of select="concat('https://w3id.org/arco/ontology/catalogue/', 'CatalogueRecord', $sheetType)" />
                    </xsl:attribute>
				</rdf:type>
				<xsl:if test="not ($sheetType='AT') ">
					<xsl:if test="record/metadata/schede/*/OG/OGC/OGCT and (not(lower-case(normalize-space(record/metadata/schede/*/OG/OGC/OGCT))='bene semplice') and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGC/OGCT))='bene complesso/bene composito - parte componente') and not(record/metadata/schede/AT/OG/OGC/OGCT))">
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                         		<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/ComplexCPCatalogueRecord'" />
                    		</xsl:attribute>
						</rdf:type>
					</xsl:if>
				</xsl:if>
				<xsl:if test="record/metadata/schede/F/OG/OGT/OGTB and (not(lower-case(normalize-space(record/metadata/schede/F/OG/OGT/OGTB))='m') and not(lower-case(normalize-space(record/metadata/schede/F/OG/OGT/OGTB))='c'))">
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/ComplexCPCatalogueRecord'" />
						</xsl:attribute>
					</rdf:type>
				</xsl:if>
				<rdfs:label xml:lang="en">
					<xsl:value-of select="concat('Catalogue Record n: ', $itemURI)" />
				</rdfs:label>
				<rdfs:label xml:lang="it">
					<xsl:value-of select="concat('Scheda catalografica n: ', $itemURI)" />
				</rdfs:label>
				<xsl:if test="not ($sheetType='AT') ">
					<xsl:if test="record/metadata/schede/*/OG/OGC/OGCS">
						<arco-core:note>
                         	<xsl:value-of select="record/metadata/schede/*/OG/OGC/OGCS" />
                    	</arco-core:note>
					</xsl:if>
				</xsl:if>
				<!-- hasCataloguingLevel (record/metadata/schede/*/CD/LIR) -->
				<xsl:for-each select="record/metadata/schede/*/CD/LIR">
					<arco-catalogue:hasCataloguingLevel>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat('https://w3id.org/arco/ontology/catalogue/', upper-case(arco-fn:urify(.)))" />
                        </xsl:attribute>
					</arco-catalogue:hasCataloguingLevel>
				</xsl:for-each>
				
				<!-- identifier:sheetIdentifier - concat of NCTR + NCTN + NCTS + - +RVEL. 
					NCTR+NCTN+NCTS comes from record/metadata/schede/*/CD/NCT RVEL comes from 
					record/metadata/schede/*/RV/RVE/RVEL (optional) -->
				<xsl:if test="record/metadata/schede/*/CD/NCT/NCTN">
					<arco-lite:nationalIdentifier>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/RV/RVE/RVEL">
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS, '-', record/metadata/schede/*/RV/RVE/RVEL)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS)" />
							</xsl:otherwise>
						</xsl:choose>
					</arco-lite:nationalIdentifier>
					<!-- NCTR Codice Regione (record/metadata/schede/*/CD/NCT/NCTR) -->
					<xsl:for-each select="record/metadata/schede/*/CD/NCT/NCTR">
						<arco-catalogue:regionIdentifier>
							<xsl:value-of select="." />
						</arco-catalogue:regionIdentifier>
					</xsl:for-each>
					<!-- NCTN Numero catalogo generale (record/metadata/schede/*/CD/NCT/NCTN) -->
					<xsl:for-each select="record/metadata/schede/*/CD/NCT/NCTN">
						<arco-catalogue:catalogueNumber>
							<xsl:value-of select="." />
						</arco-catalogue:catalogueNumber>
					</xsl:for-each>
					<!-- NCTS Suffisso (record/metadata/schede/*/CD/NCT/NCTS) -->
					<xsl:for-each select="record/metadata/schede/*/CD/NCT/NCTS">
						<arco-catalogue:suffix>
							<xsl:value-of select="." />
						</arco-catalogue:suffix>
					</xsl:for-each>
					<arco-core:hasIdentifier>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'CatalogueRecordIdentifier/', $itemURI)" />
						</xsl:attribute>
					</arco-core:hasIdentifier>
				</xsl:if>
				<xsl:if test="record/metadata/schede/MODI/CD">
					<arco-lite:localIdentifier>
						<xsl:value-of select="concat(record/metadata/schede/*/CD/CDR, '-', record/metadata/schede/*/CD/CDM)" />
					</arco-lite:localIdentifier>
					<arco-core:hasIdentifier>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'CatalogueRecordIdentifier/', $itemURI)" />
						</xsl:attribute>
					</arco-core:hasIdentifier>
				</xsl:if>
				<!-- system record code -->
				<arco-lite:systemIdentifier>
					<xsl:value-of select="$item" />
				</arco-lite:systemIdentifier>
				<!-- deleted iccd identifier -->
				<xsl:for-each select="record/metadata/schede/*/RV/RSP">
					<arco-catalogue:deletedICCDIdentifier>
						<xsl:value-of select="." />
					</arco-catalogue:deletedICCDIdentifier>
				</xsl:for-each>
				<xsl:if test="not ($sheetType='A' or $sheetType='PG' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0' or $sheetVersion='1.00' or $sheetVersion='1.00_ICCD0'))">
					<xsl:for-each select="record/metadata/schede/*/RV/RVE/RVES">
						<arco-catalogue:deletedICCDIdentifier>
							<xsl:value-of select="." />
						</arco-catalogue:deletedICCDIdentifier>
					</xsl:for-each>
				</xsl:if>
				<!-- alternative identifier (AC/ACC) -->
				<xsl:if test="record/metadata/schede/*/*/ACC">
					<xsl:for-each select="record/metadata/schede/*/*/ACC/ACC">
						<arco-lite:alternativeIdentifier>
							<xsl:choose>
								<xsl:when test="./*">
									<xsl:value-of select="normalize-space(./ACCC)" />
								</xsl:when>
								<xsl:otherwise> 
									<xsl:value-of select="normalize-space(.)" />
								</xsl:otherwise>
							</xsl:choose>
						</arco-lite:alternativeIdentifier>
						<arco-core:hasIdentifier>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="./*">
										<xsl:value-of select="concat($NS, 'Identifier/', $itemURI, arco-fn:arcofy(./ACCC))" />
									</xsl:when>
									<xsl:otherwise> 
										<xsl:value-of select="concat($NS, 'Identifier/', $itemURI, arco-fn:arcofy(.))" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:attribute>
						</arco-core:hasIdentifier>
					</xsl:for-each>
				</xsl:if>
				<!-- access profile -->
				<xsl:if test="record/metadata/schede/*/AD/ADS">
					<arco-catalogue:hasAccessProfile>
						<xsl:attribute name="rdf:resource">
	                		<xsl:value-of select="concat($NS, 'AccessProfile/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/AD/ADS/ADSP)))" />
	                	</xsl:attribute>
					</arco-catalogue:hasAccessProfile>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/AD/ADP">
					<arco-catalogue:hasAccessProfile>
						<xsl:attribute name="rdf:resource">
	                		<xsl:value-of select="concat($NS, 'AccessProfile/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/AD/ADP)))" />
	                	</xsl:attribute>
					</arco-catalogue:hasAccessProfile>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/CM/ADP">
					<arco-catalogue:hasAccessProfile>
						<xsl:attribute name="rdf:resource">
	                		<xsl:value-of select="concat($NS, 'AccessProfile/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/CM/ADP)))" />
	                	</xsl:attribute>
					</arco-catalogue:hasAccessProfile>
				</xsl:if>
				<!-- international identifier -->
				<xsl:if test="$sheetType='PST' or $sheetType='SMO' or $sheetType='VeAC'" >
					<xsl:if test="record/metadata/schede/*/AC/ACI and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AC/ACI)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AC/ACI)), 'n.r')))">
						<arco-lite:internationalIdentifier>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/AC/ACI)" />
						</arco-lite:internationalIdentifier>
						<arco-core:hasIdentifier>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'InternationalIdentifier/', $itemURI, arco-fn:arcofy(record/metadata/schede/*/AC/ACI))" />
						</xsl:attribute>
					</arco-core:hasIdentifier>
					</xsl:if>
				</xsl:if>
				<!-- catalogue record version -->
				<xsl:if test="record/metadata/schede/*/CM/CMP or record/metadata/schede/*/CM/RSR or record/metadata/schede/*/CM/FUR or record/metadata/schede/*/CM/CMP or record/metadata/schede/*/CM/CMC">
					<arco-catalogue:hasRecordVersion>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'CatalogueRecordVersion/', $itemURI, '-compilation')" />
                        </xsl:attribute>
					</arco-catalogue:hasRecordVersion>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/CM/CMR">
					<arco-catalogue:hasRecordVersion>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'CatalogueRecordVersion/', $itemURI, '-compilation')" />
                        </xsl:attribute>
					</arco-catalogue:hasRecordVersion>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/CM/RVM">
					<arco-catalogue:hasRecordVersion>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'CatalogueRecordVersion/', $itemURI, '-rvm')" />
                        </xsl:attribute>
					</arco-catalogue:hasRecordVersion>
				</xsl:if>
				<xsl:for-each select="record/metadata/schede/*/CM/AGG">
					<arco-catalogue:hasRecordVersion>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'CatalogueRecordVersion/', $itemURI, '-agg-', position())" />
                        </xsl:attribute>
					</arco-catalogue:hasRecordVersion>
				</xsl:for-each>
				<!-- note -->
				<xsl:if test="record/metadata/schede/*/AN/OSS">
					<arco-core:note>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/AN/OSS)" />
					</arco-core:note>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/CM/OSS">
					<arco-core:note>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/CM/OSS)" />
					</arco-core:note>
				</xsl:if>
				<xsl:for-each select="record/metadata/schede/*/DO/IGM[IGMN or IGMD]">
					<arco-core:note>
						<xsl:choose>
							<xsl:when test="IGMN and IGMD">
								<xsl:value-of select="normalize-space(concat(IGMN, ' | ', IGMD))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="normalize-space(concat(IGMN, IGMD))" />
							</xsl:otherwise>
						</xsl:choose>
					</arco-core:note>
				</xsl:for-each>
				<!-- recovered data -->
				<xsl:if test="record/metadata/schede/*/AN/RDP">
					<arco-catalogue:recoveredData>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/AN/RDP)" />
					</arco-catalogue:recoveredData>
				</xsl:if>
				<xsl:for-each select="record/metadata/schede/*/DR/ROC">
					<xsl:if test="record/metadata/schede/*/DR/ROC/ROCC">
						<arco-catalogue:recoveredData>
							<xsl:value-of select="concat('ROCC: ', normalize-space(record/metadata/schede/*/DR/ROC/ROCC))" />
						</arco-catalogue:recoveredData>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/DR/ROC/ROCI">
						<arco-catalogue:recoveredData>
							<xsl:value-of select="concat('ROCI: ', normalize-space(record/metadata/schede/*/DR/ROC/ROCI))" />
						</arco-catalogue:recoveredData>
					</xsl:if>
				</xsl:for-each>
				<xsl:if test="record/metadata/schede/*/DO/VDS/VDST">
					<arco-catalogue:recoveredData>
						<xsl:value-of select="concat('VDST: ', normalize-space(string-join(record/metadata/schede/*/DO/VDS/VDST[not(.=../preceding-sibling::VDS/VDST)],', ')))" />
					</arco-catalogue:recoveredData>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/DO/VDS/VDSI">
					<arco-catalogue:recoveredData>
						<xsl:value-of select="concat('VDSI: ', normalize-space(string-join(record/metadata/schede/*/DO/VDS/VDSI[not(.=../preceding-sibling::VDS/VDSI)],', ')))" />
					</arco-catalogue:recoveredData>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/DO/VDS/VDSP">
					<arco-catalogue:recoveredData>
						<xsl:value-of select="concat('VDSP: ', normalize-space(string-join(record/metadata/schede/*/DO/VDS/VDSP[not(.=../preceding-sibling::VDS/VDSP)],', ')))" />
					</arco-catalogue:recoveredData>
				</xsl:if>
			</rdf:Description>
			<!-- catalogue record identifier -->
			<xsl:if test="record/metadata/schede/*/CD/NCT/NCTN">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CatalogueRecordIdentifier/', $itemURI)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                </xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
			                <xsl:value-of select="'https://w3id.org/arco/ontology/core/NationalIdentifier'" />
				        </xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/RV/RVE/RVEL">
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS, '-', record/metadata/schede/*/RV/RVE/RVEL)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS)" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/RV/RVE/RVEL">
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS, '-', record/metadata/schede/*/RV/RVE/RVEL)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS)" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<arco-core:identifier>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/RV/RVE/RVEL">
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS, '-', record/metadata/schede/*/RV/RVE/RVEL)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS)" />
							</xsl:otherwise>
						</xsl:choose>
					</arco-core:identifier>
					<!-- NCTR Codice Regione (record/metadata/schede/*/CD/NCT/NCTR) -->
					<xsl:for-each select="record/metadata/schede/*/CD/NCT/NCTR">
						<arco-catalogue:regionIdentifier>
							<xsl:value-of select="." />
						</arco-catalogue:regionIdentifier>
					</xsl:for-each>
					<!-- NCTN Numero catalogo generale (record/metadata/schede/*/CD/NCT/NCTN) -->
					<xsl:for-each select="record/metadata/schede/*/CD/NCT/NCTN">
						<arco-catalogue:catalogueNumber>
							<xsl:value-of select="." />
						</arco-catalogue:catalogueNumber>
					</xsl:for-each>
					<!-- NCTS Suffisso (record/metadata/schede/*/CD/NCT/NCTS) -->
					<xsl:for-each select="record/metadata/schede/*/CD/NCT/NCTS">
						<arco-catalogue:suffix>
							<xsl:value-of select="." />
						</arco-catalogue:suffix>
					</xsl:for-each>
					<arco-core:current>
		            	<xsl:value-of select="true()" />
        		    </arco-core:current>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/MODI/CD">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CatalogueRecordIdentifier/', $itemURI)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                </xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
			                <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				        </xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="concat(record/metadata/schede/*/CD/CDR, '-', record/metadata/schede/*/CD/CDM)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="concat(record/metadata/schede/*/CD/CDR, '-', record/metadata/schede/*/CD/CDM)" />
					</l0:name>
					<arco-core:identifier>
						<xsl:value-of select="concat(record/metadata/schede/*/CD/CDR, '-', record/metadata/schede/*/CD/CDM)" />
					</arco-core:identifier>
					<arco-core:current>
		            	<xsl:value-of select="true()" />
        		    </arco-core:current>
				</rdf:Description>
			</xsl:if>
			<!-- international identifier -->
			<xsl:if test="$sheetType='PST' or $sheetType='SMO' or $sheetType='VeAC'" >
				<xsl:if test="record/metadata/schede/*/AC/ACI and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AC/ACI)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AC/ACI)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'InternationalIdentifier/', $itemURI, arco-fn:arcofy(record/metadata/schede/*/AC/ACI))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		        	        </xsl:attribute>
						</rdf:type>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
				                <xsl:value-of select="'https://w3id.org/arco/ontology/core/InternationalIdentifier'" />
					        </xsl:attribute>
						</arco-core:hasType>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/AC/ACI)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/AC/ACI)" />
						</l0:name>
						<arco-core:identifier>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/AC/ACI)" />
						</arco-core:identifier>
						<arco-core:current>
							<xsl:value-of select="true()" />
						</arco-core:current>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- archaeological site identifier -->
			<xsl:if test="record/metadata/schede/*/OG/OGT/OGTI and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTI)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTI)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Identifier/', $itemURI, arco-fn:arcofy(record/metadata/schede/*/OG/OGT/OGTI))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                </xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
			                <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				        </xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTI)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTI)" />
					</l0:name>
					<arco-core:identifier>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTI)" />
					</arco-core:identifier>
					<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:if>
			<!-- RFid -->
			<xsl:if test="record/metadata/schede/*/RF/RFI/RFID and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/RF/RFI/RFID)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/RF/RFI/RFID)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'RFid', $itemURI, arco-fn:arcofy(record/metadata/schede/*/RF/RFI/RFID))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/arco/RFid'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="record/metadata/schede/*/RF/RFI/RFID" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="record/metadata/schede/*/RF/RFI/RFID" />
					</l0:name>
					<xsl:if test="record/metadata/schede/*/RF/RFI/RFIS">
						<arco-core:note>
							<xsl:value-of select="record/metadata/schede/*/RF/RFI/RFIS" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/RF/RFI/RFIA">
						<tiapit:date>
							<xsl:value-of select="record/metadata/schede/*/RF/RFI/RFIA" />
						</tiapit:date>
					</xsl:if>
				</rdf:Description>
			</xsl:if>
			<!-- Catalogue record version CMP -->
			<xsl:if test="record/metadata/schede/*/CM/CMR or record/metadata/schede/*/CM/CMP or record/metadata/schede/*/CM/RSR or record/metadata/schede/*/CM/FUR  or record/metadata/schede/*/CM/CMP or record/metadata/schede/*/CM/CMC">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'CatalogueRecordVersion/', $itemURI, '-compilation')" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/CatalogueRecordVersion'" />
                        </xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/Compiling'" />
                        </xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/CM/CMP">
								<xsl:value-of select="concat(string-join(record/metadata/schede/*/CM/CMP[not(@hint=preceding-sibling::CMP/@hint)]/@hint,', '), ' - ', normalize-space(string-join(record/metadata/schede/*/CM/CMP,', ')))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'COMPILAZIONE'" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<xsl:if test="record/metadata/schede/MODI/CM/CMM">
						<arco-core:note>
							<xsl:value-of select="record/metadata/schede/MODI/CM/CMM" />
						</arco-core:note>
					</xsl:if>
					<xsl:for-each select="record/metadata/schede/MODI/CM/CMG">
						<arco-core:note>
							<xsl:value-of select="." />
						</arco-core:note>
					</xsl:for-each>
					<xsl:if test="record/metadata/schede/MODI/CM/CMS">
						<arco-core:note>
							<xsl:value-of select="record/metadata/schede/*/CM/CMS" />
						</arco-core:note>
					</xsl:if>
					<arco-catalogue:isCatalogueRecordVersionOf>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'CatalogueRecord', $sheetType, '/', $itemURI)" />
                        </xsl:attribute>
					</arco-catalogue:isCatalogueRecordVersionOf>
					<!-- Catalogue record version Role in Time -->
					<xsl:for-each select="record/metadata/schede/*/CM/CMP/CMPN">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-compilation-', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasResponsibleResearchAndCompilation>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasResponsibleResearchAndCompilation>
						</xsl:if>
					</xsl:for-each>
					<xsl:for-each select="record/metadata/schede/*/CM/CMC">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-compilation-', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasResponsibleResearchAndCompilation>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasResponsibleResearchAndCompilation>
						</xsl:if>
					</xsl:for-each>
					<xsl:for-each select="record/metadata/schede/*/CM/CMR">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-compilation-', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasResponsibleResearchAndCompilation>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasResponsibleResearchAndCompilation>
						</xsl:if>
					</xsl:for-each>
					<!-- edited at time -->
					<xsl:for-each select="record/metadata/schede/*/CM/CMP/CMPD[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-catalogue:editedAtTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space()))" />
                            </xsl:attribute>
						</arco-catalogue:editedAtTime>
					</xsl:for-each>
					<xsl:for-each select="record/metadata/schede/*/CM/CMA[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-catalogue:editedAtTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space()))" />
                            </xsl:attribute>
						</arco-catalogue:editedAtTime>
					</xsl:for-each>
					<!-- Referente verifica scientifica -->
					<xsl:for-each select="record/metadata/schede/*/CM/RSR">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', arco-fn:arcofy(concat(./@hint, '-', .)))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasScientificDirector>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasScientificDirector>
						</xsl:if>
					</xsl:for-each>
					<!-- Funzionario responsabile -->
					<xsl:for-each select="record/metadata/schede/*/CM/FUR">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', arco-fn:arcofy(concat(./@hint, '-', .)))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasOfficialInCharge>
								<xsl:attribute name="rdf:resource">	
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-lite:hasOfficialInCharge>
						</xsl:if>
					</xsl:for-each>
				</rdf:Description>
				<xsl:for-each select="record/metadata/schede/*/CM/CMC">
					<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            	           		 <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-compilation-', arco-fn:arcofy(.))" />
           	    	   		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                   	    	    <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                       	</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Ente responsabile della compilazione della scheda del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/DR/DRV))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Ente responsabile della compilazione della scheda del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/DR/DRV))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Responsible agency of catalogue record compilation of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/DR/DRV))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Responsible agency of catalogue record compilation of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/DR/DRV))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
	            	   	            <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
	                	   	    </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
	    	   	                    <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	        	   	            </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- Role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	        	   	            <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
	            	   	    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                        	   	<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
		                       </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Responsabile dell''attività'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Responsible agent'" />
							</rdfs:label>
						</rdf:Description>
						<!-- Agent as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	           		            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	               		    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                           		<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="record/metadata/schede/*/DR/DRV" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="record/metadata/schede/*/DR/DRV" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
				<xsl:for-each select="record/metadata/schede/*/CM/CMA[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space()))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space()" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space()" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space()" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<!-- Catalogue record version RVM -->
			<xsl:if test="record/metadata/schede/*/CM/RVM">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'CatalogueRecordVersion/', $itemURI, '-rvm')" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/CatalogueRecordVersion'" />
                        </xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/DigitalTranscription'" />
                        </xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="concat(record/metadata/schede/*/CM/RVM/@hint, ' - ', normalize-space(record/metadata/schede/*/CM/RVM))" />
					</rdfs:label>
					<arco-catalogue:isRecordVersionOf>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'CatalogueRecord', $sheetType, '/', $itemURI)" />
                        </xsl:attribute>
					</arco-catalogue:isRecordVersionOf>
					<!-- Catalogue record version Role in Time -->
					<xsl:for-each select="record/metadata/schede/*/CM/RVM/RVMN[not(starts-with(lower-case(normalize-space(.)), 'nr') or starts-with(lower-case(normalize-space(.)), 'n.r'))]">
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-rvm-', arco-fn:arcofy(.))" />
                            </xsl:attribute>
						</arco-core:hasAgentRole>
						<arco-lite:hasOperator>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                            </xsl:attribute>
						</arco-lite:hasOperator>
					</xsl:for-each>
					<!-- Catalogue record version Role in Time -->
					<xsl:if test="record/metadata/schede/*/CM/RVM/RVME">
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-rvm-', arco-fn:arcofy(record/metadata/schede/*/CM/RVM/RVME))" />
                            </xsl:attribute>
						</arco-core:hasAgentRole>
						<arco-lite:hasResponsibleAgent>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(record/metadata/schede/*/CM/RVM/RVME))" />
                            </xsl:attribute>
						</arco-lite:hasResponsibleAgent>
					</xsl:if>
					<!-- edited at time -->
					<xsl:if test="record/metadata/schede/*/CM/RVM/RVMD and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CM/RVM/RVMD)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CM/RVM/RVMD)), 'n.r')))">
						<arco-catalogue:editedAtTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(record/metadata/schede/*/CM/RVM/RVMD)))" />
                            </xsl:attribute>
						</arco-catalogue:editedAtTime>
					</xsl:if>
					<!-- Referente verifica scientifica -->
					<xsl:for-each select="record/metadata/schede/*/CM/RSR">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', arco-fn:arcofy(concat(./@hint, '-', .)))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasScientificDirector>
								<xsl:attribute name="rdf:resource">
                        	        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                            	</xsl:attribute>
							</arco-lite:hasScientificDirector>
						</xsl:if>
					</xsl:for-each>
					<!-- Funzionario responsabile -->
					<xsl:for-each select="record/metadata/schede/*/CM/FUR">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', arco-fn:arcofy(concat(./@hint, '-', .)))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasOfficialInCharge>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasOfficialInCharge>
						</xsl:if>
					</xsl:for-each>
				</rdf:Description>
			</xsl:if>
			<!-- Referente verifica scientifica -->
			<xsl:for-each select="record/metadata/schede/*/CM/RSR">
				<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
					
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', arco-fn:arcofy(concat(./@hint, '-', .)))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat(./@hint, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Scientific director', ': ', normalize-space(.))" />
						</rdfs:label>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
	                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- Agent: Referente verifica scientifica -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
					</rdf:Description>
					<!-- Role: Referente verifica scientifica -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="normalize-space(./@hint)" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Scientific Director'" />
						</rdfs:label>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Catalogue record version AGG and individuals-->
			<xsl:for-each select="record/metadata/schede/*/CM/AGG">
				<!-- Catalogue record version as individual -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'CatalogueRecordVersion/', $itemURI, '-agg-', position())" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/CatalogueRecordVersion'" />
                        </xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/Updating'" />
                        </xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="concat(./@hint, ' - ', normalize-space(.))" />
					</rdfs:label>
					<arco-catalogue:isRecordVersionOf>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'CatalogueRecord', $sheetType, '/', $itemURI)" />
                        </xsl:attribute>
					</arco-catalogue:isRecordVersionOf>
					<!-- Catalogue record version Role in Time -->
					<xsl:for-each select="./AGGN">
						<xsl:if test=".">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-agg-', position(), '-', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasResearchAndCompilation>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasResearchAndCompilation>
						</xsl:if>
					</xsl:for-each>
					<xsl:for-each select="./AGGR">
						<xsl:if test=".">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-agg-', position(), '-', arco-fn:arcofy(normalize-space(.)))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasScientificDirector>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasScientificDirector>
						</xsl:if>
					</xsl:for-each>
					<xsl:for-each select="./AGGE">
						<xsl:if test=".">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-agg-', position(), '-', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasResponsibleAgent>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasResponsibleAgent>
						</xsl:if>
					</xsl:for-each>
					<!-- edited at time -->
					<xsl:if test="./AGGD and not(lower-case(normalize-space(./AGGD))='nr' or lower-case(normalize-space(./AGGD))='n.r.' or lower-case(normalize-space(./AGGD))='nr (recupero pregresso)')">
						<arco-catalogue:editedAtTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./AGGD)))" />
                            </xsl:attribute>
						</arco-catalogue:editedAtTime>
					</xsl:if>
					<!-- Funzionario responsabile -->
					<xsl:for-each select="./AGGF">
						<xsl:if test=". and not(lower-case(normalize-space(.))='nr' or lower-case(normalize-space(.))='n.r.' or lower-case(normalize-space(.))='nr (recupero pregresso)')">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', arco-fn:arcofy(concat(./@hint, '-', .)))" />
	                            </xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasOfficialInCharge>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-lite:hasOfficialInCharge>
						</xsl:if>
					</xsl:for-each>
				</rdf:Description>
				<!-- Time interval as individual -->
				<xsl:if test="./AGGD and not(lower-case(normalize-space(./AGGD))='nr' or lower-case(normalize-space(./AGGD))='n.r.' or lower-case(normalize-space(./AGGD))='nr (recupero pregresso)')">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./AGGD)))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./AGGD)" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./AGGD)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./AGGD)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- Participant role AGGN -->
				<xsl:for-each select="./AGGN">
					<xsl:if test=".">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-agg-', position(), '-', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Responsabile ricerca e redazione di aggiornamento: ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Update responsible compilation: ', normalize-space(.))" />
							</rdfs:label>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
	                            </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- Role -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Responsible agent'" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Responsabile'" />
							</rdfs:label>
						</rdf:Description>
						<!-- Agent -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
				<!-- Participant role - AGGE -->
				<xsl:for-each select="./AGGE">
					<xsl:if test=".">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-agg-', position(), '-', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Ente responsabile di aggiornamento ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Update responsible agency ', normalize-space(.))" />
							</rdfs:label>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
	                            </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- Role -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Responsible agent'" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of
									select="'Responsabile'" />
							</rdfs:label>
						</rdf:Description>
						<!-- Agent -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
				<!-- Participant role - AGGR -->
				<xsl:for-each select="./AGGR">
					<xsl:if test=".">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-agg-', position(), '-', arco-fn:arcofy(normalize-space(.)))" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Referente scientifico di aggiornamento ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Update scientific revisor ', normalize-space(.))" />
							</rdfs:label>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
	                            </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- Role -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Scientific director'" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of
									select="'Direttore scientifico'" />
							</rdfs:label>
						</rdf:Description>
						<!-- Agent -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                                <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                            </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:for-each>
			<!-- Funzionario responsabile -->
			<xsl:for-each select="record/metadata/schede/*/CM/FUR">
				<xsl:if test="(not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', arco-fn:arcofy(concat(./@hint, '-', .)))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat(./@hint, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Official in charge', ': ', normalize-space(.))" />
						</rdfs:label>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Role/OfficialInCharge')" />
	                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- Agent: Funzionario responsabile -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
					</rdf:Description>
					<!-- Role: Funzionario responsabile -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Role/OfficialInCharge')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="normalize-space(./@hint)" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Official in charge'" />
						</rdfs:label>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Funzionario responsabile - AGGF -->
			<xsl:for-each select="record/metadata/schede/*/CM/AGG/AGGF">
				<xsl:if test=". and not(lower-case(normalize-space(.))='nr' or lower-case(normalize-space(.))='n.r.' or lower-case(normalize-space(.))='nr (recupero pregresso)')">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', arco-fn:arcofy(concat(./@hint, '-', .)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat(./AGGF/@hint, ' di aggiornamento: ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Update official in charge', ': ', normalize-space(.))" />
						</rdfs:label>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="concat($NS, 'Role/OfficialInCharge')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- Agent: Funzionario responsabile AGGF -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
					</rdf:Description>
					<!-- Role funzionario responsabile -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Role/OfficialInCharge')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="normalize-space(./@hint)" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Official in charge'" />
						</rdfs:label>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Version time interval - CMD -->
			<xsl:for-each select="record/metadata/schede/*/CM/CMP/CMPD[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space()))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space()" />
					</rdfs:label>
					<tiapit:startTime>
						<xsl:value-of select="normalize-space()" />
					</tiapit:startTime>
					<tiapit:endTime>
						<xsl:value-of select="normalize-space()" />
					</tiapit:endTime>
				</rdf:Description>
			</xsl:for-each>
			<!-- Version time interval - RVM -->
			<xsl:if test="record/metadata/schede/*/CM/RVM/RVMD and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CM/RVM/RVMD)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CM/RVM/RVMD)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(record/metadata/schede/*/CM/RVM/RVMD)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/CM/RVM/RVMD)" />
					</rdfs:label>
					<tiapit:startTime>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/CM/RVM/RVMD)" />
					</tiapit:startTime>
					<tiapit:endTime>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/CM/RVM/RVMD)" />
					</tiapit:endTime>
				</rdf:Description>
			</xsl:if>
			<!-- Participant role - Compilation -->
			<xsl:for-each select="record/metadata/schede/*/CM/CMP/CMPN">
				<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-compilation-', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Compilation by ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Compilazione da ', normalize-space(.))" />
						</rdfs:label>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Role/ResponsibleCompilation')" />
	                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- responsible research and compilation Agent -->
			<xsl:for-each select="record/metadata/schede/*/CM/CMP/CMPN">
				<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
					</rdf:Description>
					<!-- responsible research and compilation role -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Role/ResponsibleCompilation')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Responsible research and compilation'" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Responsabile ricerca e redazione'" />
						</rdfs:label>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Participant role - RVME -->
			<xsl:if test="record/metadata/schede/*/CM/RVM/RVME and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CM/RVM/RVME)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CM/RVM/RVME)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-rvm-', arco-fn:arcofy(record/metadata/schede/*/CM/RVM/RVME))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat(record/metadata/schede/*/CM/RVM/@hint, ' da ', normalize-space(record/metadata/schede/*/CM/RVM/RVME))" />
					</rdfs:label>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Digital transcription', ' by ', normalize-space(record/metadata/schede/*/CM/RVM/RVME))" />
					</rdfs:label>
					<arco-core:hasRole>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
                        </xsl:attribute>
					</arco-core:hasRole>
					<arco-core:hasAgent>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(record/metadata/schede/*/CM/RVM/RVME))" />
                        </xsl:attribute>
					</arco-core:hasAgent>
				</rdf:Description>
				<!-- digital transcription responsible agent -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(record/metadata/schede/*/CM/RVM/RVME))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="arco-fn:name-cleaner(record/metadata/schede/*/CM/RVM/RVME)" />
					</rdfs:label>
				</rdf:Description>
				<!-- digital transcription responsible agent role -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="'Responsible agent'" />
					</rdfs:label>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="'Responsabile'" />
					</rdfs:label>
				</rdf:Description>
			</xsl:if>
			<!-- Participant role - RVMN -->
			<xsl:for-each select="record/metadata/schede/*/CM/RVM/RVMN[not(starts-with(lower-case(normalize-space(.)), 'nr') or starts-with(lower-case(normalize-space(.)), 'n.r'))]">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-rvm-', arco-fn:arcofy(.))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat(../@hint, ' da ', normalize-space(.))" />
					</rdfs:label>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Digital transcription', ' by ', normalize-space(.))" />
					</rdfs:label>
					<arco-core:hasRole>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'Role/Operator')" />
                        </xsl:attribute>
					</arco-core:hasRole>
					<arco-core:hasAgent>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                        </xsl:attribute>
					</arco-core:hasAgent>
				</rdf:Description>
				<!-- digital transcription agent -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="arco-fn:name-cleaner(.)" />
					</rdfs:label>
				</rdf:Description>
				<!-- digital transcription operator role -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Role/Operator')" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="'Operator'" />
					</rdfs:label>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="'Operatore'" />
					</rdfs:label>
				</rdf:Description>
			</xsl:for-each>
			
			<!-- Related Classes in cultural-property.xslt as individual -->
			<!-- Unique identifier -->
			<xsl:if test="record/metadata/schede/*/CD/NCT/NCTN">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'UniqueIdentifier/', $itemURI)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                </xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
			                <xsl:value-of select="'https://w3id.org/arco/ontology/core/UniqueIdentifier'" />
				        </xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS)" />
					</l0:name>
					<arco-core:identifier>
						<xsl:value-of select="concat(record/metadata/schede/*/CD/NCT/NCTR, record/metadata/schede/*/CD/NCT/NCTN, record/metadata/schede/*/CD/NCT/NCTS)" />
					</arco-core:identifier>
					<arco-core:issuedBy>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
						</xsl:attribute>
					</arco-core:issuedBy>
					<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:if>
			<!-- Subject as an individual -->
			<xsl:for-each select="record/metadata/schede/*/*/SGT/SGTI [not(starts-with(lower-case(normalize-space()), 'nr')) and not(starts-with(lower-case(normalize-space()), 'n.r'))]">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
	           			<xsl:value-of select="concat($NS, 'Subject/', $itemURI, arco-fn:arcofy(.))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                      		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Subject'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:call-template name="CamelCase">
							<xsl:with-param name="text" select="normalize-space(.)" />
						</xsl:call-template>
					</rdfs:label>
					<l0:name>
						<xsl:call-template name="CamelCase">
							<xsl:with-param name="text" select="normalize-space(.)" />
						</xsl:call-template>
					</l0:name>
					<xsl:for-each select="../SGTD">
						<arco-cd:subjectDescription>
							<xsl:value-of select="." />
						</arco-cd:subjectDescription>
					</xsl:for-each>
					<arco-core:isClassifiedBy>
						<xsl:attribute name="rdf:resource">
        	       			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(.))" />
            	   		</xsl:attribute>
					</arco-core:isClassifiedBy>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
	           			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(.))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                      		<xsl:value-of select="'https://w3id.org/arco/ontology/core/Concept'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:call-template name="CamelCase">
							<xsl:with-param name="text" select="normalize-space(.)" />
						</xsl:call-template>
					</rdfs:label>
					<l0:name>
						<xsl:call-template name="CamelCase">
							<xsl:with-param name="text" select="normalize-space(.)" />
						</xsl:call-template>
					</l0:name>
				</rdf:Description>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/*/THS">
				<xsl:if test="./THSD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	   	        			<xsl:value-of select="concat($NS, 'Subject/', arco-fn:arcofy(./THSD))" />
           				</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Subject'" />
       		                </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(./THSD)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(./THSD)" />
							</xsl:call-template>
						</l0:name>
						<arco-core:isClassifiedBy>
							<xsl:attribute name="rdf:resource">
        	    	   			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(./THSD))" />
            		   		</xsl:attribute>
						</arco-core:isClassifiedBy>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	        	   			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(./THSD))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                      			<xsl:value-of select="'https://w3id.org/arco/ontology/core/Concept'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(./THSD)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(./THSD)" />
							</xsl:call-template>
						</l0:name>
						<xsl:if test="./THST">
							<arco-cd:thesaurus>
								<xsl:value-of select="./THST" />
							</arco-cd:thesaurus>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/NU/DA/DES/DESU">
				<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Subject/', $itemURI, arco-fn:arcofy(.))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                          		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Subject'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</l0:name>
						<arco-core:isClassifiedBy>
							<xsl:attribute name="rdf:resource">
        	    	   			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(.))" />
            		   		</xsl:attribute>
						</arco-core:isClassifiedBy>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	        	   			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                      			<xsl:value-of select="'https://w3id.org/arco/ontology/core/Concept'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/DA/AID/AIDI">
				<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Subject/', $itemURI, arco-fn:arcofy(.))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Subject'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</l0:name>
						<arco-core:isClassifiedBy>
							<xsl:attribute name="rdf:resource">
        	    	   			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(.))" />
            		   		</xsl:attribute>
						</arco-core:isClassifiedBy>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	        	   			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                      			<xsl:value-of select="'https://w3id.org/arco/ontology/core/Concept'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Title as an individual -->
			<xsl:for-each select="record/metadata/schede/*/SG/SGL/SGLL">
				<xsl:choose>
					<xsl:when test="(starts-with(lower-case(normalize-space(.)), 'nr')) or (starts-with(lower-case(normalize-space(.)), 'n.r'))">
						<xsl:value-of />
					</xsl:when>
					<xsl:otherwise>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
            				</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ParallelTitle'" />
            					</xsl:attribute>
							</arco-core:hasType>
							<xsl:if test="../SGLS">
								<arco-core:specifications>
									<xsl:value-of select="normalize-space(../SGLS)" />
								</arco-core:specifications>
							</xsl:if>
						</rdf:Description>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/OG/SGT/SGTT">
				<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
            			</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
						<xsl:if test="../SGTL and (not(starts-with(lower-case(normalize-space(../SGTL)), 'nr')) and not(starts-with(lower-case(normalize-space(../SGTL)), 'n.r')))">
							<arco-cd:hasInterpretationCriterion>
								<xsl:attribute name="rdf:resource">
	            					<xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space(../SGTL)))" />
	            				</xsl:attribute>
							</arco-cd:hasInterpretationCriterion>
						</xsl:if>
					</rdf:Description>
					<!-- Title source as an individual -->
					<xsl:if test="../SGTL">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                				<xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space(../SGTL)))" />
                			</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InterpretationCriterion'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(../SGTL)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(../SGTL)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/DA/AID/AIDT">
				<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
            			</xsl:attribute>
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/DA/AID/AIDN">
				<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
            			</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AlternativeTitle'" />
            				</xsl:attribute>
						</arco-core:hasType>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/OG/SGT/SGTP">
			<xsl:if test="not($sheetType='PST' or 'SMO')">
				<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
            			</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ProperTitle'" />
            				</xsl:attribute>
						</arco-core:hasType>
						<xsl:if test="../SGTL and (not(starts-with(lower-case(normalize-space(../SGTL)), 'nr')) and not(starts-with(lower-case(normalize-space(../SGTL)), 'n.r')))">
							<dcterms:source>
	            				<xsl:value-of select="(normalize-space(../SGTL))" />
							</dcterms:source>
						</xsl:if>
						<arco-cd:isTitleOf>
							<xsl:attribute name="rdf:resource"> 
								<xsl:value-of select="$culturalProperty" /> 
							</xsl:attribute>
						</arco-cd:isTitleOf>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/SG/SGL/SGLT">
				<xsl:choose>
					<xsl:when test="(starts-with(lower-case(normalize-space(.)), 'nr')) or (starts-with(lower-case(normalize-space(.)), 'n.r'))" />
					<xsl:otherwise>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
            			</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ProperTitle'" />
            					</xsl:attribute>
							</arco-core:hasType>
							<xsl:if test="../SGLS">
								<arco-core:specifications>
									<xsl:value-of select="normalize-space(../SGLS)" />
								</arco-core:specifications>
							</xsl:if>
						</rdf:Description>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/OG/SGT/SGTR">
				<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
            			</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ParallelTitle'" />
            				</xsl:attribute>
						</arco-core:hasType>
						<xsl:if test="../SGTL and (not(starts-with(lower-case(normalize-space(../SGTL)), 'nr')) and not(starts-with(lower-case(normalize-space(../SGTL)), 'n.r')))">
							<arco-cd:hasInterpretationCriterion>
								<xsl:attribute name="rdf:resource">
	            					<xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space(../SGTL)))" />
	            				</xsl:attribute>
							</arco-cd:hasInterpretationCriterion>
						</xsl:if>
					</rdf:Description>
					<!-- Title source as an individual -->
					<xsl:if test="../SGTL">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                				<xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space(../SGTL)))" />
                			</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InterpretationCriterion'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(../SGTL)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(../SGTL)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/SG/SGL/SGLA">
				<xsl:choose>
					<xsl:when test="(starts-with(lower-case(normalize-space(.)), 'nr')) or (starts-with(lower-case(normalize-space(.)), 'n.r'))" />
					<xsl:otherwise>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
	            			</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
	            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AttributedTitle'" />
	            				</xsl:attribute>
							</arco-core:hasType>
							<xsl:if test="../SGLS">
								<arco-core:specifications>
									<xsl:value-of select="normalize-space(../SGLS)" />
								</arco-core:specifications>
							</xsl:if>
						</rdf:Description>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:for-each>
			
			<!-- decorative apparatus -->
			<xsl:if test="record/metadata/schede/*/DA/APF/*">
				<xsl:for-each select="record/metadata/schede/*/DA/APF">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'IconographicOrDecorativeApparatus/', $itemURI, '-decorative-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/IconographicOrDecorativeApparatus'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Apparato decorativo ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Apparato decorativo ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Decorative apparatus ', position(), ' of the cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Decorative apparatus ', position(), ' of the cultural property ', $itemURI)" />
						</l0:name>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/DecorativeApparatus'" />
							</xsl:attribute>
						</arco-core:hasType>
						<xsl:if test="./APFF and (not(starts-with(lower-case(normalize-space(./APFF)), 'nr')) and not(starts-with(lower-case(normalize-space(./APFF)), 'n.r')))">
							<arco-cd:hasFunctionalPurpose>
								<xsl:attribute name="rdf:resource">
			                		<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(./APFF)))" />
		 	                	</xsl:attribute>
							</arco-cd:hasFunctionalPurpose>
						</xsl:if>
						<xsl:if test="./APFT and (not(starts-with(lower-case(normalize-space(./APFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./APFT)), 'n.r')))">
							<arco-dd:hasOrnamentalMotif>
								<xsl:attribute name="rdf:resource">
			                		<xsl:value-of select="concat($NS, 'OrnamentalMotif/', arco-fn:urify(normalize-space(./APFT)))" />
		 	                	</xsl:attribute>
							</arco-dd:hasOrnamentalMotif>
						</xsl:if>
						<xsl:if test="./APFE and (not(starts-with(lower-case(normalize-space(./APFE)), 'nr')) and not(starts-with(lower-case(normalize-space(APFE)), 'n.r')))">
							<arco-dd:hasTechnicalStatus>
								<xsl:attribute name="rdf:resource">
			                		<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-decorative-', position())" />
		 	                	</xsl:attribute>
							</arco-dd:hasTechnicalStatus>
							<arco-lite:hasMaterialOrTechnique>
								<xsl:attribute name="rdf:resource">
			            			<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(./APFE)))" />
			            		</xsl:attribute>
							</arco-lite:hasMaterialOrTechnique>
						</xsl:if>
					</rdf:Description>
					<!-- functional purpose -->
					<xsl:if test="./APFF and (not(starts-with(lower-case(normalize-space(./APFF)), 'nr')) and not(starts-with(lower-case(normalize-space(./APFF)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(./APFF)))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/UseFunction" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./APFF)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./APFF)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- ornamental motif -->
					<xsl:if test="./APFT and (not(starts-with(lower-case(normalize-space(./APFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./APFT)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'OrnamentalMotif/', arco-fn:urify(normalize-space(./APFT)))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/OrnamentalMotif" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./APFT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./APFT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- technical status -->
					<xsl:if test="./APFE and (not(starts-with(lower-case(normalize-space(./APFE)), 'nr')) and not(starts-with(lower-case(normalize-space(./APFE)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		            			<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-decorative-', position())" />
		            		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Stato tecnico dell''apparato figurativo ', position(), ' del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Stato tecnico dell''apparato figurativo ', position(), ' del bene culturale ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Technical status of decorative apparatus ', position(), ' of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Technical status of decorative apparatus ', position(), ' of cultural property ', $itemURI)" />
							</l0:name>
							<arco-dd:includesTechnicalCharacteristic>
								<xsl:attribute name="rdf:resource">
		            				<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(./APFE)))" />
		            			</xsl:attribute>
							</arco-dd:includesTechnicalCharacteristic>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						</rdf:Description>
						<!-- Technical characteristic as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		            			<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(./APFE)))" />
		            		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./APFE)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./APFE)" />
							</l0:name>
							<arco-dd:isCharacteristicClassifiedBy>
								<xsl:attribute name="rdf:resource">
		            				<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MaterialOrTechnique'" />
		            			</xsl:attribute>
							</arco-dd:isCharacteristicClassifiedBy>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<xsl:for-each select="record/metadata/schede/*/DE/DEC">	
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'IconographicOrDecorativeApparatus/', $itemURI, '-decorative-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                          	<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/IconographicOrDecorativeApparatus'" />
                       	</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Apparato decorativo ', position(), ' del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Apparato decorativo ', position(), ' del bene culturale ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Decorative apparatus ', position(), ' of the cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Decorative apparatus ', position(), ' of the cultural property ', $itemURI)" />
					</l0:name>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
						<xsl:choose>
							<xsl:when test="./DECT">
								<xsl:choose>
									<xsl:when test="./DECQ">
										<xsl:value-of select="concat($NS, 'DecorativeApparatusType/', $itemURI, arco-fn:urify(normalize-space(concat(./DECT, '-', string-join(./DECQ, '-')))))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'DecorativeApparatusType/', $itemURI, arco-fn:urify(normalize-space(./DECT)))" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:when>
							<xsl:otherwise>
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/DecorativeApparatus'" />
							</xsl:otherwise>	
						</xsl:choose>
						</xsl:attribute>
					</arco-core:hasType>
					<xsl:if test="./DECM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-dd:hasTechnicalStatus>
							<xsl:attribute name="rdf:resource">
			               		<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-decorative-', position())" />
		 	               	</xsl:attribute>
						</arco-dd:hasTechnicalStatus>
						<xsl:for-each select="./DECM">
							<arco-lite:hasMaterial>
								<xsl:attribute name="rdf:resource">
					              		<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
		 	    		          	</xsl:attribute>
							</arco-lite:hasMaterial>
						</xsl:for-each>
					</xsl:if>
					<xsl:if test="./DECL">
						<arco-con:spatialLocation>
							<xsl:value-of 	select="normalize-space(./DECL)" />
						</arco-con:spatialLocation>
					</xsl:if>
				</rdf:Description>
				<!-- decorative apparatus type -->
				<xsl:if test="./DECT and (not(starts-with(lower-case(normalize-space(./DECT)), 'nr')) and not(starts-with(lower-case(normalize-space(./DECT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
		           			<xsl:choose>
								<xsl:when test="./DECQ">
									<xsl:value-of select="concat($NS, 'DecorativeApparatusType/', $itemURI, arco-fn:urify(normalize-space(concat(./DECT, '-', string-join(./DECQ, '-')))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'DecorativeApparatusType/', $itemURI, arco-fn:urify(normalize-space(./DECT)))" />
								</xsl:otherwise>
							</xsl:choose>
		           		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/DecorativeApparatusType'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./DECQ">
									<xsl:value-of select="concat( ./DECT, ' ', string-join(./DECQ, ', '))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="./DECT" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./DECQ">
									<xsl:value-of select="concat( ./DECT, ' ', string-join(./DECQ, ', '))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="./DECT" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- technical status -->
				<xsl:if test="./DECM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
		           			<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-decorative-', position())" />
		           		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Stato tecnico dell''apparato decorativo ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Stato tecnico dell''apparato decorativo ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Technical status of decorative apparatus ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Technical status of decorative apparatus ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						<xsl:for-each select="./DECM">
							<arco-dd:includesTechnicalCharacteristic>
								<xsl:attribute name="rdf:resource">
		           					<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
			           			</xsl:attribute>
							</arco-dd:includesTechnicalCharacteristic>
						</xsl:for-each>
					</rdf:Description>
					<!-- Technical characteristic as an individual -->
					<xsl:for-each select="./DECM">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
			           			<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
			           		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
							<arco-dd:isCharacteristicClassifiedBy>
								<xsl:attribute name="rdf:resource">
		    	       				<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Material'" />
			           			</xsl:attribute>
							</arco-dd:isCharacteristicClassifiedBy>
						</rdf:Description>
					</xsl:for-each>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/DA/AID">	
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'IconographicOrDecorativeApparatus/', $itemURI, '-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="(lower-case(normalize-space(./AIDO))='apparato iconografico')">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/IconographicApparatus'" />
								</xsl:when>
								<xsl:when test="(lower-case(normalize-space(./AIDO))='apparato decorativo')">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/DecorativeApparatus'" />
								</xsl:when>
								<xsl:when test="(lower-case(normalize-space(./AIDO))='apparato decorativo')">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/IconographicAndDecorativeApparatus'" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/IconographicOrDecorativeApparatus'" />
								</xsl:otherwise>
							</xsl:choose>
                       	</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Apparato iconografico o decorativo ', position(), ' del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Apparato iconografico o decorativo ', position(), ' del bene culturale ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Iconographic or decorative apparatus ', position(), ' of the cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Iconographic or decorative apparatus ', position(), ' of the cultural property ', $itemURI)" />
					</l0:name>
					<xsl:if test="not(./*)">
						<arco-core:description>
							<xsl:value-of select="normalize-space(.)" />
						</arco-core:description>
					</xsl:if>
					<xsl:if test="./AIDI and not(starts-with(lower-case(normalize-space(./AIDI)), 'nr')) and not(starts-with(lower-case(normalize-space(./AIDI)), 'n.r'))">
						<arco-cd:hasSubject>
							<xsl:attribute name="rdf:resource">
	                    		<xsl:value-of select="concat($NS, 'Subject/', $itemURI, arco-fn:arcofy(./AIDI))" />
	                    	</xsl:attribute>
						</arco-cd:hasSubject>
					</xsl:if>
					<xsl:if test="./AIDD">
						<arco-core:description>
							<xsl:value-of select="normalize-space(./AIDD)" />
						</arco-core:description>
					</xsl:if>
					<xsl:if test="$sheetType='SCAN'">
						<arco-core:description>
							<xsl:value-of select="normalize-space(.)" />
						</arco-core:description>
					</xsl:if>
					<xsl:if test="./AIDP">
						<arco-dd:positionOnCulturalProperty>
							<xsl:value-of select="normalize-space(./AIDP)" />
						</arco-dd:positionOnCulturalProperty>
					</xsl:if>
					<xsl:if test="./AIDS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./AIDS)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./AIDT and not(starts-with(lower-case(normalize-space(./AIDT)), 'nr')) and not(starts-with(lower-case(normalize-space(./AIDT)), 'n.r'))">
						<arco-lite:title>
							<xsl:value-of select="normalize-space(./AIDT)" />
						</arco-lite:title>
						<arco-cd:hasTitle>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(./AIDT)))" />
							</xsl:attribute>
						</arco-cd:hasTitle>
					</xsl:if>
					<xsl:if test="./AIDN and not(starts-with(lower-case(normalize-space(./AIDN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AIDN)), 'n.r'))">
						<arco-lite:alternativeTitle>
							<xsl:value-of select="normalize-space(./AIDN)" />
						</arco-lite:alternativeTitle>
						<arco-cd:hasTitle>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-', arco-fn:urify(normalize-space(./AIDN)))" />
							</xsl:attribute>
						</arco-cd:hasTitle>
					</xsl:if>
				</rdf:Description>
			</xsl:for-each>
			<!-- other cultural property records -->
			<xsl:for-each select="record/metadata/schede/*/AC/ACS">
				<xsl:if test="./*">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Record/', $itemURI, '-', position())" />
						</xsl:attribute>
						<arco-catalogue:describes>
							<xsl:attribute name="rdf:resource">
								 <xsl:value-of select="$objectOfDescription" />
               		 		</xsl:attribute>
						</arco-catalogue:describes>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/catalogue/Record" />
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Scheda ', position(), ' che descrive il bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Scheda ', position(), ' che descrive il bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Record ', position(), ' describing cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Record ', position(), ' describing cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./ACSC">
							<arco-lite:localIdentifier>
								<xsl:value-of select="normalize-space(./ACSC)" />
							</arco-lite:localIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'LocalIdentifier/', $itemURI, arco-fn:arcofy(./ACSC))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./ACSS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./ACSS)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./ACSP and (not(starts-with(lower-case(normalize-space(./ACSP)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACSP)), 'n.r')))">
							<arco-catalogue:referenceProject>
								<xsl:value-of select="normalize-space(./ACSP)" />
							</arco-catalogue:referenceProject>
						</xsl:if>
						<xsl:if test="./ACSW and (not(starts-with(lower-case(normalize-space(./ACSW)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACSW)), 'n.r')))">
							<smapit:URL>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="./ACSW" />
								</xsl:attribute>
							</smapit:URL>
						</xsl:if>
						<xsl:if test="./ACSE and (not(starts-with(lower-case(normalize-space(./ACSE)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACSE)), 'n.r')))">
							<arco-lite:hasRecordResponsibleAgent>
								<xsl:attribute name="rdf:resource">
			                		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ACSE))" />
			                	</xsl:attribute>
							</arco-lite:hasRecordResponsibleAgent>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-record-', position(), '-responsible-agent')" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
					</rdf:Description>
					<!-- identifier as an individual -->
					<xsl:if test="./ACSC">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'LocalIdentifier/', $itemURI, arco-fn:arcofy(./ACSC))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		        	        	</xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
		        	        	</xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ACSC)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ACSC)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./ACSC)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="false()" />
							</arco-core:current>
						</rdf:Description>
					</xsl:if>
					<!-- agent role as an individual -->
					<xsl:if test="./ACSE and (not(starts-with(lower-case(normalize-space(./ACSE)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACSE)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-record-', position(), '-responsible-agent')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Agente responsabile della scheda ', position(), ' che descrive il bene culturale ', $itemURI, ': ', normalize-space(./ACSE))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Responsible agent for record ', position(), ' describing cultural property ', $itemURI, ': ', normalize-space(./ACSE))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Agente responsabile della scheda ', position(), ' che descrive il bene culturale ', $itemURI, ': ', normalize-space(./ACSE))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Responsible agent for record ', position(), ' describing cultural property ', $itemURI, ': ', normalize-space(./ACSE))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/RecordResponsibleAgent')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ACSE))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/RecordResponsibleAgent')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Agente responsabile di scheda'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Record responsible agent'" />
							</rdfs:label>
							<arco-core:isRoleOf>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-record-', position(), '-responsible-agent')" />
								</xsl:attribute>
							</arco-core:isRoleOf>
						</rdf:Description>
						<!-- agent as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ACSE))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./ACSE)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./ACSE)" />
							</l0:name>
							<arco-core:isAgentOf>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-record-', position(), '-responsible-agent')" />
								</xsl:attribute>
							</arco-core:isAgentOf>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/AC/MOD">
				<xsl:if test="./*">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Record/', $itemURI, '-modi-', position())" />
						</xsl:attribute>
						<arco-catalogue:describes>
							<xsl:attribute name="rdf:resource">
								 <xsl:value-of select="$objectOfDescription" />
               		 		</xsl:attribute>
						</arco-catalogue:describes>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/catalogue/Record" />
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Scheda MODI ', position(), ' che descrive il bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Scheda MODI ', position(), ' che descrive il bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('MODI Record ', position(), ' describing cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('MODI Record ', position(), ' describing cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./MODI">
							<arco-lite:localIdentifier>
								<xsl:value-of select="normalize-space(./MODI)" />
							</arco-lite:localIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'MODIIdentifier/', $itemURI, arco-fn:arcofy(./MODI))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./MODS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./MODS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- identifier as an individual -->
					<xsl:if test="./MODI">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'MODIIdentifier/', $itemURI, arco-fn:arcofy(./MODI))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		        	        	</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./MODI)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./MODI)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./MODI)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- reference coin legend (NU) -->
			<xsl:if test="record/metadata/schede/NU/OG/OGT/OGTL">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ReferenceCoinLegend/', arco-fn:urify(normalize-space(record/metadata/schede/NU/OG/OGT/OGTL)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/arco/ReferenceCoinLegend'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTL)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTL)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- cultural property cataloguing category -->
			<xsl:if test="record/metadata/schede/*/OG/OGT/OGTV">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CulturalPropertyCataloguingCategory/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTV)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCataloguingCategory'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTV)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTV)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/OG/OGV">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CulturalPropertyCataloguingCategory/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGV)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCataloguingCategory'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGV)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGV)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- relation with related work (RO/ROF) -->
			<xsl:if test="record/metadata/schede/*/RO/ROF">
				<xsl:for-each select="record/metadata/schede/*/RO/ROF">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-preparatory-final-work-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e opera originale o finale')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e opera originale o finale')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and preparatory or final work')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and preparatory or final work')" />
						</l0:name>
						<xsl:choose>
							<xsl:when test="lower-case(normalize-space(./ROFF))='calco' or lower-case(normalize-space(./ROFF))='calco parziale' or lower-case(normalize-space(./ROFF))='copia' or lower-case(normalize-space(./ROFF))='copia con varianti' or lower-case(normalize-space(./ROFF))='copia parziale' or lower-case(normalize-space(./ROFF))='derivazione' or lower-case(normalize-space(./ROFF))='derivazione con varianti' or lower-case(normalize-space(./ROFF))='derivazione parziale' or lower-case(normalize-space(./ROFF))='imitazione' or lower-case(normalize-space(./ROFF))='remake' or lower-case(normalize-space(./ROFF))='replica' or lower-case(normalize-space(./ROFF))='replica parziale' or lower-case(normalize-space(./ROFF))='replica con varianti' or lower-case(normalize-space(./ROFF))='positivo' or lower-case(normalize-space(./ROFF))='particolare' or lower-case(normalize-space(./ROFF))='fotomontaggio'">
								<arco-cd:involvesRelatedWork>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'PreparatoryWork/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)))" />
									</xsl:attribute>
								</arco-cd:involvesRelatedWork>
							</xsl:when>
							<xsl:when test="lower-case(normalize-space(./ROFF))='bozzetto' or lower-case(normalize-space(./ROFF))='bozzetto parziale' or lower-case(normalize-space(./ROFF))='cartone' or lower-case(normalize-space(./ROFF))='cartone parziale' or lower-case(normalize-space(./ROFF))='disegno preparatorio parziale' or lower-case(normalize-space(./ROFF))='disegno preparatorio' or lower-case(normalize-space(./ROFF))='matrice' or lower-case(normalize-space(./ROFF))='matrice parziale' or lower-case(normalize-space(./ROFF))='modellino' or lower-case(normalize-space(./ROFF))='modellino parziale' or lower-case(normalize-space(./ROFF))='modello' or lower-case(normalize-space(./ROFF))='modello parziale' or lower-case(normalize-space(./ROFF))='modello in cera' or lower-case(normalize-space(./ROFF))='progetto' or lower-case(normalize-space(./ROFF))='prototipo' or lower-case(normalize-space(./ROFF))='prova' or lower-case(normalize-space(./ROFF))='schizzo' or lower-case(normalize-space(./ROFF))='sinopia' or lower-case(normalize-space(./ROFF))='sinopia parziale' or lower-case(normalize-space(./ROFF))='negativo' or lower-case(normalize-space(./ROFF))='internegativo' or lower-case(normalize-space(./ROFF))='prova a contatto' or lower-case(normalize-space(./ROFF))='prova di stampa' or lower-case(normalize-space(./ROFF))='prova intermedia' or lower-case(normalize-space(./ROFF))='prova in controparte' or lower-case(normalize-space(./ROFF))='prova finale' or lower-case(normalize-space(./ROFF))='provino' or lower-case(normalize-space(./ROFF))='maquette'">
								<arco-cd:involvesRelatedWork>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'FinalWork/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)))" />
									</xsl:attribute>
								</arco-cd:involvesRelatedWork>
							</xsl:when>
							<xsl:otherwise>
								<arco-cd:involvesRelatedWork>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'PreparatoryOrFinalWork/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)))" />
									</xsl:attribute>
								</arco-cd:involvesRelatedWork>
							</xsl:otherwise>
						</xsl:choose>
						<xsl:if test="./ROFF and (not(starts-with(lower-case(normalize-space(./ROFF)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFF)), 'n.r')))">
							<arco-cd:hasRelationshipType>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'RelationshipType/', arco-fn:urify(normalize-space(./ROFF)))" />
								</xsl:attribute>
							</arco-cd:hasRelationshipType>
						</xsl:if>
						<xsl:if test="./ROFP">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./ROFP)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- related work as individuals -->
					<xsl:choose>
						<!-- preparatory work as an individual -->
						<xsl:when test="lower-case(normalize-space(./ROFF))='calco' or lower-case(normalize-space(./ROFF))='calco parziale' or lower-case(normalize-space(./ROFF))='copia' or lower-case(normalize-space(./ROFF))='copia con varianti' or lower-case(normalize-space(./ROFF))='copia parziale' or lower-case(normalize-space(./ROFF))='derivazione' or lower-case(normalize-space(./ROFF))='derivazione con varianti' or lower-case(normalize-space(./ROFF))='derivazione parziale' or lower-case(normalize-space(./ROFF))='imitazione' or lower-case(normalize-space(./ROFF))='remake' or lower-case(normalize-space(./ROFF))='replica' or lower-case(normalize-space(./ROFF))='replica parziale' or lower-case(normalize-space(./ROFF))='replica con varianti' or lower-case(normalize-space(./ROFF))='positivo' or lower-case(normalize-space(./ROFF))='particolare' or lower-case(normalize-space(./ROFF))='fotomontaggio'">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'PreparatoryWork/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
		                          		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PreparatoryWork'" />
		                       		</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Opera originale ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./ROFO))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Opera originale ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./ROFO))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Preparatory work ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./ROFO))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Preparatory work ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./ROFO))" />
								</l0:name>
								<xsl:if test="./ROFS and (not(starts-with(lower-case(normalize-space(./ROFS)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFS)), 'n.r')))">
									<arco-cd:hasSubject>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Subject/', $itemURI, arco-fn:arcofy(./ROFS))" />
										</xsl:attribute>
									</arco-cd:hasSubject>
								</xsl:if>
								<xsl:if test="./ROFR and (not(starts-with(lower-case(normalize-space(./ROFR)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFR)), 'n.r')))">
									<arco-cd:relatedWorkPreviousLocation>
										<xsl:value-of select="normalize-space(./ROFR)" />
									</arco-cd:relatedWorkPreviousLocation>
								</xsl:if>
								<xsl:if test="./ROFC and (not(starts-with(lower-case(normalize-space(./ROFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFC)), 'n.r')))">
									<arco-cd:relatedWorkLocation>
										<xsl:value-of select="normalize-space(./ROFC)" />
									</arco-cd:relatedWorkLocation>
								</xsl:if>
								<xsl:if test="./ROFX and (not(starts-with(lower-case(normalize-space(./ROFX)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFX)), 'n.r')))">
									<arco-lite:uniqueIdentifier>
										<xsl:value-of select="normalize-space(./ROFX)" />
									</arco-lite:uniqueIdentifier>
									<arco-core:hasIdentifier>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'UniqueIdentifier/', $itemURI, arco-fn:arcofy(./ROFX))" />
										</xsl:attribute>
									</arco-core:hasIdentifier>
								</xsl:if>
								<xsl:if test="./ROFI and (not(starts-with(lower-case(normalize-space(./ROFI)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFI)), 'n.r')))">
									<arco-lite:currentInventoryNumber>
										<xsl:value-of select="normalize-space(./ROFI)" />
									</arco-lite:currentInventoryNumber>
									<arco-cd:hasInventorySituation>
										<xsl:attribute name="rdf:resource">
		               						<xsl:value-of select="concat($NS, 'RelatedWorkInventorySistuation/', $itemURI, arco-fn:arcofy(./ROFI))" />
						               	</xsl:attribute>
									</arco-cd:hasInventorySituation>
								</xsl:if>
								<xsl:if test="./ROFT and (not(starts-with(lower-case(normalize-space(./ROFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFT)), 'n.r')))">
									<arco-cd:hasTitle>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-preparatory-final-work-title-', arco-fn:urify(normalize-space(./ROFT)))" />
										</xsl:attribute>
									</arco-cd:hasTitle>
								</xsl:if>
								<xsl:if test="./ROFA and (not(starts-with(lower-case(normalize-space(./ROFA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFA)), 'n.r')))">
									<arco-lite:hasAuthor>
										<xsl:attribute name="rdf:resource">
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ROFA))" />
			            				</xsl:attribute>
									</arco-lite:hasAuthor>
								</xsl:if>
							</rdf:Description>
						</xsl:when>
						<!-- final work as an individual -->
						<xsl:when test="lower-case(normalize-space(./ROFF))='bozzetto' or lower-case(normalize-space(./ROFF))='bozzetto parziale' or lower-case(normalize-space(./ROFF))='cartone' or lower-case(normalize-space(./ROFF))='cartone parziale' or lower-case(normalize-space(./ROFF))='disegno preparatorio parziale' or lower-case(normalize-space(./ROFF))='disegno preparatorio' or lower-case(normalize-space(./ROFF))='matrice' or lower-case(normalize-space(./ROFF))='matrice parziale' or lower-case(normalize-space(./ROFF))='modellino' or lower-case(normalize-space(./ROFF))='modellino parziale' or lower-case(normalize-space(./ROFF))='modello' or lower-case(normalize-space(./ROFF))='modello parziale' or lower-case(normalize-space(./ROFF))='modello in cera' or lower-case(normalize-space(./ROFF))='progetto' or lower-case(normalize-space(./ROFF))='prototipo' or lower-case(normalize-space(./ROFF))='prova' or lower-case(normalize-space(./ROFF))='schizzo' or lower-case(normalize-space(./ROFF))='sinopia' or lower-case(normalize-space(./ROFF))='sinopia parziale' or lower-case(normalize-space(./ROFF))='negativo' or lower-case(normalize-space(./ROFF))='internegativo' or lower-case(normalize-space(./ROFF))='prova a contatto' or lower-case(normalize-space(./ROFF))='prova di stampa' or lower-case(normalize-space(./ROFF))='prova intermedia' or lower-case(normalize-space(./ROFF))='prova in controparte' or lower-case(normalize-space(./ROFF))='prova finale' or lower-case(normalize-space(./ROFF))='provino' or lower-case(normalize-space(./ROFF))='maquette'">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'FinalWork/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	                          			<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/FinalWork'" />
	                       			</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Opera finale ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./ROFO))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Opera finale ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./ROFO))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Final work ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./ROFO))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Final work ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./ROFO))" />
								</l0:name>
								<xsl:if test="./ROFS and (not(starts-with(lower-case(normalize-space(./ROFS)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFS)), 'n.r')))">
									<arco-cd:hasSubject>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Subject/', $itemURI, arco-fn:arcofy(./ROFS))" />
										</xsl:attribute>
									</arco-cd:hasSubject>
								</xsl:if>
								<xsl:if test="./ROFR and (not(starts-with(lower-case(normalize-space(./ROFR)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFR)), 'n.r')))">
									<arco-cd:relatedWorkPreviousLocation>
										<xsl:value-of select="normalize-space(./ROFR)" />
									</arco-cd:relatedWorkPreviousLocation>
								</xsl:if>
								<xsl:if test="./ROFC and (not(starts-with(lower-case(normalize-space(./ROFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFC)), 'n.r')))">
									<arco-cd:relatedWorkLocation>
										<xsl:value-of select="normalize-space(./ROFC)" />
									</arco-cd:relatedWorkLocation>
								</xsl:if>
								<xsl:if test="./ROFX and (not(starts-with(lower-case(normalize-space(./ROFX)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFX)), 'n.r')))">
									<arco-lite:uniqueIdentifier>
										<xsl:value-of select="normalize-space(./ROFX)" />
									</arco-lite:uniqueIdentifier>
									<arco-core:hasIdentifier>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'UniqueIdentifier/', $itemURI, arco-fn:arcofy(./ROFX))" />
										</xsl:attribute>
									</arco-core:hasIdentifier>
								</xsl:if>
								<xsl:if test="./ROFI and (not(starts-with(lower-case(normalize-space(./ROFI)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFI)), 'n.r')))">
									<arco-lite:currentInventoryNumber>
										<xsl:value-of select="normalize-space(./ROFI)" />
									</arco-lite:currentInventoryNumber>
									<arco-cd:hasInventorySituation>
										<xsl:attribute name="rdf:resource">
		               						<xsl:value-of select="concat($NS, 'RelatedWorkInventorySistuation/', $itemURI, arco-fn:arcofy(./ROFI))" />
						               	</xsl:attribute>
									</arco-cd:hasInventorySituation>
								</xsl:if>
								<xsl:if test="./ROFT and (not(starts-with(lower-case(normalize-space(./ROFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFT)), 'n.r')))">
									<arco-cd:hasTitle>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-preparatory-final-work-title-', arco-fn:urify(normalize-space(./ROFT)))" />
										</xsl:attribute>
									</arco-cd:hasTitle>
								</xsl:if>
								<xsl:if test="./ROFA and (not(starts-with(lower-case(normalize-space(./ROFA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFA)), 'n.r')))">
									<arco-lite:hasAuthor>
										<xsl:attribute name="rdf:resource">
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ROFA))" />
			            				</xsl:attribute>
									</arco-lite:hasAuthor>
								</xsl:if>
							</rdf:Description>
						</xsl:when>
						<!-- related work as an individual -->
						<xsl:otherwise>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'PreparatoryOrFinalWork/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
		                          		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PreparatoryOrFinalWork'" />
		                       		</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Opera originale o finale ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./ROFO))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Opera originale o finale ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./ROFO))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Preparatory or final work ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./ROFO))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Preparatory or final work ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./ROFO))" />
								</l0:name>
								<xsl:if test="./ROFS and (not(starts-with(lower-case(normalize-space(./ROFS)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFS)), 'n.r')))">
									<arco-cd:hasSubject>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Subject/', $itemURI, arco-fn:arcofy(./ROFS))" />
										</xsl:attribute>
									</arco-cd:hasSubject>
								</xsl:if>
								<xsl:if test="./ROFR and (not(starts-with(lower-case(normalize-space(./ROFR)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFR)), 'n.r')))">
									<arco-cd:relatedWorkPreviousLocation>
										<xsl:value-of select="normalize-space(./ROFR)" />
									</arco-cd:relatedWorkPreviousLocation>
								</xsl:if>
								<xsl:if test="./ROFC and (not(starts-with(lower-case(normalize-space(./ROFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFC)), 'n.r')))">
									<arco-cd:relatedWorkLocation>
										<xsl:value-of select="normalize-space(./ROFC)" />
									</arco-cd:relatedWorkLocation>
								</xsl:if>
								<xsl:if test="./ROFX and (not(starts-with(lower-case(normalize-space(./ROFX)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFX)), 'n.r')))">
									<arco-lite:uniqueIdentifier>
										<xsl:value-of select="normalize-space(./ROFX)" />
									</arco-lite:uniqueIdentifier>
									<arco-core:hasIdentifier>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'UniqueIdentifier/', $itemURI, arco-fn:arcofy(./ROFX))" />
										</xsl:attribute>
									</arco-core:hasIdentifier>
								</xsl:if>
								<xsl:if test="./ROFI and (not(starts-with(lower-case(normalize-space(./ROFI)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFI)), 'n.r')))">
									<arco-lite:currentInventoryNumber>
										<xsl:value-of select="normalize-space(./ROFI)" />
									</arco-lite:currentInventoryNumber>
									<arco-cd:hasInventorySituation>
										<xsl:attribute name="rdf:resource">
		               						<xsl:value-of select="concat($NS, 'RelatedWorkInventorySistuation/', $itemURI, arco-fn:arcofy(./ROFI))" />
						               	</xsl:attribute>
									</arco-cd:hasInventorySituation>
								</xsl:if>
								<xsl:if test="./ROFT and (not(starts-with(lower-case(normalize-space(./ROFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFT)), 'n.r')))">
									<arco-cd:hasTitle>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-preparatory-final-work-title-', arco-fn:urify(normalize-space(./ROFT)))" />
										</xsl:attribute>
									</arco-cd:hasTitle>
								</xsl:if>
								<xsl:if test="./ROFA and (not(starts-with(lower-case(normalize-space(./ROFA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFA)), 'n.r')))">
									<arco-lite:hasAuthor>
										<xsl:attribute name="rdf:resource">
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ROFA))" />
			            				</xsl:attribute>
									</arco-lite:hasAuthor>
								</xsl:if>
							</rdf:Description>
						</xsl:otherwise>
					</xsl:choose>
					<xsl:if test="./ROFI and (not(starts-with(lower-case(normalize-space(./ROFI)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFI)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
		            		<xsl:value-of select="concat($NS, 'RelatedWorkInventorySistuation/', $itemURI, arco-fn:arcofy(./ROFI))" />
		            	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InventorySituation'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Situazione inventariale dell opera correlata al bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Situazione inventariale dell opera correlata al bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Inventory situation of related work of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Inventory situation of related work of cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:inventoryNumber>
            				<xsl:value-of select="normalize-space(./ROFI)" />
          	  			</arco-cd:inventoryNumber>
						<arco-core:current>
            				<xsl:value-of select="true()" />
          	  			</arco-core:current>
					</rdf:Description>
					</xsl:if>
					<!-- Relationshp type as an individual -->
					<xsl:if test="./ROFF and (not(starts-with(lower-case(normalize-space(./ROFF)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFF)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/', arco-fn:urify(normalize-space(./ROFF)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="normalize-space(./ROFF)" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ROFF)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
					<!-- subject of related work as an individual -->
					<xsl:if test="./ROFS and (not(starts-with(lower-case(normalize-space(./ROFS)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFS)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Subject/', $itemURI, arco-fn:arcofy(./ROFS))" />
				            		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Subject'" />
				                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:call-template name="CamelCase">
									<xsl:with-param name="text" select="normalize-space(./ROFS)" />
								</xsl:call-template>
							</rdfs:label>
							<l0:name>
								<xsl:call-template name="CamelCase">
									<xsl:with-param name="text" select="normalize-space(./ROFS)" />
								</xsl:call-template>
							</l0:name>
							<arco-core:isClassifiedBy>
								<xsl:attribute name="rdf:resource">
        		    	   			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(./ROFS))" />
            			   		</xsl:attribute>
							</arco-core:isClassifiedBy>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	        		   			<xsl:value-of select="concat($NS, 'Concept/', arco-fn:arcofy(./ROFS))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                      				<xsl:value-of select="'https://w3id.org/arco/ontology/core/Concept'" />
	                        	</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:call-template name="CamelCase">
									<xsl:with-param name="text" select="normalize-space(./ROFS)" />
								</xsl:call-template>
							</rdfs:label>
							<l0:name>
								<xsl:call-template name="CamelCase">
									<xsl:with-param name="text" select="normalize-space(./ROFS)" />
								</xsl:call-template>
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- unique identifier of related work -->
					<xsl:if test="./ROFX and (not(starts-with(lower-case(normalize-space(./ROFX)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFX)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'UniqueIdentifier/', $itemURI, arco-fn:arcofy(./ROFX))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                		</xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
			            		    <xsl:value-of select="'https://w3id.org/arco/ontology/core/UniqueIdentifier'" />
						        </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ROFX)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ROFX)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./ROFX)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						</rdf:Description>
					</xsl:if>
					<!-- related work title as an individual -->
					<xsl:if test="./ROFT and (not(starts-with(lower-case(normalize-space(./ROFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFT)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-preparatory-final-work-title-', arco-fn:urify(normalize-space(./ROFT)))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Title" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ROFT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ROFT)" />
							</l0:name>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
					            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ProperTitle'" />
								</xsl:attribute>
							</arco-core:hasType>
						</rdf:Description>
					</xsl:if>
					<!-- dating as an individual -->
					<xsl:if test="./ROFD and (not(starts-with(lower-case(normalize-space(./ROFD)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFD)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'EventInterpetation/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Interpretation'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Interpretazione relativa alla realizzazione dell''opera originale o finale ', position(), ' del bene ', $itemURI)" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Interpretation of realization of preparatory or final work ', position(), ' of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Interpretazione relativa alla realizzazione dell''opera originale o finale ', position(), ' del bene ', $itemURI)" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Interpretation of realization of preparatory or final work ', position(), ' of cultural property ', $itemURI)" />
							</l0:name>
							<arco-cd:involvesEntity>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Event/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)), '-creation')" />
								</xsl:attribute>
							</arco-cd:involvesEntity>
							<!-- Source of dating -->
							<xsl:for-each select="./ROFM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
								<arco-cd:hasInterpretationCriterion>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space()))" />
									</xsl:attribute>
								</arco-cd:hasInterpretationCriterion>
							</xsl:for-each>
						</rdf:Description>
						<!-- Source of dating as individual -->
						<xsl:for-each select="./ROFM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space()))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InterpretationCriterion'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space()" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space()" />
								</l0:name>
							</rdf:Description>
						</xsl:for-each>
						<!-- event of dating as individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Event/', $itemURI, '-', arco-fn:urify(normalize-space(./ROFO)), '-creation')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Event'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Realizzazione dell''opera originale o finale ', position(), ' del bene ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Realizzazione dell''opera originale o finale ', position(), ' del bene ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Creation of preparatory or final work ', position(), ' of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Creation of preparatory or final work ', position(), ' of cultural property ', $itemURI)" />
							</l0:name>
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ROFD)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</rdf:Description>
						<!-- Time interval as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ROFD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ROFD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ROFD)" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./ROFD)" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(./ROFD)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:if>
					<!-- author of related work as an individual -->
					<xsl:if test="./ROFA and (not(starts-with(lower-case(normalize-space(./ROFA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ROFA)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ROFA))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./ROFA)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./ROFA)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- relation with copy (RO/COP) -->
			<xsl:for-each select="record/metadata/schede/*/RO/COP">
				<xsl:if test="./COP">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-copy-', position())" />
							</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e copia')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e copia')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and copy')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and copy')" />
						</l0:name>
						<arco-cd:involvesRelatedWork>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Copy/', $itemURI, '-copy-', position())" />
							</xsl:attribute>
						</arco-cd:involvesRelatedWork>
					</rdf:Description>
					<!-- copy as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Copy/', $itemURI, '-copy-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copy'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Copia ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Copia ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copy ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copy ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./COPR and (not(starts-with(lower-case(normalize-space(./COPR)), 'nr')) and not(starts-with(lower-case(normalize-space(./COPR)), 'n.r')))">
							<arco-cd:hasReferenceCatalogue>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ReferenceCatalogue/', $itemURI, '-reference-catalogue-', position())" />
								</xsl:attribute>
							</arco-cd:hasReferenceCatalogue>
						</xsl:if>
						<xsl:if test="./COPC and (not(starts-with(lower-case(normalize-space(./COPC)), 'nr')) and not(starts-with(lower-case(normalize-space(./COPC)), 'n.r')))">
							<arco-cd:relatedWorkLocation>
								<xsl:value-of select="normalize-space(./COPC)" />
							</arco-cd:relatedWorkLocation>
						</xsl:if>
						<xsl:if test="./COPA and (not(starts-with(lower-case(normalize-space(./COPA)), 'nr')) and not(starts-with(lower-case(normalize-space(./COPA)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
			            			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./COPA))" />
			            		</xsl:attribute>
							</arco-lite:hasAuthor>
						</xsl:if>
					</rdf:Description>
					<!-- reference catalogue as an individual -->
					<xsl:if test="./COPR and (not(starts-with(lower-case(normalize-space(./COPR)), 'nr')) and not(starts-with(lower-case(normalize-space(./COPR)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ReferenceCatalogue/', $itemURI, '-reference-catalogue-', position())" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
				            		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ReferenceCatalogue'" />
				            	</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Repertorio della copia ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./COPR))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Repertorio della copia ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./COPR))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Reference catalogue of copy ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./COPR))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Reference catalogue of copy ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./COPR))" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- author of copy (RO/COP/COPA) as an individual -->
					<xsl:if test="./COPA and (not(starts-with(lower-case(normalize-space(./COPA)), 'nr')) and not(starts-with(lower-case(normalize-space(./COPA)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./COPA))" />
				            </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
				            		<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
				            	</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./COPA)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./COPA)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/RO/CRF">
				<!-- author of derivated work as an individual -->
				<xsl:if test="./CRFN or ./CRFB and (not(starts-with(lower-case(normalize-space(./CRFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFN)), 'n.r'))) and (not(starts-with(lower-case(normalize-space(./CRFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
				           	<xsl:choose>
			           			<xsl:when test="./CRFN">
			           				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN))" />
	            				</xsl:when>
	            				<xsl:otherwise>
	            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
			           			</xsl:otherwise>
			           		</xsl:choose>
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="lower-case(normalize-space(./CRFP))='p'">
										<xsl:value-of select="'https://w3id.org/italia/onto/CPV/Person'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./CRFP))='e'">
										<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
									</xsl:when>
									<xsl:when test="./CRFN">
										<xsl:value-of select="'https://w3id.org/italia/onto/CPV/Person'" />
									</xsl:when>
									<xsl:when test="./CRFB">
										<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:otherwise>
								</xsl:choose>
                           	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./CRFN">
									<xsl:value-of select="arco-fn:name-cleaner(./CRFN)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" 	select="normalize-space(./CRFB)" />
									</xsl:call-template>
									<xsl:value-of select="normalize-space(./CRFB)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./CRFN">
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" 	select="normalize-space(./CRFN)" />
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./CRFB)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./CRFH and (not(starts-with(lower-case(normalize-space(./CRFH)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFH)), 'n.r')))">
							<arco-lite:localIdentifier>
								<xsl:value-of select="./CRFH" />
							</arco-lite:localIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'LocalIdentifier/', arco-fn:arcofy(./CRFN), '-', arco-fn:arcofy(./CRFH))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
					</rdf:Description>
					<!-- identifier of author of derivated work -->
					<xsl:if test="./CRFH and (not(starts-with(lower-case(normalize-space(./CRFH)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFH)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'LocalIdentifier/', arco-fn:arcofy(./CRFN), '-', arco-fn:arcofy(./CRFH))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		    		            </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
					                <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
						        </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./CRFH)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./CRFH)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./CRFH)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
				<!-- copy as an individual -->
				<xsl:if test="./CRFT='copia'">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-copy-', position())" />
							</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e copia')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e copia')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and copy')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and copy')" />
						</l0:name>
						<arco-cd:involvesRelatedWork>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Copy/', $itemURI, '-copy-', position())" />
							</xsl:attribute>
						</arco-cd:involvesRelatedWork>
						<xsl:if test="./CRFS and (not(starts-with(lower-case(normalize-space(./CRFS)), 'nr')) and not(starts-with(lower-case(normalize-space(/CRFS)), 'n.r')))">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./CRFS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Copy/', $itemURI, '-copy-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copy'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Copia ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Copia ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copy ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copy ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./CRFN or ./CRFB and (not(starts-with(lower-case(normalize-space(./CRFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFN)), 'n.r'))) and (not(starts-with(lower-case(normalize-space(./CRFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
			            			<xsl:choose>
			            				<xsl:when test="./CRFN">
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN))" />
			            				</xsl:when>
			            				<xsl:otherwise>
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
			            				</xsl:otherwise>
			            			</xsl:choose>
			            		</xsl:attribute>
							</arco-lite:hasAuthor>
						</xsl:if>
						<xsl:if test="./CRFC and (not(starts-with(lower-case(normalize-space(./CRFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFC)), 'n.r')))">
							<arco-cd:relatedWorkLocation>
								<xsl:value-of select="normalize-space(./CRFC)" />
							</arco-cd:relatedWorkLocation>
						</xsl:if>
					</rdf:Description>		
				</xsl:if>
				<!-- relation with a generic derivated work (if RO/CRF/CRFT != 'replica' 
					or 'contraffazione' or 'controtipo' or 'reimpiego' or 'copia') -->
				<xsl:if test=". and not(./CRFT='copia' or ./CRFT='contraffazione' or ./CRFT='controtipo' or ./CRFT='replica' or ./CRFT='reimpiego')">	
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-derivated-work-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e opera derivata')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e opera derivata')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and derivated work')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and derivated work')" />
						</l0:name>
						<arco-cd:involvesRelatedWork>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'DerivatedWork/', $itemURI, '-derivated-work-', position())" />
							</xsl:attribute>
						</arco-cd:involvesRelatedWork>
						<xsl:if test="./CRFS and (not(starts-with(lower-case(normalize-space(./CRFS)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFS)), 'n.r')))">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./CRFS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- derivated work as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'DerivatedWork/', $itemURI, '-derivated-work-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DerivatedWork'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Opera derivata ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Opera derivata ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Derivated work ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Derivated work ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./CRFT and (not(starts-with(lower-case(normalize-space(./CRFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFT)), 'n.r')))">
							<arco-cd:hasDerivatedWorkType>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'DerivatedWorkType/', arco-fn:urify(normalize-space(./CRFT)))" />
								</xsl:attribute>
							</arco-cd:hasDerivatedWorkType>
						</xsl:if>
						<xsl:if test="./CRFN or ./CRFB and (not(starts-with(lower-case(normalize-space(./CRFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
			            			<xsl:choose>
			            				<xsl:when test="./CRFN">
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN))" />
			            				</xsl:when>
			            				<xsl:otherwise>
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
			            				</xsl:otherwise>
			            			</xsl:choose>
			            		</xsl:attribute>
							</arco-lite:hasAuthor>
							<dc:creator>
								<xsl:attribute name="rdf:resource">
			            			<xsl:choose>
			            				<xsl:when test="./CRFN">
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN))" />
			            				</xsl:when>
			            				<xsl:otherwise>
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
			            				</xsl:otherwise>
			            			</xsl:choose>
			            		</xsl:attribute>
							</dc:creator>
							<pico:author>
								<xsl:attribute name="rdf:resource">
			            			<xsl:choose>
			            				<xsl:when test="./CRFN">
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN))" />
			            				</xsl:when>
			            				<xsl:otherwise>
			            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
			            				</xsl:otherwise>
			            			</xsl:choose>
			            		</xsl:attribute>
							</pico:author>
						</xsl:if>
						<xsl:if test="./CRFC and (not(starts-with(lower-case(normalize-space(./CRFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFC)), 'n.r')))">
							<arco-cd:relatedWorkLocation>
								<xsl:value-of select="normalize-space(./CRFC)" />
							</arco-cd:relatedWorkLocation>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- derivated work type as an individual -->
				<xsl:if test="./CRFT and (not(starts-with(lower-case(normalize-space(./CRFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
				            <xsl:value-of select="concat($NS, 'DerivatedWorkType/', arco-fn:urify(normalize-space(./CRFT)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
				           		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DerivatedWorkType'" />
				            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./CRFT)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./CRFT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>				
				<!-- relation with a particular type of derivated work: forgery -->
				<xsl:if test="./CRFT='contraffazione'">	
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-forgery-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e contraffazione')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e contraffazione')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and forgery')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and forgery')" />
						</l0:name>
						<arco-cd:involvesRelatedWork>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Forgery/', $itemURI, '-forgery-', position())" />
							</xsl:attribute>
						</arco-cd:involvesRelatedWork>
						<xsl:if test="./CRFS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./CRFS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- forgery as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Forgery/', $itemURI, '-forgery-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Forgery'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Contraffazione ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Contraffazione ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Forgery ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Forgery ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./CRFN or ./CRFB and (not(starts-with(lower-case(normalize-space(./CRFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
		            				<xsl:choose>
		            					<xsl:when test="./CRFN">
		            						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN))" />
		            					</xsl:when>
		            					<xsl:otherwise>
		            						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
		            					</xsl:otherwise>
		            				</xsl:choose>
		            			</xsl:attribute>
							</arco-lite:hasAuthor>
						</xsl:if>
						<xsl:if test="./CRFC and (not(starts-with(lower-case(normalize-space(./CRFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFC)), 'n.r')))">
							<arco-cd:relatedWorkLocation>
								<xsl:value-of select="normalize-space(./CRFC)" />
							</arco-cd:relatedWorkLocation>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- relation with a particular type of derivated work: facsimile -->
				<xsl:if test="./CRFT='controtipo'">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-facsimile-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e controtipo')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e controtipo')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and facsimile')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and facsimile')" />
						</l0:name>
						<arco-cd:involvesRelatedWork>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Facsimile/', $itemURI, '-facsimile-', position())" />
							</xsl:attribute>
						</arco-cd:involvesRelatedWork>
						<xsl:if test="./CRFS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./CRFS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- facsimile as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Facsimile/', $itemURI, '-facsimile-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Facsimile'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Controtipo ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Controtipo ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Facsimile ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Facsimile ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./CRFN or ./CRFB and (not(starts-with(lower-case(normalize-space(./CRFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
		            				<xsl:choose>
		            					<xsl:when test="./CRFN">
		            						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN))" />
		            					</xsl:when>
		            					<xsl:otherwise>
		            						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
		            					</xsl:otherwise>
		            				</xsl:choose>
		            			</xsl:attribute>
							</arco-lite:hasAuthor>
						</xsl:if>
						<xsl:if test="./CRFC">
							<arco-cd:relatedWorkLocation>
								<xsl:value-of select="normalize-space(./CRFC)" />
							</arco-cd:relatedWorkLocation>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- relation with a particular type of derivated work: same author copy -->
				<xsl:if test="./CRFT='replica'">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-same-author-copy-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e replica')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e replica')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and copy by the same author')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and copy by the same author')" />
						</l0:name>
						<arco-cd:involvesRelatedWork>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'SameAuthorCopy/', $itemURI, '-same-author-copy-', position())" />
							</xsl:attribute>
						</arco-cd:involvesRelatedWork>
						<xsl:if test="./CRFS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./CRFS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- same author copy as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'SameAuthorCopy/', $itemURI, '-same-author-copy-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SameAuthorCopy'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Replica ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Replica ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copy ', position(), ' by the same author of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copy ', position(), ' by the same author of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./CRFN or ./CRFB and (not(starts-with(lower-case(normalize-space(./CRFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
		            				<xsl:choose>
		            					<xsl:when test="./CRFN">
		            						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN	))" />
		            					</xsl:when>
		            					<xsl:otherwise>
		            						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
		            					</xsl:otherwise>
		            				</xsl:choose>
		            			</xsl:attribute>
							</arco-lite:hasAuthor>
						</xsl:if>
						<xsl:if test="./CRFC and (not(starts-with(lower-case(normalize-space(./CRFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFC)), 'n.r')))">
							<arco-cd:relatedWorkLocation>
								<xsl:value-of select="normalize-space(./CRFC)" />
							</arco-cd:relatedWorkLocation>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- relation with a particular type of derivated work: reuse -->
				<xsl:if test="./CRFT='reimpiego'">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-related-cultural-property-reuse-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e riuso')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra il bene culturale ', $itemURI, ' e riuso')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and reuse')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and reuse')" />
						</l0:name>
						<arco-cd:involvesRelatedWork>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Reuse/', $itemURI, '-reuse-', position())" />
							</xsl:attribute>
						</arco-cd:involvesRelatedWork>
						<xsl:if test="./CRFS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./CRFS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- reuse as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Reuse/', $itemURI, '-reuse-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                          	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Reuse'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Riuso ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Riuso ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Reuse ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Reuse ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./CRFN or ./CRFB and (not(starts-with(lower-case(normalize-space(./CRFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFB)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
		            				<xsl:choose>
		            					<xsl:when test="./CRFN">
		            						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFN))" />
		            					</xsl:when>
		            					<xsl:otherwise>
		            						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CRFB))" />
		            					</xsl:otherwise>
		            				</xsl:choose>
		            			</xsl:attribute>
							</arco-lite:hasAuthor>
						</xsl:if>
						<xsl:if test="./CRFC and (not(starts-with(lower-case(normalize-space(./CRFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CRFC)), 'n.r')))">
							<arco-cd:relatedWorkLocation>
								<xsl:value-of select="normalize-space(./CRFC)" />
							</arco-cd:relatedWorkLocation>
						</xsl:if>
						<xsl:if test="./CRFS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./CRFS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/RO/REI">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-reuse-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Riuso ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Riuso ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Reuse ', position(), ' of the cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Reuse ', position(), ' of the cultural property ', $itemURI)" />
						</l0:name>
						<xsl:for-each select="./REID">
							<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space()))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:for-each>
						<xsl:for-each select="(./REIT)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'UseType/', arco-fn:urify(normalize-space()))" />
								</xsl:attribute>
							</arco-core:hasType>
						</xsl:for-each>
						<xsl:if test="./REIS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./REIS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- time interval as an individual -->
					<xsl:for-each select="./REID">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space()" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space()" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space()" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space()" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:for-each>
					<!-- use type as an individual -->
					<xsl:for-each select="(./REIT)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'UseType/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseType'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space()" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space()" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/RO/RIU">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-reuse-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Riuso ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Riuso ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Reuse ', position(), ' of the cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Reuse ', position(), ' of the cultural property ', $itemURI)" />
						</l0:name>
						<xsl:for-each select="./RIUD">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
								<xsl:value-of select="normalize-space()" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:for-each>
						<xsl:for-each select="(./RIUT)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'UseType/', arco-fn:urify(normalize-space()))" />
								</xsl:attribute>
							</arco-core:hasType>
						</xsl:for-each>
						<xsl:if test="./RIUS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./RIUS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- time interval as an individual -->
					<xsl:for-each select="./RIUD">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space()" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space()" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space()" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space()" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:for-each>
					<!-- use type as an individual -->
					<xsl:for-each select="(./RIUT)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'UseType/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseType'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space()" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space()" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
			</xsl:for-each>
			<!-- relation with a particular type of derivated work: print in publication  (S) -->
			<xsl:for-each select="record/metadata/schede/*/RO/ADL">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-print-in-publication-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelatedWorkSituation'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra la stampa ', $itemURI, ' e pubblicazione contenente la stampa')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rapporto ', position(), ' tra la stampa ', $itemURI, ' e pubblicazione contenente la stampa')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the print ', $itemURI, ' and publication with print')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the print ', $itemURI, ' and publication with print')" />
						</l0:name>
						<arco-cd:involvesRelatedWork>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'PrintInPublication/', $itemURI, '-print-in-publication-', position())" />
							</xsl:attribute>
						</arco-cd:involvesRelatedWork>
					</rdf:Description>
					<!-- print in publication as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'PrintInPublication/', $itemURI, '-print-in-publication-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PrintInPublication'" />
	                       	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Pubblicazione ', position(), ' contenente la stampa ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Pubblicazione ', position(), ' contenente la stampa ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Publication ', position(), ' with print ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Publication ', position(), ' with print ', $itemURI)" />
						</l0:name>
						<xsl:if test="./ADLA and (not(starts-with(lower-case(normalize-space(./ADLA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLA)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
		            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ADLA))" />
								</xsl:attribute>
							</arco-lite:hasAuthor>
						</xsl:if>
						<xsl:if test="./ADLL and (not(starts-with(lower-case(normalize-space(./ADLL)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLL)), 'n.r')))">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'DerivatedWorkType/', arco-fn:urify(normalize-space(./ADLL)))" />
								</xsl:attribute>
							</arco-core:hasType>
						</xsl:if>
						<xsl:if test="./ADLT and (not(starts-with(lower-case(normalize-space(./ADLT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLT)), 'n.r')))">
							<arco-cd:hasTitle>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-publication-', arco-fn:urify(normalize-space(./ADLT)))" />
								</xsl:attribute>
							</arco-cd:hasTitle>
						</xsl:if>
						<xsl:if test="./ADLE and (not(starts-with(lower-case(normalize-space(./ADLE)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLE)), 'n.r')))">
							<arco-cd:hasEdition>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Edition/', $itemURI, '-edition-', arco-fn:urify(normalize-space(./ADLE)))" />
								</xsl:attribute>
							</arco-cd:hasEdition>
							<arco-lite:hasEditor>
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ADLE))" />
							</arco-lite:hasEditor>
						</xsl:if>
						<xsl:if test="./ADLP or ./ADLN">
							<arco-cd:hasReproduction>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Reproduction/', $itemURI, '-reproduction')" />
								</xsl:attribute>
							</arco-cd:hasReproduction>
						</xsl:if>
						<xsl:if test="./ADLS and (not(starts-with(lower-case(normalize-space(./ADLS)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLS)), 'n.r')))">
							<arco-cd:hasReproduction>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'NoLongerInPublication/', $itemURI, '-reproduction')" />
								</xsl:attribute>
							</arco-cd:hasReproduction>
						</xsl:if>
					</rdf:Description>
					<!-- derivated work type as an individual -->
					<xsl:if test="./ADLL and (not(starts-with(lower-case(normalize-space(./ADLL)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLL)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'DerivatedWorkType/', arco-fn:urify(normalize-space(./ADLL)))" />
					         </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
					            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DerivatedWorkType'" />
					            </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ADLL)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ADLL)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- print in publication title as an individual -->
					<xsl:if test="./ADLT and (not(starts-with(lower-case(normalize-space(./ADLT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLT)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-publication-', arco-fn:urify(normalize-space(./ADLT)))" />
					         </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
					            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Title'" />
					            </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ADLT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ADLT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- print in publication edition as an individual -->
					<xsl:if test="./ADLE and (not(starts-with(lower-case(normalize-space(./ADLE)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLE)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Edition/', $itemURI, '-edition-', arco-fn:urify(normalize-space(./ADLE)))" />
					         </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
					            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Edition'" />
					            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of
									select="concat('Edizione della pubblicazione contenente la stampa ', $itemURI, ': ', normalize-space(./ADLE))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Edizione della pubblicazione contenente la stampa ', $itemURI, ': ', normalize-space(./ADLE))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Edition of publication with print ', $itemURI, ': ', normalize-space(./ADLE))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Edition of publication with print ', $itemURI, ': ', normalize-space(./ADLE))" />
							</l0:name>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-related-work-edition', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</rdf:Description>
						<!-- agent role -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                      			<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-related-work-edition', position())" />
                  			</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	            	               <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                	       </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Ruolo nella edizione ', position(), ': ', normalize-space(./ADLE))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Ruolo nella edizione ', position(), ': ', normalize-space(./ADLE))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Role in edition ', position(), ': ', normalize-space(./ADLE))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Role in edition ', position(), ': ', normalize-space(./EDTN))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
	                	           <xsl:value-of select="concat($NS, 'Role/Editor')" />
		                		</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
	            	               <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ADLE))" />
	                	       </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- Role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                       <xsl:value-of select="concat($NS, 'Role/Editor')" />
			   				</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="Editore" />
							</rdfs:label>
						</rdf:Description>
						<!-- Agent as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ADLE))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./ADLE)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./ADLE)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- print in publication reproduction as an individual -->
					<xsl:if test="./ADLP or ./ADLN">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Reproduction/', $itemURI, '-reproduction')" />
					         </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
					            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Reproduction'" />
					            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Riproduzione in pubblicazione della stampa ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Riproduzione in pubblicazione della stampa ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Reproduction in publication of print ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Reproduction in publication of print ', $itemURI)" />
							</l0:name>
							<arco-cd:hasReproductionPosition>
								<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="./ADLP">
										<xsl:value-of select="concat($NS, 'ReproductionPosition/', $itemURI, '-', arco-fn:urify(normalize-space(./ADLP)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'ReproductionPosition/', $itemURI, '-reproduction-position')" />
									</xsl:otherwise>
								</xsl:choose>
								</xsl:attribute>
							</arco-cd:hasReproductionPosition>
						</rdf:Description>
						<!-- reproduction position as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:choose>
									<xsl:when test="./ADLP">
										<xsl:value-of select="concat($NS, 'ReproductionPosition/', $itemURI, '-', arco-fn:urify(normalize-space(./ADLP)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'ReproductionPosition/', $itemURI, '-reproduction-position')" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ReproductionPosition'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:choose>
									<xsl:when test="./ADLP">
										<xsl:value-of select="concat('Posizione della riproduzione della stampa ', $itemURI, ' nella pubblicazione: ', normalize-space(./ADLP))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat('Posizione della riproduzione della stampa ', $itemURI, ' nella pubblicazione')" />
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:choose>
									<xsl:when test="./ADLP">
										<xsl:value-of select="normalize-space(./ADLP)" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat('Posizione della riproduzione della stampa ', $itemURI, ' nella pubblicazione: ', normalize-space(./ADLP))" />
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:choose>
									<xsl:when test="./ADLP">
										<xsl:value-of select="normalize-space(./ADLP)" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat('Print ', $itemURI, ' reproduction position in publication: ', normalize-space())" />
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:choose>
									<xsl:when test="./ADLP">
										<xsl:value-of select="concat('Print ', $itemURI, ' reproduction position in publication: ', normalize-space(./ADLP))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat('Print ', $itemURI, ' reproduction position in publication')" />
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./ADLN and (not(starts-with(lower-case(normalize-space(./ADLN)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLN)), 'n.r')))">
								<arco-cd:pageOrTableNumber>
									<xsl:value-of select="normalize-space(./ADLN)" />
								</arco-cd:pageOrTableNumber>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
					<!-- no longer in publication as an individual -->
					<xsl:if test="./ADLS and (not(starts-with(lower-case(normalize-space(./ADLS)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLS)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'NoLongerInPublication/', $itemURI, '-reproduction')" />
					         </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
					            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/NoLongerInPublication'" />
					            </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Riproduzione in pubblicazione della stampa ', $itemURI, ' non più presente in pubblicazione')" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Riproduzione in pubblicazione della stampa ', $itemURI, ' non più presente in pubblicatione')" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Reproduction in publication of print ', $itemURI, ' no longer in publication')" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Reproduction in publication of print ', $itemURI, ' no longer in publication')" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- author of print in publication as an individual -->
					<xsl:if test="./ADLA and (not(starts-with(lower-case(normalize-space(./ADLA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADLA)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		            			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ADLA))" />
			            	</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                           		</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./ADLA)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./ADLA)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
			</xsl:for-each>
			<!-- edition as individual -->
			<xsl:for-each select="record/metadata/schede/*/AU/EDT">
				<xsl:if test="$sheetType='OAC' or $sheetType='S' or $sheetType='MI'">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:choose>
                                <xsl:when test="./EDTE and ./EDTL">
                                    <xsl:value-of select="concat($NS, 'Edition/', $itemURI, '-', arco-fn:urify(normalize-space(./EDTE)), '-', arco-fn:urify(normalize-space(./EDTL)))" />
                                </xsl:when>
                                <xsl:when test="./EDTE">
                                    <xsl:value-of select="concat($NS, 'Edition/', $itemURI, '-', arco-fn:urify(normalize-space(./EDTE)))" />
                                </xsl:when>
                                <xsl:when test="./EDTL">
                                    <xsl:value-of select="concat($NS, 'Edition/', $itemURI, '-', arco-fn:urify(normalize-space(./EDTL)))" />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="concat($NS, 'Edition/', $itemURI, '-', position())" />
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Edition'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:choose>
								<xsl:when test="./EDTE and ./EDTL">
									<xsl:value-of select="concat('Edizione ', normalize-space(./EDTE), '-', normalize-space(./EDTL), ' del bene ', $itemURI)" />
								</xsl:when>
								<xsl:when test="./EDTE">
									<xsl:value-of select="concat('Edizione ', normalize-space(./EDTE), ' del bene ', $itemURI)" />
								</xsl:when>
								<xsl:when test="./EDTL">
									<xsl:value-of select="concat('Edizione ', normalize-space(./EDTL), ' del bene ', $itemURI)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Edizione ', position(), ' del bene ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:choose>
								<xsl:when test="./EDTE and ./EDTL">
									<xsl:value-of select="concat('Edizione ', normalize-space(./EDTE), '-', normalize-space(./EDTL), ' del bene ', $itemURI)" />
								</xsl:when>
								<xsl:when test="./EDTE">
									<xsl:value-of select="concat('Edizione ', normalize-space(./EDTE), ' del bene ', $itemURI)" />
								</xsl:when>
								<xsl:when test="./EDTL">
									<xsl:value-of select="concat('Edizione ', normalize-space(./EDTL), ' del bene ', $itemURI)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Edizione ', position(), ' del bene ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:choose>
								<xsl:when test="./EDTE and ./EDTL">
									<xsl:value-of select="concat('Edition ', normalize-space(./EDTE), '-', normalize-space(./EDTL), ' of cultural property ', $itemURI)" />
								</xsl:when>
								<xsl:when test="./EDTE">
									<xsl:value-of select="concat('Edition ', normalize-space(./EDTE), ' of cultural property ', $itemURI)" />
								</xsl:when>
								<xsl:when test="./EDTL">
									<xsl:value-of select="concat('Edition ', normalize-space(./EDTL), ' of cultural property ', $itemURI)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Edition ', position(), ' of cultural property ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:choose>
								<xsl:when test="./EDTE and ./EDTL">
									<xsl:value-of select="concat('Edition ', normalize-space(./EDTE), '-', normalize-space(./EDTL), ' of cultural property ', $itemURI)" />
								</xsl:when>
								<xsl:when test="./EDTE">
									<xsl:value-of select="concat('Edition ', normalize-space(./EDTE), ' of cultural property ', $itemURI)" />
								</xsl:when>
								<xsl:when test="./EDTL">
									<xsl:value-of select="concat('Edition ', normalize-space(./EDTL), ' of cultural property ', $itemURI)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Edition ', position(), ' of cultural property ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./EDTE and (not(starts-with(lower-case(normalize-space(./EDTE)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTE)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./EDTE)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./EDTL and (not(starts-with(lower-case(normalize-space(./EDTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTL)), 'n.r')))">
							<clvapit:hasSpatialCoverage>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'Feature/', arco-fn:urify(normalize-space(./EDTL)))" />
	                			</xsl:attribute>
							</clvapit:hasSpatialCoverage>
						</xsl:if>
						<xsl:if test="./EDTN and (not(starts-with(lower-case(normalize-space(./EDTN)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTN)), 'n.r')))">
							<arco-cd:hasResponsibility>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Responsibility/', $itemURI, '-edition-', position())" />
								</xsl:attribute>
							</arco-cd:hasResponsibility>
						</xsl:if>
					</rdf:Description>
					<!-- Time interval as individual -->
					<xsl:if test="./EDTE and (not(starts-with(lower-case(normalize-space(./EDTE)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTE)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./EDTE)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./EDTE)" />
							</rdfs:label>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./EDTE)" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(./EDTE)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:if>
					<!-- spatial coverage -->
					<xsl:if test="./EDTL and (not(starts-with(lower-case(normalize-space(./EDTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTL)), 'n.r')))">	
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                		<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(normalize-space(./EDTL)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./EDTL)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./EDTL)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- responsibility as an individual -->
					<xsl:if test="./EDTN and (not(starts-with(lower-case(normalize-space(./EDTN)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTN)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Responsibility/', $itemURI, '-edition-', position())" />
            	            </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:choose>
									<xsl:when test="./EDTR and (not(starts-with(lower-case(normalize-space(./EDTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTR)), 'n.r')))">
										<xsl:value-of select="concat(normalize-space(./EDTR), ' del bene ', $itemURI)" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat('Responsabilità dell''edizione del bene ', $itemURI)" />
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:choose>
									<xsl:when test="./EDTR and (not(starts-with(lower-case(normalize-space(./EDTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTR)), 'n.r')))">
										<xsl:value-of select="concat(normalize-space(./EDTR), ' of cultural property ', $itemURI)" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat('Responsibility of edition of cultural property ', $itemURI)" />
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<xsl:if test="./EDTN and (not(starts-with(lower-case(normalize-space(./EDTN)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTN)), 'n.r')))">
								<arco-cd:hasAgentWithResponsibility>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./EDTN))" />
									</xsl:attribute>
								</arco-cd:hasAgentWithResponsibility>
							</xsl:if>
							<arco-cd:hasInterventionRole>
								<xsl:choose>
									<xsl:when test="./EDTR and (not(starts-with(lower-case(normalize-space(./EDTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTR)), 'n.r')))">
										<xsl:attribute name="rdf:resource">
	            	    		           <xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./EDTR)))" />
		            	           		</xsl:attribute>
									</xsl:when>
									<xsl:otherwise>
										<xsl:attribute name="rdf:resource">
	        	        		           <xsl:value-of select="concat($NS, 'Role/Editor')" />
		        	               		</xsl:attribute>
									</xsl:otherwise>
								</xsl:choose>
							</arco-cd:hasInterventionRole>
						</rdf:Description>
						<!-- Role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                       <xsl:choose>
									<xsl:when test="./EDTR and (not(starts-with(lower-case(normalize-space(./EDTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTR)), 'n.r')))">
	                		           <xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./EDTR)))" />
									</xsl:when>
									<xsl:otherwise>
	                		           <xsl:value-of select="concat($NS, 'Role/Editor')" />
									</xsl:otherwise>
								</xsl:choose>
			   				</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:choose>
									<xsl:when test="./EDTR and (not(starts-with(lower-case(normalize-space(./EDTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDTR)), 'n.r')))">
	                		           <xsl:value-of select="normalize-space(./EDTR)" />
									</xsl:when>
									<xsl:otherwise>
	                		           <xsl:value-of select="Editore" />
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
						</rdf:Description>
						<!-- Agent as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./EDTN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./EDTN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./EDTN)" />
							</l0:name>
							<xsl:if test="./EDTD">
								<arco-cd:agentDate>
									<xsl:value-of select="normalize-space(./EDTD)" />
								</arco-cd:agentDate>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/PD/EDI">			
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Edition/', $itemURI, '-', arco-fn:urify(normalize-space(./EDIT)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Edition'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(./EDIT)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(./EDIT)" />
					</l0:name>
					<arco-core:specifications>
						<xsl:value-of select="normalize-space(./EDIS)" />
					</arco-core:specifications>
					<xsl:if test="./EDIT and (not(starts-with(lower-case(normalize-space(./EDIT)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDIT)), 'n.r')))">
						<arco-cd:hasTitle>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-edition-', arco-fn:urify(normalize-space(./EDIT)))" />
	       	    	        </xsl:attribute>
						</arco-cd:hasTitle>
					</xsl:if>
					<xsl:if test="./EDIP and (not(starts-with(lower-case(normalize-space(./EDIP)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDIP)), 'n.r')))">
						<arco-cd:hasTitle>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-edition-', arco-fn:urify(normalize-space(./EDIP)))" />
	       	        	    </xsl:attribute>
						</arco-cd:hasTitle>
					</xsl:if>
					<xsl:if test="./EDIA and (not(starts-with(lower-case(normalize-space(./EDIA)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDIA)), 'n.r')))">
						<arco-cd:hasTitle>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-edition-', arco-fn:urify(normalize-space(./EDIA)))" />
	       	        	    </xsl:attribute>
						</arco-cd:hasTitle>
					</xsl:if>
					<!-- Luogo e data dell'edizione si trovano nel campo PDF (PDFD, PDFL), si potrebbe provare a comparare i dati in PDFN e in EDIR, forse -->
					<xsl:if test="./EDIR and (not(starts-with(lower-case(normalize-space(./EDIR)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDIR)), 'n.r')))">
						<arco-cd:hasResponsibility>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Responsibility/', $itemURI, '-', position())" />
	        	            </xsl:attribute>
						</arco-cd:hasResponsibility>
					</xsl:if>
				</rdf:Description>
				<!-- title as an individual -->
				<xsl:if test="./EDIT and (not(starts-with(lower-case(normalize-space(./EDIT)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDIT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-edition-', arco-fn:urify(normalize-space(./EDIT)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Title'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="./EDIT" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="./EDIT" />
						</l0:name>
						<arco-cd:title>
							<xsl:value-of select="./EDIT" />
						</arco-cd:title>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/MainTitle'" />
							</xsl:attribute>
						</arco-core:hasType>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="./EDIP and (not(starts-with(lower-case(normalize-space(./EDIP)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDIP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-edition-', arco-fn:urify(normalize-space(./EDIP)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Title'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="./EDIP" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="./EDIP" />
						</l0:name>
						<arco-cd:title>
							<xsl:value-of select="./EDIP" />
						</arco-cd:title>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ParallelTitle'" />
							</xsl:attribute>
						</arco-core:hasType>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="./EDIA and (not(starts-with(lower-case(normalize-space(./EDIA)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDIA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Title/', $itemURI, '-edition-', arco-fn:urify(normalize-space(./EDIA)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Title'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="./EDIA" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="./EDIA" />
						</l0:name>
						<arco-cd:title>
							<xsl:value-of select="./EDIA" />
						</arco-cd:title>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AttributedTitle'" />
							</xsl:attribute>
						</arco-core:hasType>
					</rdf:Description>
				</xsl:if>
				<!-- authorship attribuion as an individual -->
				<xsl:if test="./EDIR and (not(starts-with(lower-case(normalize-space(./EDIR)), 'nr')) and not(starts-with(lower-case(normalize-space(./EDIR)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Responsibility/', $itemURI, '-edition-', position())" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabilità dell''edizione del bene ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Responsibility of edition of cultural property ', $itemURI)" />
						</rdfs:label>
						<arco-cd:hasAgentWithResponsibility>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./EDIR))" />
							</xsl:attribute>
						</arco-cd:hasAgentWithResponsibility>
						<arco-cd:hasInterventionRole>
							<xsl:attribute name="rdf:resource">
              	                   <xsl:value-of select="concat($NS, 'Role/Editor')" />
                  	           </xsl:attribute>
						</arco-cd:hasInterventionRole>
					</rdf:Description>
					<!-- role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/Editor')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Editore'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Editor'" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="'Editore'" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="'Editor'" />
						</l0:name>
					</rdf:Description>
					<!-- agent as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./EDIR))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./EDIR)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./EDIR)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- dating of cultural property -->
			<xsl:for-each select="record/metadata/schede/*/DT">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Dating/', $itemURI, '-', position())" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Dating'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Cronologia ', position(), ' del bene ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Dating ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Cronologia ', position(), ' del bene ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Dating ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<arco-cd:hasDatingEvent>
						<xsl:choose>
							<xsl:when test="./DTN/DTNS and (not(starts-with(lower-case(normalize-space(./DTN/DTNS)), 'nr')) and not(starts-with(lower-case(normalize-space(./DTN/DTNS)), 'n.r')))">
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="concat($NS, 'Event/', $itemURI, '-', arco-fn:urify(normalize-space(./DTN/DTNS)))" />
                                </xsl:attribute>
							</xsl:when>
							<xsl:otherwise>
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="concat($NS, 'Event/', $itemURI, '-creation-', position())" />
                                </xsl:attribute>
							</xsl:otherwise>
						</xsl:choose>
					</arco-cd:hasDatingEvent>
					<!-- Source of dating -->
                    <xsl:for-each select="./DTM[not(starts-with(lower-case(normalize-space()), 'nr')) and not(starts-with(lower-case(normalize-space()), 'n.r'))]"><!--  allow multiple sources es:ICCD11574733 -->
						<arco-cd:hasInterpretationCriterion>
							<xsl:choose>
								<xsl:when test="./DTMM">
									<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space(./DTMM)))" />
                                </xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space()))" />
                                </xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
						</arco-cd:hasInterpretationCriterion>
					</xsl:for-each>
				</rdf:Description>
				<!-- Source of dating as individual -->
				<xsl:for-each select="./DTM[not(starts-with(lower-case(normalize-space()), 'nr')) and not(starts-with(lower-case(normalize-space()), 'n.r'))]"><!--  allow multiple sources es:ICCD11574733 -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:choose>
                                <xsl:when test="./DTMM">
                                    <xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space(./DTMM)))" />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space()))" />
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InterpretationCriterion'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./DTMM">
									<xsl:value-of select="normalize-space(./DTMM)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space()" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./DTMM">
									<xsl:value-of select="normalize-space(./DTMM)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space()" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./DTMS">
							<arco-core:specifications>
								<xsl:value-of select="normalize-space(./DTMS)" />
							</arco-core:specifications>
						</xsl:if>
					</rdf:Description>
                </xsl:for-each>
				<!-- Event as individual -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:choose>
                            <xsl:when test="./DTN/DTNS and (not(starts-with(lower-case(normalize-space(./DTN/DTNS)), 'nr')) and not(starts-with(lower-case(normalize-space(./DTN/DTNS)), 'n.r')))">
                                <xsl:value-of select="concat($NS, 'Event/', $itemURI, '-', arco-fn:urify(normalize-space(./DTN/DTNS)))" />
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="concat($NS, 'Event/', $itemURI, '-creation-', position())" />
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Event'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:choose>
							<xsl:when test="./DTN/DTNS">
								<xsl:value-of select="normalize-space(./DTN/DTNS)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'Realizzazione'" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name>
						<xsl:choose>
							<xsl:when test="./DTN/DTNS">
								<xsl:value-of select="normalize-space(./DTN/DTNS)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'Realizzazione'" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<xsl:if test="./DTN/DTNN">
						<arco-core:description>
							<xsl:value-of select="normalize-space(./DTN/DTNN)" />
						</arco-core:description>
					</xsl:if>
					<xsl:if test="./DTZ">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:choose>
                                    <xsl:when test="./DTZ/DTZS">
                                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTZ/DTZG)), '-',  arco-fn:urify(normalize-space(./DTZ/DTZS)))" />
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTZ/DTZG)))" />
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./DTR">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:choose>
                                    <xsl:when test="./DTG">
                                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTR)), '-',  arco-fn:urify(normalize-space(./DTG)))" />
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTR)))" />
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:attribute>
						</tiapit:atTime>
					</xsl:if>	
					<xsl:if test="./DTS">
							<xsl:if test="./DTS/DTSI or ./DTS/DTSF">
								<xsl:variable name="startDate">
									<xsl:choose>
										<xsl:when test="./DTS/DTSV">
											<xsl:value-of select="concat(normalize-space(./DTS/DTSV), ' ', normalize-space(./DTS/DTSI))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="normalize-space(./DTS/DTSI)" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<xsl:variable name="endDate">
									<xsl:choose>
										<xsl:when test="./DTS/DTSL">
											<xsl:value-of select="concat(normalize-space(./DTS/DTSL), ' ', normalize-space(./DTS/DTSF))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="normalize-space(./DTS/DTSF)" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<arco-cd:specificTime>
									<xsl:attribute name="rdf:resource">
		                            	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(concat($startDate, '-',  $endDate)))" />
		                        	</xsl:attribute>
								</arco-cd:specificTime>
							</xsl:if>
					</xsl:if>
				</rdf:Description>
				<xsl:if test="./DTZ/DTZR">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Event/', $itemURI, '-', arco-fn:urify(normalize-space(./DTZ/DTZR)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Event'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(./DTZ/DTZR)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(./DTZ/DTZR)" />
					</l0:name>
					<xsl:if test="./DTZ">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:choose>
                                    <xsl:when test="./DTZ/DTZS">
                                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTZ/DTZG)), '-',  arco-fn:urify(normalize-space(./DTZ/DTZS)))" />
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTZ/DTZG)))" />
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:attribute>
						</tiapit:atTime>
					</xsl:if>	
					<xsl:if test="./DTS">
							<xsl:if test="./DTS/DTSI or ./DTS/DTSF">
								<xsl:variable name="startDate">
									<xsl:choose>
										<xsl:when test="./DTS/DTSV">
											<xsl:value-of select="concat(normalize-space(./DTS/DTSV), ' ', normalize-space(./DTS/DTSI))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="normalize-space(./DTS/DTSI)" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<xsl:variable name="endDate">
									<xsl:choose>
										<xsl:when test="./DTS/DTSL">
											<xsl:value-of select="concat(normalize-space(./DTS/DTSL), ' ', normalize-space(./DTS/DTSF))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="normalize-space(./DTS/DTSF)" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<arco-cd:specificTime>
									<xsl:attribute name="rdf:resource">
		                            	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(concat($startDate, '-',  $endDate)))" />
		                        	</xsl:attribute>
								</arco-cd:specificTime>
							</xsl:if>
					</xsl:if>
				</rdf:Description>
				</xsl:if>
				<!-- TimeInterval as individual -->
				<xsl:if test="./DTZ">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:choose>
                                <xsl:when test="./DTZ/DTZS">
                                    <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTZ/DTZG)), '-',  arco-fn:urify(normalize-space(./DTZ/DTZS)))" />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTZ/DTZG)))" />
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./DTZ/DTZS">
									<xsl:value-of select="concat(normalize-space(./DTZ/DTZG), ' ', normalize-space(./DTZ/DTZS))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./DTZ/DTZG)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./DTZ/DTZS">
									<xsl:value-of select="concat(normalize-space(./DTZ/DTZG), ' ', normalize-space(./DTZ/DTZS))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./DTZ/DTZG)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<tiapit:time>
							<xsl:choose>
								<xsl:when test="./DTZ/DTZS">
									<xsl:value-of select="concat(normalize-space(./DTZ/DTZG), ' ', normalize-space(./DTZ/DTZS))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./DTZ/DTZG)" />
								</xsl:otherwise>
							</xsl:choose>
						</tiapit:time>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="./DTR">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:choose>
                                <xsl:when test="./DTG">
                                    <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTR)), '-',  arco-fn:urify(normalize-space(./DTG)))" />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DTR)))" />
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./DTG">
									<xsl:value-of select="concat(normalize-space(./DTR), ' ', normalize-space(./DTG))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./DTR)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./DTG">
									<xsl:value-of select="concat(normalize-space(./DTR), ' ', normalize-space(./DTG))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./DTR)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<tiapit:time>
							<xsl:choose>
								<xsl:when test="./DTG">
									<xsl:value-of select="concat(normalize-space(./DTR), ' ', normalize-space(./DTG))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./DTR)" />
								</xsl:otherwise>
							</xsl:choose>
						</tiapit:time>
					</rdf:Description>
				</xsl:if>
				<!-- Time interval with start time and end time -->
				<xsl:if test="./DTS">
					<xsl:if test="./DTS/DTSI or ./DTS/DTSF">
						<xsl:variable name="startDate">
							<xsl:choose>
								<xsl:when test="./DTS/DTSV">
									<xsl:value-of select="concat(normalize-space(./DTS/DTSV), ' ', normalize-space(./DTS/DTSI))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./DTS/DTSI)" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="endDate">
							<xsl:choose>
								<xsl:when test="./DTS/DTSL">
									<xsl:value-of select="concat(normalize-space(./DTS/DTSL), ' ', normalize-space(./DTS/DTSF))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./DTS/DTSF)" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(concat($startDate, '-',  $endDate)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="concat($startDate, ' - ', $endDate)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="concat($startDate, ' - ', $endDate)" />
							</l0:name>
							<xsl:if test="./DTS">
								<arco-arco:startTime>
									<xsl:value-of select="$startDate" />
								</arco-arco:startTime>
								<arco-arco:endTime>
									<xsl:value-of select="$endDate" />
								</arco-arco:endTime>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- dating of cultural property for A norm -->
			<xsl:for-each select="record/metadata/schede/A/RE">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Dating/', $itemURI, '-', position())" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Dating'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Cronologia ', position(), ' del bene ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Dating ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Cronologia ', position(), ' del bene ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Dating ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<arco-cd:hasDatingEvent>
						<xsl:choose>
							<xsl:when test="./REN/RENS and (not(starts-with(lower-case(normalize-space(./REN/RENS)), 'nr')) and not(starts-with(lower-case(normalize-space(./REN/RENS)), 'n.r')))">
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="concat($NS, 'Event/', $itemURI, arco-fn:urify(normalize-space(./REN/RENS)))" />
                                </xsl:attribute>
							</xsl:when>
							<xsl:otherwise>
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="concat($NS, 'Event/', $itemURI, '-creation-', position())" />
                                </xsl:attribute>
							</xsl:otherwise>
						</xsl:choose>
					</arco-cd:hasDatingEvent>
					<!-- Source of dating -->
					<xsl:for-each select="./REN/RENF[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-cd:hasInterpretationCriterion>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
						</arco-cd:hasInterpretationCriterion>
					</xsl:for-each>
				</rdf:Description>
				<!-- Source of dating as individual -->
				<xsl:for-each select="./REN/RENF[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'InterpretationCriterion/', arco-fn:urify(normalize-space()))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InterpretationCriterion'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space()" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space()" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<!-- event of dating -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:choose>
                            <xsl:when test="./REN/RENS and (not(starts-with(lower-case(normalize-space(./REN/RENS)), 'nr')) and not(starts-with(lower-case(normalize-space(./REN/RENS)), 'n.r')))">
                                <xsl:value-of select="concat($NS, 'Event/', $itemURI, '-', arco-fn:urify(normalize-space(./REN/RENS)))" />
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:value-of select="concat($NS, 'Event/', $itemURI, '-creation-', position())" />
                            </xsl:otherwise>
                        </xsl:choose>
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Event'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:choose>
							<xsl:when test="./REN/RENS">
								<xsl:value-of select="normalize-space(./REN/RENS)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'Realizzazione'" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:choose>
							<xsl:when test="./REN/RENS">
								<xsl:value-of select="normalize-space(./REN/RENS)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'Realizzazione'" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:choose>
							<xsl:when test="./REN/RENS">
								<xsl:value-of select="normalize-space(./REN/RENS)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'Creation'" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:choose>
							<xsl:when test="./REN/RENS">
								<xsl:value-of select="normalize-space(./REN/RENS)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="'Creation'" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<xsl:if test="./REN/RENN">
						<arco-core:description>
							<xsl:value-of select="normalize-space(./REN/RENN)" />
						</arco-core:description>
					</xsl:if>
					<!-- atTime -->
					<tiapit:atTime>
						<xsl:variable name="relv">
							<xsl:choose>
								<xsl:when test="./REL/RELV">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REL/RELV)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relw">
							<xsl:choose>
								<xsl:when test="./REL/RELW">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REL/RELW)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relf">
							<xsl:choose>
								<xsl:when test="./REL/RELF">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REL/RELF)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revv">
							<xsl:choose>
								<xsl:when test="./REV/REVV">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REV/REVV)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revw">
							<xsl:choose>
								<xsl:when test="./REV/REVW">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REV/REVW)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revf">
							<xsl:choose>
								<xsl:when test="./REV/REVF">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REV/REVF)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="rels">
							<xsl:choose>
								<xsl:when test="./REL/RELW">
									<xsl:value-of select="concat($relw, $relf, arco-fn:urify(normalize-space(./REL/RELS)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($relv, $relf, arco-fn:urify(normalize-space(./REL/RELS)))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revs">
							<xsl:choose>
								<xsl:when test="./REV/REVW">
									<xsl:value-of select="concat($revw, $revf, arco-fn:urify(normalize-space(./REV/REVS)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($revv, $revf, arco-fn:urify(normalize-space(./REV/REVS)))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relx">
							<xsl:choose>
								<xsl:when test="./REL/RELX">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REL/RELX)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revx">
							<xsl:choose>
								<xsl:when test="./REV/REVX">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REV/REVX)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="./REL/RELS and not(./REV/REVS)">
									<xsl:value-of select="concat($NS, 'TimeInterval/', $rels, '-', $revx, arco-fn:urify(normalize-space(./REV/REVI)))" />
								</xsl:when>
								<xsl:when test="./REV/REVS and not(./REL/RELS)">
									<xsl:value-of select="concat($NS, 'TimeInterval/', $relx, arco-fn:urify(normalize-space(./REL/RELI)), '-', $revs)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'TimeInterval/', $rels, '-', $revs)" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
					</tiapit:atTime>
					<!-- specific time -->
					<xsl:if test="./REV/REVI or ./REL/RELI">
						<xsl:variable name="startDate">
							<xsl:choose>
								<xsl:when test="./REL/RELX">
									<xsl:value-of
										select="concat(normalize-space(./REL/RELI), ' ', normalize-space(./REL/RELX))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./REL/RELI)" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="endDate">
							<xsl:choose>
								<xsl:when test="./REV/REVX">
									<xsl:value-of
										select="concat(normalize-space(./REV/REVI), ' ', normalize-space(./REV/REVX))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./REV/REVI)" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<arco-cd:specificTime>
							<xsl:attribute name="rdf:resource">
		                            	<xsl:value-of
								select="concat($NS, 'TimeInterval/', arco-fn:urify(concat($startDate, '-',  $endDate)))" />
		                        	</xsl:attribute>
						</arco-cd:specificTime>
					</xsl:if>
				</rdf:Description>
				<!-- time interval as an individual -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:variable name="relv">
							<xsl:choose>
								<xsl:when test="./REL/RELV">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REL/RELV)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relw">
							<xsl:choose>
								<xsl:when test="./REL/RELW">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REL/RELW)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relf">
							<xsl:choose>
								<xsl:when test="./REL/RELF">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REL/RELF)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revv">
							<xsl:choose>
								<xsl:when test="./REV/REVV">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REV/REVV)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revw">
							<xsl:choose>
								<xsl:when test="./REV/REVW">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REV/REVW)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revf">
							<xsl:choose>
								<xsl:when test="./REV/REVF">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REV/REVF)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="rels">
							<xsl:choose>
								<xsl:when test="./REL/RELW">
									<xsl:value-of
										select="concat($relw, $relf, arco-fn:urify(normalize-space(./REL/RELS)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($relv, $relf, arco-fn:urify(normalize-space(./REL/RELS)))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revs">
							<xsl:choose>
								<xsl:when test="./REV/REVW">
									<xsl:value-of select="concat($revw, $revf, arco-fn:urify(normalize-space(./REV/REVS)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($revv, $revf, arco-fn:urify(normalize-space(./REV/REVS)))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relx">
							<xsl:choose>
								<xsl:when test="./REL/RELX">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REL/RELX)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revx">
							<xsl:choose>
								<xsl:when test="./REV/REVX">
									<xsl:value-of select="concat(arco-fn:urify(normalize-space(./REV/REVX)), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
							<xsl:choose>
								<xsl:when test="./REL/RELS and not(./REV/REVS)">
									<xsl:value-of select="concat($NS, 'TimeInterval/', $rels, '-', $revx, arco-fn:urify(normalize-space(./REV/REVI)))" />
								</xsl:when>
								<xsl:when test="./REV/REVS and not(./REL/RELS)">
									<xsl:value-of select="concat($NS, 'TimeInterval/', $relx, arco-fn:urify(normalize-space(./REL/RELI)), '-', $revs)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'TimeInterval/', $rels, '-', $revs)" />
								</xsl:otherwise>
							</xsl:choose>
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:variable name="relv">
							<xsl:choose>
								<xsl:when test="./REL/RELV">
									<xsl:value-of select="concat(normalize-space(./REL/RELV), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relw">
							<xsl:choose>
								<xsl:when test="./REL/RELW">
									<xsl:value-of select="concat(normalize-space(./REL/RELW), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relf">
							<xsl:choose>
								<xsl:when test="./REL/RELF">
									<xsl:value-of select="concat(normalize-space(./REL/RELF), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revv">
							<xsl:choose>
								<xsl:when test="./REV/REVV">
									<xsl:value-of select="concat(normalize-space(./REV/REVV), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revw">
							<xsl:choose>
								<xsl:when test="./REV/REVW">
									<xsl:value-of select="concat(normalize-space(./REV/REVW), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revf">
							<xsl:choose>
								<xsl:when test="./REV/REVF">
									<xsl:value-of select="concat(normalize-space(./REV/REVF), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="rels">
							<xsl:choose>
								<xsl:when test="./REL/RELW">
									<xsl:value-of select="concat($relw, $relf, normalize-space(./REL/RELS))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($relv, $relf, normalize-space(./REL/RELS))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revs">
							<xsl:choose>
								<xsl:when test="./REV/REVW">
									<xsl:value-of select="concat($revw, $revf, normalize-space(./REV/REVS))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($revv, $revf, normalize-space(./REV/REVS))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relx">
							<xsl:choose>
								<xsl:when test="./REL/RELX">
									<xsl:value-of select="concat(normalize-space(./REL/RELX), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revx">
							<xsl:choose>
								<xsl:when test="./REV/REVX">
									<xsl:value-of select="concat(normalize-space(./REV/REVX), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:choose>
							<xsl:when test="./REL/RELS and not(./REV/REVS)">
								<xsl:value-of select="concat($rels, ' - ', $revx, normalize-space(./REV/REVI))" />
							</xsl:when>
							<xsl:when test="./REV/REVS and not(./REL/RELS)">
								<xsl:value-of select="concat($relx, normalize-space(./REL/RELI), ' - ', $revs)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($rels, ' - ', $revs)" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name>
						<xsl:variable name="relv">
							<xsl:choose>
								<xsl:when test="./REL/RELV">
									<xsl:value-of select="concat(normalize-space(./REL/RELV), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relw">
							<xsl:choose>
								<xsl:when test="./REL/RELW">
									<xsl:value-of select="concat(normalize-space(./REL/RELW), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relf">
							<xsl:choose>
								<xsl:when test="./REL/RELF">
									<xsl:value-of select="concat(normalize-space(./REL/RELF), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revv">
							<xsl:choose>
								<xsl:when test="./REV/REVV">
									<xsl:value-of select="concat(normalize-space(./REV/REVV), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revw">
							<xsl:choose>
								<xsl:when test="./REV/REVW">
									<xsl:value-of select="concat(normalize-space(./REV/REVW), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revf">
							<xsl:choose>
								<xsl:when test="./REV/REVF">
									<xsl:value-of select="concat(normalize-space(./REV/REVF), '-')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="rels">
							<xsl:choose>
								<xsl:when test="./REL/RELW">
									<xsl:value-of select="concat($relw, $relf, normalize-space(./REL/RELS))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($relv, $relf, normalize-space(./REL/RELS))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revs">
							<xsl:choose>
								<xsl:when test="./REV/REVW">
									<xsl:value-of select="concat($revw, $revf, normalize-space(./REV/REVS))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($revv, $revf, normalize-space(./REV/REVS))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="relx">
							<xsl:choose>
								<xsl:when test="./REL/RELX">
									<xsl:value-of select="concat(normalize-space(./REL/RELX), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="revx">
							<xsl:choose>
								<xsl:when test="./REV/REVX">
									<xsl:value-of select="concat(normalize-space(./REV/REVX), ' ')" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="''" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:choose>
							<xsl:when test="./REL/RELS and not(./REV/REVS)">
								<xsl:value-of select="concat($rels, ' - ', $revx, normalize-space(./REV/REVI))" />
							</xsl:when>
							<xsl:when test="./REV/REVS and not(./REL/RELS)">
								<xsl:value-of select="concat($relx, normalize-space(./REL/RELI), ' - ', $revs)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($rels, ' - ', $revs)" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<tiapit:time>
					<xsl:variable name="relv">
						<xsl:choose>
							<xsl:when test="./REL/RELV">
								<xsl:value-of select="concat(normalize-space(./REL/RELV), ' ')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="''" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="relw">
						<xsl:choose>
							<xsl:when test="./REL/RELW">
								<xsl:value-of select="concat(normalize-space(./REL/RELW), ' ')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="''" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="relf">
						<xsl:choose>
							<xsl:when test="./REL/RELF">
								<xsl:value-of select="concat(normalize-space(./REL/RELF), ' ')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="''" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="revv">
						<xsl:choose>
							<xsl:when test="./REV/REVV">
								<xsl:value-of select="concat(normalize-space(./REV/REVV), ' ')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="''" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="revw">
						<xsl:choose>
							<xsl:when test="./REV/REVW">
								<xsl:value-of select="concat(normalize-space(./REV/REVW), ' ')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="''" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="revf">
						<xsl:choose>
							<xsl:when test="./REV/REVF">
								<xsl:value-of select="concat(normalize-space(./REV/REVF), '-')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="''" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="rels">
						<xsl:choose>
							<xsl:when test="./REL/RELW">
								<xsl:value-of select="concat($relw, $relf, normalize-space(./REL/RELS))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($relv, $relf, normalize-space(./REL/RELS))" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="revs">
						<xsl:choose>
							<xsl:when test="./REV/REVW">
								<xsl:value-of select="concat($revw, $revf, normalize-space(./REV/REVS))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($revv, $revf, normalize-space(./REV/REVS))" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="relx">
						<xsl:choose>
							<xsl:when test="./REL/RELX">
								<xsl:value-of select="concat(normalize-space(./REL/RELX), ' ')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="''" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="revx">
						<xsl:choose>
							<xsl:when test="./REV/REVX">
								<xsl:value-of select="concat(normalize-space(./REV/REVX), ' ')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="''" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:choose>
						<xsl:when test="./REL/RELS and not(./REV/REVS)">
							<xsl:value-of select="concat($rels, ' - ', $revx, normalize-space(./REV/REVI))" />
						</xsl:when>
						<xsl:when test="./REV/REVS and not(./REL/RELS)">
							<xsl:value-of select="concat($relx, normalize-space(./REL/RELI), ' - ', $revs)" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="concat($rels, ' - ', $revs)" />
						</xsl:otherwise>
					</xsl:choose>
				</tiapit:time>
			</rdf:Description>
				<!-- Time interval with start time and end time -->
				<xsl:if test="./REV/REVI or ./REL/RELI">
					<xsl:variable name="startDate">
						<xsl:choose>
							<xsl:when test="./REL/RELX">
								<xsl:value-of select="concat(normalize-space(./REL/RELI), ' ', normalize-space(./REL/RELX))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="normalize-space(./REL/RELI)" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="endDate">
						<xsl:choose>
							<xsl:when test="./REV/REVX">
								<xsl:value-of select="concat(normalize-space(./REV/REVI), ' ', normalize-space(./REV/REVX))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="normalize-space(./REV/REVI)" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(concat($startDate, '-',  $endDate)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="concat($startDate, ' - ', $endDate)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="concat($startDate, ' - ', $endDate)" />
						</l0:name>
						<arco-arco:startTime>
							<xsl:value-of select="$startDate" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="$endDate" />
						</arco-arco:endTime>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
		<!-- CulturalPropertyType as individual -->
		<xsl:if test="not($sheetType='MODI'or $sheetType='SCAN' or $sheetType='MINP')">
			<xsl:for-each select="record/metadata/schede/*/OG/OGT">
				<rdf:Description>
					<xsl:choose>
						<xsl:when test="not($sheetType='BNB') and not($sheetType='NU') and not($sheetType='F' and ($sheetVersion='1.00' or $sheetVersion='1.00_ICCD0' or $sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')) and not($sheetType='A' and ($sheetVersion='3.00' or $sheetVersion='3.00_ICCD0')) and not($sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0'))">
							<xsl:attribute name="rdf:about">
                     			<xsl:choose>
                            		<xsl:when test="./OGTT">
                                		<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTD, '-', ./OGTT)))" />
                            		</xsl:when>
                            		<xsl:when test="./OGTD">
                                		<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTD))" />
                            		</xsl:when>
                        		</xsl:choose>
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTT">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTT)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTT">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTT)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTD and not(lower-case(normalize-space(./OGTD))='nr' or lower-case(normalize-space(./OGTD))='n.r.' or lower-case(normalize-space(./OGTD))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTD)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTT and not($sheetType='NU') and not(lower-case(normalize-space(./OGTT))='nr' or lower-case(normalize-space(./OGTT))='n.r.' or lower-case(normalize-space(./OGTT))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTT)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
						<xsl:when test="$sheetType='F' and ($sheetVersion='1.00' or $sheetVersion='1.00_ICCD0' or $sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')">
							<xsl:attribute name="rdf:about">
                     			<xsl:choose>
									<xsl:when test="./OGTT">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTD, '-', ./OGTT)))" />
									</xsl:when>
									<xsl:when test="./OGTD">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTD))" />
									</xsl:when>
								</xsl:choose>
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTT">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTT)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTT">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTT)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTD and not(lower-case(normalize-space(./OGTD))='nr' or lower-case(normalize-space(./OGTD))='n.r.' or lower-case(normalize-space(./OGTD))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTD)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTT and not(lower-case(normalize-space(./OGTT))='nr' or lower-case(normalize-space(./OGTT))='n.r.' or lower-case(normalize-space(./OGTT))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTT)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
						<xsl:when test="$sheetType='NU'">
							<xsl:attribute name="rdf:about">
                     			<xsl:choose>
									<xsl:when test="./OGTH">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTD, '-', ./OGTH)))" />
									</xsl:when>
									<xsl:when test="./OGTD">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTD))" />
									</xsl:when>
								</xsl:choose>
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTH">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTH)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTH">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTH)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTD and not(lower-case(normalize-space(./OGTD))='nr' or lower-case(normalize-space(./OGTD))='n.r.' or lower-case(normalize-space(./OGTD))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTD)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTH and not(lower-case(normalize-space(./OGTH))='nr' or lower-case(normalize-space(./OGTH))='n.r.' or lower-case(normalize-space(./OGTH))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTH)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
						<xsl:when test="$sheetType='A' and ($sheetVersion='3.00' or $sheetVersion='3.00_ICCD0')">
							<xsl:attribute name="rdf:about">
                        		<xsl:choose>
                            		<xsl:when test="./OGTQ">
                                		<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTD, '-', ./OGTQ)))" />
                            		</xsl:when>
                            		<xsl:when test="./OGTD">
                                		<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTD))" />
                            		</xsl:when>
                        		</xsl:choose>
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTT">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTT)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTT">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTT)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTD and not(lower-case(normalize-space(./OGTD))='nr' or lower-case(normalize-space(./OGTD))='n.r.' or lower-case(normalize-space(./OGTD))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTD)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTQ and not(lower-case(normalize-space(./OGTQ))='nr' or lower-case(normalize-space(./OGTQ))='n.r.' or lower-case(normalize-space(./OGTQ))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTQ)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
						<xsl:when test="$sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')">
							<xsl:attribute name="rdf:about">
                        		<xsl:choose>
                            		<xsl:when test="./OGTQ">
                                		<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTT, '-', ./OGTQ)))" />
                            		</xsl:when>
                            		<xsl:when test="./OGTT">
                                		<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTT))" />
                            		</xsl:when>
                        		</xsl:choose>
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTQ">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTT, ' ', ./OGTQ)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTT" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTQ">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTT, ' ', ./OGTQ)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTT" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTT and not(lower-case(normalize-space(./OGTT))='nr' or lower-case(normalize-space(./OGTT))='n.r.' or lower-case(normalize-space(./OGTT))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTT)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTQ and not(lower-case(normalize-space(./OGTQ))='nr' or lower-case(normalize-space(./OGTQ))='n.r.' or lower-case(normalize-space(./OGTQ))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTQ)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
						<xsl:when test="$sheetType='BNB' and (./OGTD and starts-with(lower-case(normalize-space(./OGTD)), 'erbario'))">
							<xsl:attribute name="rdf:about">
                        		<xsl:choose>
                            		<xsl:when test="./OGTR">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTD, ' ', ./OGTR)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTD))" />
									</xsl:otherwise>
                        		</xsl:choose>
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTR">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTR" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTR">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTR" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTD and not(lower-case(normalize-space(./OGTD))='nr' or lower-case(normalize-space(./OGTD))='n.r.' or lower-case(normalize-space(./OGTD))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTD)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTR and not(lower-case(normalize-space(./OGTR))='nr' or lower-case(normalize-space(./OGTR))='n.r.' or lower-case(normalize-space(./OGTR))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTR)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
						<xsl:when test="$sheetType='BNB' and (./OGTD and starts-with(lower-case(normalize-space(./OGTD)), 'campione'))">
							<xsl:attribute name="rdf:about">
                        		<xsl:choose>
                            		<xsl:when test="./OGTK">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTD, ' ', ./OGTK)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTD))" />
									</xsl:otherwise>
                        		</xsl:choose>
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTK">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTK)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTK">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTK)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTD and not(lower-case(normalize-space(./OGTD))='nr' or lower-case(normalize-space(./OGTD))='n.r.' or lower-case(normalize-space(./OGTD))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTD)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTK and not(lower-case(normalize-space(./OGTK))='nr' or lower-case(normalize-space(./OGTK))='n.r.' or lower-case(normalize-space(./OGTK))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTK)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
						<xsl:when test="$sheetType='BNB' and (./OGTD and starts-with(lower-case(normalize-space(./OGTD)), 'collezione'))">
							<xsl:attribute name="rdf:about">
                        		<xsl:choose>
                            		<xsl:when test="./OGTZ">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTD, ' ', ./OGTZ)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTD))" />
									</xsl:otherwise>
                        		</xsl:choose>
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTZ">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTZ)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTZ">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTZ)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTD and not(lower-case(normalize-space(./OGTD))='nr' or lower-case(normalize-space(./OGTD))='n.r.' or lower-case(normalize-space(./OGTD))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTD)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTZ and not(lower-case(normalize-space(./OGTZ))='nr' or lower-case(normalize-space(./OGTZ))='n.r.' or lower-case(normalize-space(./OGTZ))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTZ)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
						<xsl:when test="$sheetType='BNB' and (./OGTD and starts-with(lower-case(normalize-space(./OGTD)), 'contenitore'))">
							<xsl:attribute name="rdf:about">
                        		<xsl:choose>
                            		<xsl:when test="./OGTO">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(./OGTD, ' ', ./OGTO)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(./OGTD))" />
									</xsl:otherwise>
                        		</xsl:choose>
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTO">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTO)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:choose>
									<xsl:when test="./OGTO">
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="concat(./OGTD, ' ', ./OGTO)" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase1">
											<xsl:with-param name="text" select="./OGTD" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./OGTD and not(lower-case(normalize-space(./OGTD))='nr' or lower-case(normalize-space(./OGTD))='n.r.' or lower-case(normalize-space(./OGTD))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertyDefinition>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(./OGTD)))" />
                        			</xsl:attribute>
								</arco-dd:hasCulturalPropertyDefinition>
							</xsl:if>
							<xsl:if test="./OGTO and not(lower-case(normalize-space(./OGTO))='nr' or lower-case(normalize-space(./OGTO))='n.r.' or lower-case(normalize-space(./OGTO))='nr (recupero pregresso)')">
								<arco-dd:hasCulturalPropertySpecification>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(./OGTO)))" />
                            		</xsl:attribute>
								</arco-dd:hasCulturalPropertySpecification>
							</xsl:if>
						</xsl:when>
					</xsl:choose>
					<xsl:if test="record/metadata/schede/FF/OG/OGT/OGTY">
						<arco-core:note>
							<xsl:value-of select="normalize-space(record/metadata/schede/FF/OG/OGT/OGTY)" />
						</arco-core:note>
					</xsl:if>
				</rdf:Description>
			</xsl:for-each>
		</xsl:if>
		<xsl:if test="record/metadata/schede/MODI/OG">
			<rdf:Description>
				<xsl:attribute name="rdf:about">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/MODI/OG/OGT">
							<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(record/metadata/schede/MODI/OG/OGD, '-', record/metadata/schede/MODI/OG/OGT)))" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(record/metadata/schede/MODI/OG/OGD))" />
						</xsl:otherwise>
					</xsl:choose>
				</xsl:attribute>
				<rdf:type>
					<xsl:attribute name="rdf:resource">
						<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
					</xsl:attribute>
				</rdf:type>
				<rdfs:label  xml:lang="it">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/MODI/OG/OGT">
							<xsl:call-template name="CamelCase1">
								<xsl:with-param name="text" select="concat(record/metadata/schede/MODI/OG/OGD, ' ', record/metadata/schede/MODI/OG/OGT)" />
							</xsl:call-template>
						</xsl:when>
						<xsl:otherwise>
							<xsl:call-template name="CamelCase1">
								<xsl:with-param name="text" select="record/metadata/schede/MODI/OG/OGD" />
							</xsl:call-template>
						</xsl:otherwise>
					</xsl:choose>
				</rdfs:label>
				<l0:name  xml:lang="it">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/MODI/OG/OGT">
							<xsl:call-template name="CamelCase1">
								<xsl:with-param name="text" select="concat(record/metadata/schede/MODI/OG/OGD, ' ', record/metadata/schede/MODI/OG/OGT)" />
							</xsl:call-template>
						</xsl:when>
						<xsl:otherwise>
							<xsl:call-template name="CamelCase1">
								<xsl:with-param name="text" select="record/metadata/schede/MODI/OG/OGD" />
							</xsl:call-template>
						</xsl:otherwise>
					</xsl:choose>
				</l0:name>
				<xsl:if test="record/metadata/schede/MODI/OG/OGD">
					<arco-dd:hasCulturalPropertyDefinition>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(record/metadata/schede/MODI/OG/OGD)))" />
						</xsl:attribute>
					</arco-dd:hasCulturalPropertyDefinition>
				</xsl:if>
				<xsl:if test="record/metadata/schede/MODI/OG/OGT">
					<arco-dd:hasCulturalPropertySpecification>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/MODI/OG/OGT)))" />
						</xsl:attribute>
					</arco-dd:hasCulturalPropertySpecification>
				</xsl:if>
			</rdf:Description>
		</xsl:if>
		<xsl:if test="$sheetType='SCAN' or $sheetType='MINP'">
			<xsl:if test="record/metadata/schede/*/OG/OGD">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/OG/OGW">
								<xsl:choose>
									<xsl:when test="record/metadata/schede/*/OG/OGT">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(record/metadata/schede/*/OG/OGW, '-', record/metadata/schede/*/OG/OGD, '-', record/metadata/schede/*/OG/OGT)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(record/metadata/schede/*/OG/OGW, '-', record/metadata/schede/*/OG/OGD)))" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:when>
							<xsl:otherwise>
								<xsl:choose>
									<xsl:when test="record/metadata/schede/*/OG/OGT">
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(concat(record/metadata/schede/*/OG/OGD, '-', record/metadata/schede/*/OG/OGT)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalPropertyType/', arco-fn:arcofy(record/metadata/schede/*/OG/OGD))" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyType'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label  xml:lang="it">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/OG/OGW">
								<xsl:value-of select="concat(record/metadata/schede/*/OG/OGW, ' di ', record/metadata/schede/*/OG/OGD, ' ',record/metadata/schede/*/OG/OGT)"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat(record/metadata/schede/*/OG/OGD, ' ', record/metadata/schede/*/OG/OGT)"/>
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name  xml:lang="it">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/OG/OGW">
								<xsl:value-of select="concat(record/metadata/schede/*/OG/OGW, ' di ', record/metadata/schede/*/OG/OGD, ' ',record/metadata/schede/*/OG/OGT)"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat(record/metadata/schede/*/OG/OGD, ' ', record/metadata/schede/*/OG/OGT)"/>
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<xsl:if test="record/metadata/schede/*/OG/OGD">
						<arco-dd:hasCulturalPropertyDefinition>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGD)))" />
							</xsl:attribute>
						</arco-dd:hasCulturalPropertyDefinition>
					</xsl:if>
					<xsl:if test="record/metadata/schede/MODI/OG/OGT">
						<arco-dd:hasCulturalPropertySpecification>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT)))" />
							</xsl:attribute>
						</arco-dd:hasCulturalPropertySpecification>
					</xsl:if>
				</rdf:Description>
			</xsl:if>
		</xsl:if>
		<!-- We add the definition as an individual. The definition is associated 
				with a Cultural Property Type by the property arco-dd:hasCulturalPropertyDefinition. -->
		<xsl:if test="not($sheetType='MODI' or $sheetType='SCAN' or $sheetType='MINP')">
			<xsl:choose>
				<xsl:when test="not($sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0'))">
					<xsl:if test="record/metadata/schede/*/OG/OGT/OGTD and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTD))='nr' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTD))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTD))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyDefinition'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTD)" />
							</rdfs:label>
							<xsl:variable name="skos-term">
								<xsl:choose>
									<xsl:when test="$sheetType='RA'">
										<xsl:value-of select="arco-fn:ra-definition(normalize-space(record/metadata/schede/*/OG/OGT/OGTD))" />
									</xsl:when>
									<xsl:when test="$sheetType='PST'">
										<xsl:value-of select="arco-fn:pst-definition(normalize-space(record/metadata/schede/*/OG/OGT/OGTD))" />
									</xsl:when>
									<xsl:when test="$sheetType='A' or $sheetType='PG'">
										<xsl:value-of select="arco-fn:a-definition(normalize-space(record/metadata/schede/*/OG/OGT/OGTD))" />
									</xsl:when>
								</xsl:choose>
							</xsl:variable>
							<xsl:if test="$skos-term != ''">
								<skos:closeMatch>
									<xsl:attribute name="rdf:resource">
									<xsl:value-of select="$skos-term" />
								</xsl:attribute>
								</skos:closeMatch>
							</xsl:if>
						</rdf:Description>
					</xsl:if>				
				</xsl:when>
				<xsl:when test="$sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')">
					<xsl:if test="record/metadata/schede/*/OG/OGT/OGTT and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTT))='nr' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTT))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTT))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                        	<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTT)))" />
	                    	</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyDefinition'" />
	                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTT)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:when>
			</xsl:choose>
		</xsl:if>
		<xsl:if test="$sheetType='MODI' or $sheetType='SCAN' or $sheetType='MINP'">
			<xsl:if test="record/metadata/schede/*/OG/OGD">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS,'CulturalPropertyDefinition/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGD)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertyDefinition'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGD)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGD)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
		</xsl:if>
		<!-- We add the cultural property specification as an individual. It's 
			associated with a Cultural Property Type by the property arco-dd:hasCulturalPropertySpecification. -->
		<xsl:if test="record/metadata/schede/F/OG/OGT/OGTS">
			<rdf:Description>
				<xsl:attribute name="rdf:about">
					<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/F/OG/OGT/OGTS)))" />
				</xsl:attribute>
				<rdf:type>
					<xsl:attribute name="rdf:resource">
						<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
					</xsl:attribute>
				</rdf:type>
				<rdfs:label>
					<xsl:value-of select="normalize-space(record/metadata/schede/F/OG/OGT/OGTS)" />
				</rdfs:label>
			</rdf:Description>
		</xsl:if>
		<xsl:if test="record/metadata/schede/NU/OG/OGT/OGTH">
			<rdf:Description>
				<xsl:attribute name="rdf:about">
					<xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/NU/OG/OGT/OGTH)))" />
				</xsl:attribute>
				<rdf:type>
					<xsl:attribute name="rdf:resource">
						<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
					</xsl:attribute>
				</rdf:type>
				<rdfs:label>
					<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTH)" />
				</rdfs:label>
			</rdf:Description>
		</xsl:if>
		<xsl:if test="not($sheetType='MODI' or $sheetType='SCAN' or $sheetType='MINP')">
			<xsl:choose>
				<xsl:when test="not($sheetType='BNB') and not($sheetType='NU') and not($sheetType='A' and ($sheetVersion='3.00' or $sheetVersion='3.00_ICCD0')) and not($sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0'))">
					<xsl:if test="record/metadata/schede/*/OG/OGT/OGTT and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTT))='nr' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTT))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTT))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTT)))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of
									select="normalize-space(record/metadata/schede/*/OG/OGT/OGTT)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:when>
				<xsl:when
					test="($sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')) or ($sheetType='A' and ($sheetVersion='3.00' or $sheetVersion='3.00_ICCD0'))">
					<xsl:if
						test="record/metadata/schede/*/OG/OGT/OGTQ and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTQ))='nr' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTQ))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTQ))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of
								select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTQ)))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of
									select="normalize-space(record/metadata/schede/*/OG/OGT/OGTQ)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:when>
				<xsl:when
					test="$sheetType='BNB' and (record/metadata/schede/BNB/OG/OGT/OGTD and starts-with(lower-case(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTD)), 'campione'))">
					<xsl:if
						test="record/metadata/schede/BNB/OG/OGT/OGTK and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTK))='nr' or lower-case(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTK))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTK))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of
								select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTK)))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of
									select="normalize-space(record/metadata/schede/BNB/OG/OGT/OGTK)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:when>
				<xsl:when
					test="$sheetType='BNB' and (record/metadata/schede/BNB/OG/OGT/OGTD and starts-with(lower-case(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTD)), 'erbario'))">
					<xsl:if
						test="record/metadata/schede/*/OG/OGT/OGTR and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTR))='nr' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTR))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTR))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of
								select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTR)))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of
									select="normalize-space(record/metadata/schede/*/OG/OGT/OGTR)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:when>
				<xsl:when
					test="$sheetType='BNB' and (record/metadata/schede/BNB/OG/OGT/OGTD and starts-with(lower-case(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTD)), 'collezione'))">
					<xsl:if
						test="record/metadata/schede/*/OG/OGT/OGTZ and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTZ))='nr' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTZ))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTZ))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of
								select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTZ)))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of
									select="normalize-space(record/metadata/schede/*/OG/OGT/OGTZ)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:when>
				<xsl:when test="$sheetType='BNB' and (record/metadata/schede/BNB/OG/OGT/OGTD and starts-with(lower-case(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTD)), 'contenitore'))">
					<xsl:if
						test="record/metadata/schede/*/OG/OGT/OGTO and not(lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTO))='nr' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTO))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/OG/OGT/OGTO))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of
								select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTO)))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of
									select="normalize-space(record/metadata/schede/*/OG/OGT/OGTO)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:when>
			</xsl:choose>
			</xsl:if>
		<xsl:if test="$sheetType='MODI' or $sheetType='SCAN' or $sheetType='MINP'">
			<xsl:if test="record/metadata/schede/*/OG/OGT">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
	                       <xsl:value-of select="concat($NS,'CulturalPropertySpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT)))" />
	                   </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CulturalPropertySpecification'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
		</xsl:if>
			<!-- Cataloguing Agency - Agent Role CD/ESC -->
			<xsl:if test="(not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CD/ESC)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CD/ESC)), 'n.r')))">
				<xsl:for-each select="record/metadata/schede/*/CD/ESC">
					<xsl:variable name="getName">
						<xsl:value-of select="arco-fn:get-nome-ente-from-codice(.)" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-cataloguing-agency')" />
                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ente schedatore del bene ', $itemURI, ': ', arco-fn:get-nome-ente-from-codice(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Cataloguing agency for cultural property ', $itemURI, ': ', arco-fn:get-nome-ente-from-codice(.))" />
						</rdfs:label>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/CataloguinAgency')" />
                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        	<xsl:value-of select="concat($NS, 'Role/CataloguinAgency')" />
                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Ente schedatore'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Cataloguing agency'" />
						</rdfs:label>
						<arco-core:isRoleOf>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-cataloguing-agency')" />
                        </xsl:attribute>
						</arco-core:isRoleOf>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
    	                    <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
                	       </xsl:attribute>
						</rdf:type>
						<xsl:choose>
							<xsl:when test="string-length($getName)>0">
								<rdfs:label>
									<xsl:value-of select="arco-fn:get-nome-ente-from-codice(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:get-nome-ente-from-codice(.)" />
								</l0:name>
							</xsl:when>
							<xsl:otherwise>
								<rdfs:label>
									<xsl:value-of select="." />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="." />
								</l0:name>
							</xsl:otherwise>
						</xsl:choose>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<!-- Proponent Agent - Agent Role CD/EPR -->
			<xsl:if
				test="(not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CD/EPR)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CD/EPR)), 'n.r')))">
				<xsl:for-each select="record/metadata/schede/*/CD/EPR">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-proponent-agent')" />
                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            <xsl:value-of
								select="'https://w3id.org/arco/ontology/core/AgentRole'" />
                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of
								select="concat('Ente proponente del bene ', $itemURI, ': ', .)" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of
								select="concat('Proponent agent for cultural property ', $itemURI, ': ', .)" />
						</rdfs:label>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
                            <xsl:value-of
								select="concat($NS, 'Role/ProponentAgent')" />
                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
                            <xsl:value-of
								select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        <xsl:value-of
							select="concat($NS, 'Role/ProponentAgent')" />
                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            <xsl:value-of
								select="'https://w3id.org/italia/onto/RO/Role'" />
                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Ente proponente'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Proponent agent'" />
						</rdfs:label>
						<arco-core:isRoleOf>
							<xsl:attribute name="rdf:resource">
                            <xsl:value-of
								select="concat($NS, 'AgentRole/', $itemURI, '-proponent-agency')" />
                        </xsl:attribute>
						</arco-core:isRoleOf>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        <xsl:value-of
							select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            <xsl:value-of
								select="'https://w3id.org/italia/onto/COV/Organization'" />
                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of
								select="arco-fn:cataloguing-entity(normalize-space(.))" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of
								select="arco-fn:cataloguing-entity(normalize-space(.))" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<!-- Heritage Protection Agency - Agent Role CD/ECP -->
			<xsl:choose>
				<xsl:when test="record/metadata/schede/harvesting/enteCompetente">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-heritage-protection-agency')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ente competente per tutela del bene ', $itemURI, ': ', arco-fn:get-nome-ente-from-codice(record/metadata/schede/harvesting/enteCompetente))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Heritage protection agency for cultural property ', $itemURI, ': ', arco-fn:get-nome-ente-from-codice(record/metadata/schede/harvesting/enteCompetente))" />
						</rdfs:label>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Role/HeritageProtectionAgency')" />
	                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(record/metadata/schede/harvesting/enteCompetente))" />
	                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Role/HeritageProtectionAgency')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Ente competente per tutela'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Heritage Protection Agency'" />
						</rdfs:label>
						<arco-core:isRoleOf>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-heritage-protection-agency')" />
	                        </xsl:attribute>
						</arco-core:isRoleOf>
					</rdf:Description>
				</xsl:when>
				<xsl:otherwise>
					<xsl:if test="record/metadata/schede/*/CD/ECP and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CD/ECP)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CD/ECP)), 'n.r')))">
						<xsl:variable name="getName">
							<xsl:value-of select="arco-fn:get-nome-ente-from-codice(record/metadata/schede/*/CD/ECP)" />
						</xsl:variable>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            	            <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-heritage-protection-agency')" />
	                   		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	            	                <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                       		</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Ente competente per tutela del bene ', $itemURI, ': ', arco-fn:get-nome-ente-from-codice(record/metadata/schede/*/CD/ECP))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Heritage protection agency for cultural property ', $itemURI, ': ', arco-fn:get-nome-ente-from-codice(record/metadata/schede/*/CD/ECP))" />
							</rdfs:label>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
	                   		        <xsl:value-of select="concat($NS, 'Role/HeritageProtectionAgency')" />
	                       		</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
	                   		        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(record/metadata/schede/*/CD/ECP))" />
	                       		</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
			                       <xsl:value-of select="concat($NS, 'Role/HeritageProtectionAgency')" />
			                   </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                   		        <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
			                       </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Ente competente per tutela'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Heritage Protection Agency'" />
							</rdfs:label>
							<arco-core:isRoleOf>
								<xsl:attribute name="rdf:resource">
	            	                <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-heritage-protection-agency')" />
			                       </xsl:attribute>
							</arco-core:isRoleOf>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            	            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(record/metadata/schede/*/CD/ECP))" />
			                   </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                   		        <xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
			                       </xsl:attribute>
							</rdf:type>
							<xsl:choose>
								<xsl:when test="string-length($getName)>0">
									<rdfs:label>
										<xsl:value-of select="arco-fn:get-nome-ente-from-codice(record/metadata/schede/*/CD/ECP)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="arco-fn:get-nome-ente-from-codice(record/metadata/schede/*/CD/ECP)" />
									</l0:name>
								</xsl:when>
								<xsl:otherwise>
									<rdfs:label>
										<xsl:value-of select="record/metadata/schede/*/CD/ECP" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="record/metadata/schede/*/CD/ECP" />
									</l0:name>
								</xsl:otherwise>
							</xsl:choose>
						</rdf:Description>
					</xsl:if>
				</xsl:otherwise>
			</xsl:choose>
			<!-- Acquisition of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/TU/ACQ">
				<xsl:variable name="parentPosition">
					<xsl:value-of select="position()" />
				</xsl:variable>		
				<rdf:Description>
					<xsl:attribute name="rdf:about">
       	    			<xsl:value-of select="concat($NS, 'Acquisition/', $itemURI, '-acquisition-', position())" />
           			</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
           					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Acquisition'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Acquisizione ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Acquisizione ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Acquisition ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Acquisition ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./ACQT and (not(starts-with(lower-case(normalize-space(./ACQT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACQT)), 'n.r.')) and not(starts-with(lower-case(normalize-space(./ACQT)), 'dato non')) and not(starts-with(lower-case(normalize-space(./ACQT)), 'non ')) and not(starts-with(lower-case(normalize-space(./ACQT)), 'ignota')) and not(starts-with(lower-case(normalize-space(./ACQT)), '-')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
       	    					<xsl:value-of select="concat($NS, 'AcquisitionType/', arco-fn:urify(normalize-space(./ACQT)))" />
           					</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:for-each select="./ACQN">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', $parentPosition, '-transferor-', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
					</xsl:for-each>
					<xsl:if test="./ACQD and (not(starts-with(lower-case(normalize-space(./ACQD)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACQD)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ACQD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./ACQE">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./ACQE)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./ACQL and not(starts-with(lower-case(normalize-space(./ACQL)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACQL)), 'n.r'))">
						<arco-cd:acquisitionLocation>
							<xsl:value-of select="normalize-space(./ACQL)" />
						</arco-cd:acquisitionLocation>
					</xsl:if>
					<xsl:if test="./ACQC and (not(starts-with(lower-case(normalize-space(./ACQC)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACQC)), 'n.r')))">
						<arco-cd:acquisitionCost>
							<xsl:value-of select="normalize-space(./ACQC)" />
						</arco-cd:acquisitionCost>
					</xsl:if>
				</rdf:Description>
				<!-- Time interval as an individual -->
				<xsl:if test="./ACQD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ACQD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ACQD)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./ACQD)" />
						</l0:name>
						<arco-arco:startTime>
							<xsl:value-of select="normalize-space(./ACQD)" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="normalize-space(./ACQD)" />
						</arco-arco:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- acquisition type as an individual -->
				<xsl:if test="./ACQT and (not(starts-with(lower-case(normalize-space(./ACQT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACQT)), 'n.r.')) and not(starts-with(lower-case(normalize-space(./ACQT)), 'dato non')) and not(starts-with(lower-case(normalize-space(./ACQT)), 'non riferit')) and not(starts-with(lower-case(normalize-space(./ACQT)), 'ignota')) and not(starts-with(lower-case(normalize-space(./ACQT)), '-')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
           					<xsl:value-of select="concat($NS, 'AcquisitionType/', arco-fn:urify(normalize-space(./ACQT)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
           						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AcquisitionType'" />
           					</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ACQT)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./ACQT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- transferor of acquisition as an individual and previuous owner -->
				<xsl:for-each select="./ACQN">
					<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
						<!-- previous owner as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
               					<xsl:value-of select="concat($NS, 'LegalSituation/', $itemURI, '-legal-situation-', position())" />
		                	</xsl:attribute>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Condizione giuridica ', position(), 'del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Condizione giuridica ', position(), 'del bene culturale ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Legal situation ', position(), 'of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Legal situation ', position(), 'of cultural property ', $itemURI)" />
							</l0:name>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LegalSituation'" />
								</xsl:attribute>
							</rdf:type>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-previous-owner', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</rdf:Description>
						<!-- prevoious owner of acquisition as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-previous-owner', position())" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Proprietario precedente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Previous owner ', position(), 'of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Proprietario precedente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Previous owner ', position(), 'of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/PreviousOwner')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-core:hasAgent>
							<xsl:if test="contains((.), '?')">
								<arco-core:uncertainData>
									<xsl:value-of select="true()" />
								</arco-core:uncertainData>
							</xsl:if>
						</rdf:Description>
						<!-- role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/PreviousOwner')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Possessore precedente'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Previous owner'" />
							</rdfs:label>
						</rdf:Description>
						<!-- transferor of acquisition as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-', $parentPosition, '-transferor-', position())" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Cedente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Transferor ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Cedente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Transferor ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/Transferor')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-core:hasAgent>
							<xsl:if test="contains((.), '?')">
								<arco-core:uncertainData>
									<xsl:value-of select="true()" />
								</arco-core:uncertainData>
							</xsl:if>
						</rdf:Description>
						<!-- role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Transferor')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Cedente'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Transferor'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
        	    				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
            				</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
            					</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:for-each>
			<!-- Change of availability of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/TU/ALN">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'ChangeOfAvailability/', $itemURI, '-change-of-availability')" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ChangeOfAvailability'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Mutamento condizione materiale del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Mutamento condizione materiale del bene culturale: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Change of availability of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Change of availability of cultural property: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./ALNT and (not(starts-with(lower-case(normalize-space(./ALNT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ALNT)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'ChangeOfAvailabilityType/', arco-fn:urify(normalize-space(./ALNT)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./ALND and (not(starts-with(lower-case(normalize-space(./ALND)), 'nr')) and not(starts-with(lower-case(normalize-space(./ALND)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ALND)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./ALNN">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./ALNN)" />
						</arco-core:note>
					</xsl:if>
				</rdf:Description>
				<!-- Time interval as an individual -->
				<xsl:if test="./ALND">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ALND)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ALND)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./ALND)" />
						</l0:name>
						<tiapit:time>
							<xsl:value-of select="normalize-space(./ALND)" />
						</tiapit:time>
					</rdf:Description>
				</xsl:if>
				<!-- ChangeOfAvailability type as an individual -->
				<xsl:if test="./ALNT and (not(starts-with(lower-case(normalize-space(./ALNT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ALNT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'ChangeOfAvailabilityType/', arco-fn:urify(normalize-space(./ALNT)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ChangeOfAvailabilityType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ALNT)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./ALNT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Documentation of cultural property -->
			<xsl:for-each select="record/metadata/schede/*/DO/DCM">
				<xsl:variable name="docu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:choose>
							<xsl:when test="contains((./DCMP), 'documentazione fotografica')">
								<xsl:value-of select="concat($NS, 'PhotographicDocumentation/', $itemURI, '-documentation-', position())" />
							</xsl:when>
							<xsl:when test="contains((./DCMP), 'documentazione grafica')">
	                			<xsl:value-of select="concat($NS, 'GraphicOrCartographicDocumentation/', $itemURI, '-documentation-', position())" />
							</xsl:when>
							<xsl:when test="contains((./DCMP), 'documentazione audio')">
	                			<xsl:value-of select="concat($NS, 'AudioDocumentation/', $itemURI, '-documentation-', position())" />
							</xsl:when>
							<xsl:when test="contains((./DCMP), 'documentazione video')">
	                			<xsl:value-of select="concat($NS, 'FilmDocumentation/', $itemURI, '-documentation-', position())" />
							</xsl:when>
							<xsl:otherwise>
	                			<xsl:value-of select="concat($NS, 'Documentation/', $itemURI, '-documentation-', position())" />
							</xsl:otherwise>
						</xsl:choose>
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="contains((./DCMP), 'documentazione fotografica')">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PhotographicDocumentation'" />
								</xsl:when>
								<xsl:when test="contains((./DCMP), 'documentazione grafica')">
	                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/GraphicOrCartographicDocumentation'" />
								</xsl:when>
								<xsl:when test="contains((./DCMP), 'documentazione audio')">
	                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AudioDocumentation'" />
								</xsl:when>
								<xsl:when test="contains((./DCMP), 'documentazione video')">
	                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/FilmDocumentation'" />
								</xsl:when>
								<xsl:otherwise>
	                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Documentation'" />
								</xsl:otherwise>
							</xsl:choose>
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Documentazione ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./DCMM and (not(starts-with(lower-case(normalize-space(./DCMM)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMM)), 'n.r')))">
						<arco-cd:documentationTitle>
							<xsl:value-of select="normalize-space(./DCMM)" />
						</arco-cd:documentationTitle>
					</xsl:if>
					<xsl:if test="./DCMM and (not(starts-with(lower-case(normalize-space(./DCMM)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMM)), 'n.r')))">
						<arco-cd:caption>
							<xsl:value-of select="normalize-space(./DCMM)" />
						</arco-cd:caption>
					</xsl:if>
					<xsl:if test="./DCMN">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./DCMN)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./DCMR">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DCMR)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./DCMC and not(./DCMC='N/R') and (not(starts-with(lower-case(normalize-space(./DCMC)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMC)), 'n.r')))">
						<arco-cd:documentationLocation>
							<xsl:value-of select="normalize-space(./DCMC)" />
						</arco-cd:documentationLocation>
					</xsl:if>
					<xsl:if test="./DCMS and (not(starts-with(lower-case(normalize-space(./DCMS)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMS)), 'n.r')))">
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./DCMS)" />
						</arco-core:specifications>
					</xsl:if>
					<xsl:if test="./DCMK and (not(starts-with(lower-case(normalize-space(./DCMK)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMK)), 'n.r')))">
						<arco-cd:digitalFileName>
							<xsl:value-of select="normalize-space(./DCMK)" />
						</arco-cd:digitalFileName>
					</xsl:if>
					<xsl:if test="./DCMT and (not(starts-with(lower-case(normalize-space(./DCMT)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMT)), 'n.r')))">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./DCMT)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./DCMW and (not(starts-with(lower-case(normalize-space(./DCMW)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMW)), 'n.r')))">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./DMCW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if test="./DCML and (not(starts-with(lower-case(normalize-space(./DCML)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCML)), 'n.r')))">
						<arco-cd:hasLicense>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'License/', arco-fn:urify(normalize-space(./DCML)))" />
						</xsl:attribute>
						</arco-cd:hasLicense>
					</xsl:if>
					<xsl:if test="./DCMP and (not(starts-with(lower-case(normalize-space(./DCMP)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMP)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./DCMP)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./DCMA and (not(starts-with(lower-case(normalize-space(./DCMA)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMA)), 'n.r')))">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./DCMA))" />
            				</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
					<xsl:if test="./DCME and (not(starts-with(lower-case(normalize-space(./DCME)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCME)), 'n.r')))">
						<arco-lite:hasOwner>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./DCME))" />
            				</xsl:attribute>
						</arco-lite:hasOwner>
					</xsl:if>
				</rdf:Description>
				<!-- time interval as individual -->
				<xsl:if test="./DCMR">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DCMR)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./DCMR)" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./DCMR)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./DCMR)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- License as individual -->
				<xsl:if test="./DCML and (not(starts-with(lower-case(normalize-space(./DCML)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCML)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'License/', arco-fn:urify(normalize-space(./DCML)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/License'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./DCML)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./DCML)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation type of photographic documentation as an individual -->
				<xsl:if test="./DCMP and (not(starts-with(lower-case(normalize-space(./DCMP)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./DCMP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./DCMP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./DCMP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation author of photographic documentation as an individual -->
				<xsl:if test="./DCMA and (not(starts-with(lower-case(normalize-space(./DCMA)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCMA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./DCMA))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./DCMA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./DCMA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agent role of documentation as an individual -->
				<xsl:if test="./DCME and (not(starts-with(lower-case(normalize-space(./DCME)), 'nr')) and not(starts-with(lower-case(normalize-space(./DCME)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./DCME))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./DCME)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./DCME)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Photographic documentation of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/DO/FTA">
				<xsl:variable name="photodocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'PhotographicDocumentation/', $itemURI, '-photographic-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PhotographicDocumentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Photographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Photographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione fotografica ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Documentazione fotografica ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./FTAM and (not(starts-with(lower-case(normalize-space(./FTAM)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAM)), 'n.r')))">
						<arco-cd:documentationTitle>
							<xsl:value-of select="normalize-space(./FTAM)" />
						</arco-cd:documentationTitle>
					</xsl:if>
					<xsl:if test="./FTAM and (not(starts-with(lower-case(normalize-space(./FTAM)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAM)), 'n.r')))">
						<arco-cd:caption>
							<xsl:value-of select="normalize-space(./FTAM)" />
						</arco-cd:caption>
					</xsl:if>
					<xsl:if test="./FTAN and (not(starts-with(lower-case(normalize-space(./FTAN)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAN)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./FTAN)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./FTAD and (not(starts-with(lower-case(normalize-space(./FTAD)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAD)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./FTAD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./FTAC and not(./FTAC='N/R') and (not(starts-with(lower-case(normalize-space(./FTAC)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAC)), 'n.r')))">
						<arco-cd:documentationLocation>
							<xsl:value-of select="normalize-space(./FTAC)" />
						</arco-cd:documentationLocation>
					</xsl:if>
					<xsl:if test="./FTAS and (not(starts-with(lower-case(normalize-space(./FTAS)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAS)), 'n.r')))">
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./FTAS)" />
						</arco-core:specifications>
					</xsl:if>
					<xsl:if test="./FTAK and (not(starts-with(lower-case(normalize-space(./FTAK)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAK)), 'n.r')))">
						<arco-cd:digitalFileName>
							<xsl:value-of select="normalize-space(./FTAK)" />
						</arco-cd:digitalFileName>
					</xsl:if>
					<xsl:if test="./FTAT and (not(starts-with(lower-case(normalize-space(./FTAT)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAT)), 'n.r')))">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./FTAT)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./FTAW and (not(starts-with(lower-case(normalize-space(./FTAW)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAW)), 'n.r')))">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./FTAW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if test="./FTAY and (not(starts-with(lower-case(normalize-space(./FTAY)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAY)), 'n.r')))">
						<arco-cd:hasCopyright>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-photographicdocumentation-', position())" />
						</xsl:attribute>
					</arco-cd:hasCopyright>
					</xsl:if>
					<xsl:if test="./FTAR and (not(starts-with(lower-case(normalize-space(./FTAR)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAR)), 'n.r')))">
						<arco-cd:stripRunAndFrameNumber>
							<xsl:value-of select="normalize-space(./FTAR)" />
						</arco-cd:stripRunAndFrameNumber>
					</xsl:if>
					<xsl:if test="./FTAP and (not(starts-with(lower-case(normalize-space(./FTAP)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAP)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FTAP)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./FTAF and (not(starts-with(lower-case(normalize-space(./FTAF)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAF)), 'n.r')))">
						<arco-dd:hasFormat>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./FTAF)))" />
            				</xsl:attribute>
						</arco-dd:hasFormat>
					</xsl:if>
					<xsl:if test="./FTAA and (not(starts-with(lower-case(normalize-space(./FTAA)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAA)), 'n.r')))">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FTAA))" />
            				</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
					<xsl:if test="./FTAE and (not(starts-with(lower-case(normalize-space(./FTAE)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAE)), 'n.r')))">
						<arco-lite:hasOwner>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FTAE))" />
            				</xsl:attribute>
						</arco-lite:hasOwner>
					</xsl:if>
				</rdf:Description>
				<!-- copyright -->
				<xsl:if test="./FTAY and (not(starts-with(lower-case(normalize-space(./FTAY)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAY)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-photographicdocumentation-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copyright'" />
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</l0:name>
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./FTAY)" />
						</arco-core:specifications>
					</rdf:Description>
				</xsl:if>
				<!-- timeinterval -->
				<xsl:if test="./FTAD and (not(starts-with(lower-case(normalize-space(./FTAD)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAD)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DCMR)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./FTAD)" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./FTAD)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./FTAD)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- documentation type of photographic documentation as an individual -->
				<xsl:if test="./FTAP and (not(starts-with(lower-case(normalize-space(./FTAP)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FTAP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./FTAP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./FTAP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation format of photographic documentation as an individual -->
				<xsl:if test="./FTAF and (not(starts-with(lower-case(normalize-space(./FTAF)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAF)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./FTAF)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Format'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./FTAF)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./FTAF)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation author of photographic documentation as an individual -->
				<xsl:if test="./FTAA and (not(starts-with(lower-case(normalize-space(./FTAA)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FTAA))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./FTAA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./FTAA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agent role of photographic documentation as an individual -->
				<xsl:if test="./FTAE and (not(starts-with(lower-case(normalize-space(./FTAE)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAE)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FTAE))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./FTAE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./FTAE)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/DO/FTE">
				<xsl:variable name="photodocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'PhotographicDocumentation/', $itemURI, '-photographic-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PhotographicDocumentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Photographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Photographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione fotografica ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Documentazione fotografica ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./FTEH and (not(starts-with(lower-case(normalize-space(./FTEH)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTEH)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./FTEH)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./FTEN and not(./FTEN='N/R') and (not(starts-with(lower-case(normalize-space(./FTEN)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTEN)), 'n.r')))">
						<arco-cd:documentationLocation>
							<xsl:value-of select="normalize-space(./FTEN)" />
						</arco-cd:documentationLocation>
					</xsl:if>
					<xsl:if test="./FTET and (not(starts-with(lower-case(normalize-space(./FTET)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTET)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FTET)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
				</rdf:Description>
				<!-- documentation type of photographic documentation as an individual -->
				<xsl:if test="./FTET and (not(starts-with(lower-case(normalize-space(./FTET)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTET)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FTET)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./FTET)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./FTET)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/AL/FTA">
				<xsl:variable name="photodocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'PhotographicDocumentation/', $itemURI, '-photographic-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PhotographicDocumentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Photographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Photographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione fotografica ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Documentazione fotografica ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./FTAN and (not(starts-with(lower-case(normalize-space(./FTAN)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAN)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./FTAN)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./FTAT and (not(starts-with(lower-case(normalize-space(./FTAT)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAT)), 'n.r')))">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./FTAT)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./FTAP and (not(starts-with(lower-case(normalize-space(./FTAP)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAP)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FTAP)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
				</rdf:Description>
				<!-- documentation type of photographic documentation as an individual -->
				<xsl:if test="./FTAP and (not(starts-with(lower-case(normalize-space(./FTAP)), 'nr')) and not(starts-with(lower-case(normalize-space(./FTAP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FTAP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./FTAP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./FTAP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Graphic or cartographic documentation of cultural property as an 
				individual -->
			<xsl:for-each select="record/metadata/schede/*/DO/DRA">
				<xsl:variable name="cartodocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'GraphicOrCartographicDocumentation/', $itemURI, '-graphic-cartographic-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/GraphicOrCartographicDocumentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Graphic or cartographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Graphic or cartographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione grafica o cartografica ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Documentazione grafica o cartografica ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./DRAN and (not(starts-with(lower-case(normalize-space(./DRAN)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAN)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./DRAN)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./DRAN and (not(starts-with(lower-case(normalize-space(./DRAN)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAN)), 'n.r')))">
						<xsl:for-each select="./DRAN">
							<xsl:variable name="url" select="arco-fn:find-link-emm(.)" />
							<xsl:for-each select="$url">
								<smapit:URL>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="." />
									</xsl:attribute>
								</smapit:URL>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:if>
					<xsl:if test="./DRAD and (not(starts-with(lower-case(normalize-space(./DRAD)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAD)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DRAD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./DRAC and not(./DRAC='N/R') and (not(starts-with(lower-case(normalize-space(./DRAC)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAC)), 'n.r')))">
						<arco-cd:documentationLocation>
							<xsl:value-of select="normalize-space(./DRAC)" />
						</arco-cd:documentationLocation>
					</xsl:if>
					<xsl:if test="./DRAP and (not(starts-with(lower-case(normalize-space(./DRAP)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAP)), 'n.r')))">
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./DRAP)" />
						</arco-core:specifications>
					</xsl:if>
					<xsl:if test="./DRAK and (not(starts-with(lower-case(normalize-space(./DRAK)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAK)), 'n.r')))">
						<arco-cd:digitalFileName>
							<xsl:value-of select="normalize-space(./DRAK)" />
						</arco-cd:digitalFileName>
					</xsl:if>
					<xsl:if test="./DRAO and (not(starts-with(lower-case(normalize-space(./DRAO)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAO)), 'n.r')))">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./DRAO)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./DRAW">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./DRAW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if test="./DRAY and (not(starts-with(lower-case(normalize-space(./DRAY)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAY)), 'n.r')))">
						<arco-cd:hasCopyright>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-graphicdocumentation-', position())" />
						</xsl:attribute>
					</arco-cd:hasCopyright>
					</xsl:if>
					<xsl:if test="./DRAM and (not(starts-with(lower-case(normalize-space(./DRAM)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAM)), 'n.r')))">
						<arco-cd:documentationTitle>
							<xsl:value-of select="normalize-space(./DRAM)" />
						</arco-cd:documentationTitle>
					</xsl:if>
					<xsl:if test="./DRAS and (not(starts-with(lower-case(normalize-space(./DRAS)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAS)), 'n.r')))">
						<arco-cd:hasScale>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Scale/', arco-fn:urify(normalize-space(./DRAS)))" />
            				</xsl:attribute>
						</arco-cd:hasScale>
					</xsl:if>
					<xsl:if test="./DRAT and (not(starts-with(lower-case(normalize-space(./DRAT)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAT)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./DRAT)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./DRAF and (not(starts-with(lower-case(normalize-space(./DRAF)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAF)), 'n.r')))">
						<arco-dd:hasFormat>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./DRAF)))" />
            				</xsl:attribute>
						</arco-dd:hasFormat>
					</xsl:if>
					<xsl:if test="./DRAA and (not(starts-with(lower-case(normalize-space(./DRAA)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAA)), 'n.r')))">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./DRAA))" />
            				</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
					<xsl:if test="./DRAE and (not(starts-with(lower-case(normalize-space(./DRAE)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAE)), 'n.r')))">
						<arco-lite:hasOwner>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./DRAE))" />
							</xsl:attribute>
						</arco-lite:hasOwner>
					</xsl:if>
				</rdf:Description>
				<!-- copyright -->
				<xsl:if test="./DRAY and (not(starts-with(lower-case(normalize-space(./DRAY)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAY)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-graphicdocumentation-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copyright'" />
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</l0:name>
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./DRAY)" />
						</arco-core:specifications>
					</rdf:Description>
				</xsl:if>
				<!-- timeinterval -->
				<xsl:if test="./DRAD and (not(starts-with(lower-case(normalize-space(./DRAD)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAD)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DRAD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./DRAD)" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./DRAD)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./DRAD)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- documentation scale of graphic or cartographic documentation as 
					an individual -->
				<xsl:if test="./DRAS and (not(starts-with(lower-case(normalize-space(./DRAS)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAS)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'Scale/', arco-fn:urify(normalize-space(./DRAS)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Scale'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./DRAS)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./DRAS)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation type of graphic and cartographic documentation as 
					an individual -->
				<xsl:if test="./DRAT and (not(starts-with(lower-case(normalize-space(./DRAT)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./DRAT)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./DRAT)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./DRAT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation format of graphic or cartographic documentation as 
					an individual -->
				<xsl:if test="./DRAF and (not(starts-with(lower-case(normalize-space(./DRAF)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAF)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./DRAF)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/Format'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./DRAF)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./DRAF)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation author of photographic documentation as an individual -->
				<xsl:if test="./DRAA and (not(starts-with(lower-case(normalize-space(./DRAA)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'Agent/', arco-fn:arcofy(./DRAA))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./DRAA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./DRAA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agent role of graphic or cartographic documentation as an individual -->
				<xsl:if test="./DRAE and (not(starts-with(lower-case(normalize-space(./DRAE)), 'nr')) and not(starts-with(lower-case(normalize-space(./DRAE)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./DRAE))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./DRAE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./DRAE)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/AL/ALG">
				<xsl:variable name="cartodocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'GraphicOrCartographicDocumentation/', $itemURI, '-graphic-cartographic-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/GraphicOrCartographicDocumentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Graphic or cartographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Graphic or cartographic documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione grafica o cartografica ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Documentazione grafica o cartografica ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./ALGT and (not(starts-with(lower-case(normalize-space(./ALGT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ALGT)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./ALGT)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
				</rdf:Description>
				<!-- documentation type of photographic documentation as an individual -->
				<xsl:if test="./ALGT and (not(starts-with(lower-case(normalize-space(./ALGT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ALGT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./ALGT)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ALGT)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./ALGT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Film documentation of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/DO/VDC">
				<xsl:variable name="filmdocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'FilmDocumentation/', $itemURI, '-film-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/FilmDocumentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Film documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Film documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione video-cinematografica ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Documentazione video-cinematografica ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./VDCN and (not(starts-with(lower-case(normalize-space(./VDCN)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCN)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./VDCN)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./VDCN and (not(starts-with(lower-case(normalize-space(./VDCN)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCN)), 'n.r')))">
						<xsl:for-each select="./VDCN">
							<xsl:variable name="url" select="arco-fn:find-link-emm(.)" />
							<xsl:for-each select="$url">
								<smapit:URL>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="." />
                        			</xsl:attribute>
								</smapit:URL>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:if>
					<xsl:if test="./VDCD and (not(starts-with(lower-case(normalize-space(./VDCD)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCD)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./VDCD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if
						test="./VDCC and not(./VDCC='N/R') and (not(starts-with(lower-case(normalize-space(./VDCC)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCC)), 'n.r')))">
						<arco-cd:documentationLocation>
							<xsl:value-of select="normalize-space(./VDCC)" />
						</arco-cd:documentationLocation>
					</xsl:if>
					<xsl:if test="./VDCS">
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./VDCS)" />
						</arco-core:specifications>
					</xsl:if>
					<xsl:if
						test="./VDCK and (not(starts-with(lower-case(normalize-space(./VDCK)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCK)), 'n.r')))">
						<arco-cd:digitalFileName>
							<xsl:value-of select="normalize-space(./VDCK)" />
						</arco-cd:digitalFileName>
					</xsl:if>
					<xsl:if test="./VDCT">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./VDCT)" />
						</arco-core:note>
					</xsl:if>

					<xsl:if
						test="./VDCW and (not(starts-with(lower-case(normalize-space(./VDCW)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCW)), 'n.r')))">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./VDCW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if test="./VDCY and (not(starts-with(lower-case(normalize-space(./VDCY)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCY)), 'n.r')))">
						<arco-cd:hasCopyright>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-filmdocumentation-', position())" />
						</xsl:attribute>
						</arco-cd:hasCopyright>
					</xsl:if>
					<xsl:if
						test="./VDCA and (not(starts-with(lower-case(normalize-space(./VDCA)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCA)), 'n.r')))">
						<arco-cd:documentationTitle>
							<xsl:value-of select="normalize-space(./VDCA)" />
						</arco-cd:documentationTitle>
					</xsl:if>
					<xsl:if test="./VDCP and (not(starts-with(lower-case(normalize-space(./VDCP)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCP)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./VDCP)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if
						test="./VDCP and (not(starts-with(lower-case(normalize-space(./VDCP)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCP)), 'n.r')))">
						<arco-dd:hasFormat>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./VDCP)))" />
            				</xsl:attribute>
						</arco-dd:hasFormat>
					</xsl:if>
					<xsl:if test="./VDCR and (not(starts-with(lower-case(normalize-space(./VDCR)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCR)), 'n.r')))">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./VDCR))" />
            				</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
					<xsl:if
						test="./VDCE and (not(starts-with(lower-case(normalize-space(./VDCE)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCE)), 'n.r')))">
						<arco-lite:hasOwner>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./VDCE))" />
            				</xsl:attribute>
						</arco-lite:hasOwner>
					</xsl:if>
				</rdf:Description>
				<!-- copyright -->
				<xsl:if test="./VDCY and (not(starts-with(lower-case(normalize-space(./VDCY)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCY)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-filmdocumentation-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copyright'" />
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</l0:name>
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./VDCY)" />
						</arco-core:specifications>
					</rdf:Description>
				</xsl:if>
				<!-- timeinterval -->
				<xsl:if test="./VDCD and (not(starts-with(lower-case(normalize-space(./VDCD)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCD)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./VDCD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./VDCD)" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./VDCD)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./VDCD)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- documentation type of film documentation as an individual - for 
					film documentation type and format are the same resource -->
				<xsl:if
					test="./VDCP and (not(starts-with(lower-case(normalize-space(./VDCP)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./VDCP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./VDCP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./VDCP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation format of film documentation as an individual - for 
					film documentation type and format are the same resource -->
				<xsl:if
					test="./VDCP and (not(starts-with(lower-case(normalize-space(./VDCP)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./VDCP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/Format'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./VDCP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./VDCP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation author of FILM documentation as an individual -->
				<xsl:if
					test="./VDCR and (not(starts-with(lower-case(normalize-space(./VDCR)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCR)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'Agent/', arco-fn:arcofy(./VDCR))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./VDCR)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./VDCR)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agent role of film documentation as an individual -->
				<xsl:if
					test="./VDCE and (not(starts-with(lower-case(normalize-space(./VDCE)), 'nr')) and not(starts-with(lower-case(normalize-space(./VDCE)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./VDCE))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./VDCE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./VDCE)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Audio documentation of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/DO/REG">
				<xsl:variable name="audiodocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'AudioDocumentation/', $itemURI, '-audio-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AudioDocumentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Audio documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Audio documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione audio ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Documentazione audio ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./REGN and (not(starts-with(lower-case(normalize-space(./REGN)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGN)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./REGN)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./REGN and (not(starts-with(lower-case(normalize-space(./REGN)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGN)), 'n.r')))">
						<xsl:for-each select="./REGN">
							<xsl:variable name="url" select="arco-fn:find-link-emm(.)" />
							<xsl:for-each select="$url">
								<smapit:URL>
									<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="." />
                        		</xsl:attribute>
								</smapit:URL>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:if>
					<xsl:if test="./REGY and (not(starts-with(lower-case(normalize-space(./REGY)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGY)), 'n.r')))">
						<arco-cd:hasCopyright>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-photographicdocumentation-', position())" />
						</xsl:attribute>
					</arco-cd:hasCopyright>
					</xsl:if>
					<xsl:if test="./REGD and (not(starts-with(lower-case(normalize-space(./REGD)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGD)), 'n.r')))">
						<tiapit:atTime>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./REGD)))" />
						</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./REGC and not(./REGC='N/R') and (not(starts-with(lower-case(normalize-space(./REGC)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGC)), 'n.r')))">
						<arco-cd:documentationLocation>
							<xsl:value-of select="normalize-space(./REGC)" />
						</arco-cd:documentationLocation>
					</xsl:if>
					<xsl:if test="./REGS">
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./REGS)" />
						</arco-core:specifications>
					</xsl:if>
					<xsl:if
						test="./REGK and (not(starts-with(lower-case(normalize-space(./REGK)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGK)), 'n.r')))">
						<arco-cd:digitalFileName>
							<xsl:value-of select="normalize-space(./REGK)" />
						</arco-cd:digitalFileName>
					</xsl:if>
					<xsl:if test="./REGT">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./REGT)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if
						test="./REGW and (not(starts-with(lower-case(normalize-space(./REGW)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGW)), 'n.r')))">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./REGW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if
						test="./REGZ and (not(starts-with(lower-case(normalize-space(./REGZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGZ)), 'n.r')))">
						<arco-cd:documentationTitle>
							<xsl:value-of select="normalize-space(./REGZ)" />
						</arco-cd:documentationTitle>
					</xsl:if>
					<xsl:if test="./REGP and (not(starts-with(lower-case(normalize-space(./REGP)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGP)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./REGP)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./REGP and (not(starts-with(lower-case(normalize-space(./REGP)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGP)), 'n.r')))">
						<arco-dd:hasFormat>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./REGP)))" />
            				</xsl:attribute>
						</arco-dd:hasFormat>
					</xsl:if>
					<xsl:if test="./REGA and (not(starts-with(lower-case(normalize-space(./REGA)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGA)), 'n.r')))">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./REGA))" />
            				</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
					<xsl:if test="./REGE and (not(starts-with(lower-case(normalize-space(./REGE)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGE)), 'n.r')))">
						<arco-lite:hasOwner>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./REGE))" />
            				</xsl:attribute>
						</arco-lite:hasOwner>
					</xsl:if>
				</rdf:Description>
				<!-- copyright -->
				<xsl:if test="./REGY and (not(starts-with(lower-case(normalize-space(./REGY)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGY)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-documentation-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copyright'" />
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</l0:name>
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./REGY)" />
						</arco-core:specifications>
					</rdf:Description>
				</xsl:if>
				<!--  time interval -->
				<xsl:if test="./REGD">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./REGD)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(./REGD)" />
					</rdfs:label>
					<tiapit:startTime>
						<xsl:value-of select="normalize-space(./REGD)" />
					</tiapit:startTime>
					<tiapit:endTime>
						<xsl:value-of select="normalize-space(./REGD)" />
					</tiapit:endTime>
				</rdf:Description>
				</xsl:if>
				<!-- documentation type of audio documentation as an individual - for 
					audio documentation type and format are the same resource -->
				<xsl:if
					test="./REGP and (not(starts-with(lower-case(normalize-space(./REGP)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./REGP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./REGP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./REGP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation format of audio documentation as an individual - for 
					audio documentation type and format are the same resource -->
				<xsl:if
					test="./REGP and (not(starts-with(lower-case(normalize-space(./REGP)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./REGP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/Format'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./REGP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./REGP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation author of audio documentation as an individual -->
				<xsl:if
					test="./REGA and (not(starts-with(lower-case(normalize-space(./REGA)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'Agent/', arco-fn:arcofy(./REGA))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./REGA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./REGA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agent role of audio documentation as an individual -->
				<xsl:if test="./REGE and (not(starts-with(lower-case(normalize-space(./REGE)), 'nr')) and not(starts-with(lower-case(normalize-space(./REGE)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./REGE))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./REGE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./REGE)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Sources and documents of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/DO/FNT">
				<xsl:variable name="sourcedocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'SourceAndDocument/', $itemURI, '-source-document-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SourceAndDocument'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Sources and documents ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Sources and documents ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Fonti e documenti ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Fonti e documenti ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./FNTI and (not(starts-with(lower-case(normalize-space(./FNTI)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTI)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./FNTI)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./FNTI and (not(starts-with(lower-case(normalize-space(./FNTI)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTI)), 'n.r')))">
						<xsl:for-each select="./FNTI">
							<xsl:variable name="url" select="arco-fn:find-link-emm(.)" />
							<xsl:for-each select="$url">
								<smapit:URL>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="." />
									</xsl:attribute>
								</smapit:URL>
							</xsl:for-each>
						</xsl:for-each>
					</xsl:if>
					<!-- A 2.00 -->
					<xsl:if test="./FNTH and (not(starts-with(lower-case(normalize-space(./FNTH)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTH)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./FNTH)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./FNTD and (not(starts-with(lower-case(normalize-space(./FNTD)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTD)), 'n.r')))">
						<xsl:choose>
							<xsl:when test="$sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')">
								<arco-cd:documentationTitle>
									<xsl:value-of select="normalize-space(./FNTD)" />
								</arco-cd:documentationTitle>
							</xsl:when>
							<xsl:otherwise>
								<tiapit:time>
									<xsl:value-of select="normalize-space(./FNTD)" />
								</tiapit:time>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:if>
					<xsl:if test="./FNTS and not(./FNTS='-' or ./FNTS='.' or ./FNTS='N/R') and (not(starts-with(lower-case(normalize-space(./FNTS)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTS)), 'n.r')))">
						<arco-cd:documentationLocation>
							<xsl:value-of select="normalize-space(./FNTS)" />
						</arco-cd:documentationLocation>
					</xsl:if>
					<xsl:if test="./FNTF and (not(starts-with(lower-case(normalize-space(./FNTF)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTF)), 'n.r')))">
						<arco-cd:folio>
							<xsl:value-of select="normalize-space(./FNTF)" />
						</arco-cd:folio>
					</xsl:if>
					<xsl:if test="./FNTY and (not(starts-with(lower-case(normalize-space(./FNTY)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTY)), 'n.r')))">
						<arco-cd:hasCopyright>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-documentation-', position())" />
						</xsl:attribute>
						</arco-cd:hasCopyright>
					</xsl:if>
					<xsl:if test="./FNTK and (not(starts-with(lower-case(normalize-space(./FNTK)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTK)), 'n.r')))">
						<arco-cd:digitalFileName>
							<xsl:value-of select="normalize-space(./FNTK)" />
						</arco-cd:digitalFileName>
					</xsl:if>
					<xsl:if test="./FNTO">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./FNTO)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./FNTW and (not(starts-with(lower-case(normalize-space(./FNTW)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTW)), 'n.r')))">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./FNTW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if test="./FNTT and (not(starts-with(lower-case(normalize-space(./FNTT)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTT)), 'n.r')))">
						<xsl:choose>
							<xsl:when test="$sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')">
								<arco-core:hasType>
									<xsl:attribute name="rdf:resource">
            							<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FNTT)))" />
            						</xsl:attribute>
								</arco-core:hasType>
							</xsl:when>
							<xsl:otherwise>
								<arco-cd:documentationTitle>
									<xsl:value-of select="normalize-space(./FNTT)" />
								</arco-cd:documentationTitle>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:if>
					<xsl:if test="./FNTP and (not(starts-with(lower-case(normalize-space(./FNTP)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTP)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FNTP)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./FNTR and (not(starts-with(lower-case(normalize-space(./FNTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTR)), 'n.r')))">
						<arco-dd:hasFormat>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./FNTR)))" />
            				</xsl:attribute>
						</arco-dd:hasFormat>
					</xsl:if>
					<xsl:if test="./FNTA and (not(starts-with(lower-case(normalize-space(./FNTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTA)), 'n.r')))">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FNTA))" />
            				</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
					<xsl:if
						test="./FNTN and (not(starts-with(lower-case(normalize-space(./FNTN)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTN)), 'n.r')))">
						<arco-cd:hasArchive>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FNTN))" />
            				</xsl:attribute>
						</arco-cd:hasArchive>
					</xsl:if>
					<xsl:if test="./FNTE and (not(starts-with(lower-case(normalize-space(./FNTE)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTE)), 'n.r')))">
						<arco-lite:hasOwner>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FNTE))" />
            				</xsl:attribute>
						</arco-lite:hasOwner>
					</xsl:if>
				</rdf:Description>
				<!-- copyright -->
				<xsl:if test="./FNTY and (not(starts-with(lower-case(normalize-space(./FNTY)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTY)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-documentation-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copyright'" />
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property documentation ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della documentazione del bene culturale ', $itemURI)" />
						</l0:name>
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./FNTY)" />
						</arco-core:specifications>
					</rdf:Description>
				</xsl:if>
				<!-- documentation type of sources and documents as an individual -->
				<xsl:if
					test="./FNTP and (not(starts-with(lower-case(normalize-space(./FNTP)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FNTP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./FNTP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./FNTP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation type of sources and documents as an individual - A 
					2.00 -->
				<xsl:if test="./FNTT and (not(starts-with(lower-case(normalize-space(./FNTT)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTT)), 'n.r')))">
					<xsl:if
						test="$sheetType='A' and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./FNTT)))" />
            				</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            					</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./FNTT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./FNTT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
				<!-- documentation format of sources and documents as an individual -->
				<xsl:if test="./FNTR and (not(starts-with(lower-case(normalize-space(./FNTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTR)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./FNTR)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Format'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./FNTR)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./FNTR)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation author of sources and documents as an individual -->
				<xsl:if test="./FNTA and (not(starts-with(lower-case(normalize-space(./FNTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FNTA))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./FNTA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./FNTA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- archive of sources and documents as an individual -->
				<xsl:if test="./FNTN and (not(starts-with(lower-case(normalize-space(./FNTN)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTN)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FNTN))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./FNTN)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./FNTN)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agent role of sources and documents as an individual -->
				<xsl:if test="./FNTE and (not(starts-with(lower-case(normalize-space(./FNTE)), 'nr')) and not(starts-with(lower-case(normalize-space(./FNTE)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FNTE))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./FNTE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./FNTE)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Sources and documents of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/DO/ADM">
				<xsl:variable name="sourcedocu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'MultimediaDocumentation/', $itemURI, '-multimedia-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of
							select="'https://w3id.org/arco/ontology/context-description/MultimediaDocumentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Multimedia documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Multimedia documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione multimediale ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Documentazione multimediale ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./ADMN and (not(starts-with(lower-case(normalize-space(./ADMN)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADMN)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./ADMN)" />
						</arco-lite:localIdentifier>
					</xsl:if>
					<xsl:if test="./ADMC and (not(starts-with(lower-case(normalize-space(./ADMC)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADMC)), 'n.r')))">
						<arco-cd:documentationLocation>
							<xsl:value-of select="normalize-space(./ADMC)" />
						</arco-cd:documentationLocation>
					</xsl:if>
					<xsl:if test="./ADMT">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./ADMT)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./ADMP and (not(starts-with(lower-case(normalize-space(./ADMP)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADMP)), 'n.r')))">
						<arco-dd:hasFormat>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./ADMP)))" />
            				</xsl:attribute>
						</arco-dd:hasFormat>
					</xsl:if>
					<!-- Time interval -->
					<xsl:if test="./ADMD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ADMD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./ADMA and (not(starts-with(lower-case(normalize-space(./ADMA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADMA)), 'n.r')))">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ADMA))" />
            				</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
					<xsl:if test="./ADME and (not(starts-with(lower-case(normalize-space(./ADME)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADME)), 'n.r')))">
						<arco-lite:hasOwner>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ADME))" />
            				</xsl:attribute>
						</arco-lite:hasOwner>
					</xsl:if>
				</rdf:Description>
				<!-- documentation format of photographic documentation as an individual -->
				<xsl:if test="./ADMP and (not(starts-with(lower-case(normalize-space(./ADMP)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADMP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Format/', arco-fn:urify(normalize-space(./ADMP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Format'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ADMP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./ADMP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Time interval as individual -->
				<xsl:if test="./ADMD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ADMD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ADMD)" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./ADMD)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./ADMD)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- documentation author of sources and documents as an individual -->
				<xsl:if test="./ADMA and (not(starts-with(lower-case(normalize-space(./ADMA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADMA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'Agent/', arco-fn:arcofy(./ADMA))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./ADMA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./ADMA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agent role of sources and documents as an individual -->
				<xsl:if test="./ADME and (not(starts-with(lower-case(normalize-space(./ADME)), 'nr')) and not(starts-with(lower-case(normalize-space(./ADME)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ADME))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./ADME)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./ADME)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/DO/CTF">
				<xsl:variable name="docu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'Documentation/', $itemURI, '-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Certification'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Certification ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Certification ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Certificazione ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Certificazione ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./CTFD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./CTFD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./CTFS and (not(starts-with(lower-case(normalize-space(./CTFS)), 'nr')) and not(starts-with(lower-case(normalize-space(./CTFS)), 'n.r')))">
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./CTFS)" />
						</arco-core:specifications>
					</xsl:if>
					<xsl:if test="./CTFT and (not(starts-with(lower-case(normalize-space(./CTFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./CTFT)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'CertificationType/', arco-fn:urify(normalize-space(./CTFT)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./CTFC and (not(starts-with(lower-case(normalize-space(./CTFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CTFC)), 'n.r')))">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CTFC))" />
            				</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
				</rdf:Description>
				<!-- time interval as individual -->
				<xsl:if test="./CTFD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./CTFD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./CTFD)" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./CTFD)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./CTFD)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- documentation type of photographic documentation as an individual -->
				<xsl:if test="./CTFT and (not(starts-with(lower-case(normalize-space(./CTFT)), 'nr')) and not(starts-with(lower-case(normalize-space(./CTFT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'CertificationType/', arco-fn:urify(normalize-space(./CTFT)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CertificationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./CTFT)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./CTFT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- documentation author of photographic documentation as an individual -->
				<xsl:if test="./CTFC and (not(starts-with(lower-case(normalize-space(./CTFC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CTFC)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CTFC))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="./CTFC" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="./CTFC" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/AL/DVA">
				<xsl:variable name="docu-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'Documentation/', $itemURI, '-documentation-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Documentation'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Documentation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Documentation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Documentazione ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Documentazione ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./DVAT and (not(starts-with(lower-case(normalize-space(./DVAT)), 'nr')) and not(starts-with(lower-case(normalize-space(./DVAT)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./DVAT)))" />
            				</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
				</rdf:Description>
				<!-- documentation type of photographic documentation as an individual -->
				<xsl:if test="./DVAT and (not(starts-with(lower-case(normalize-space(./DVAT)), 'nr')) and not(starts-with(lower-case(normalize-space(./DVAT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'DocumentationType/', arco-fn:urify(normalize-space(./DVAT)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DocumentationType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./DVAT)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./DVAT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Bibliography of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/DO/BIB">
				<xsl:variable name="edition">
					<xsl:choose>
						<xsl:when test="./NCUN">
							<xsl:value-of select="concat('Edition/', arco-fn:urify(normalize-space(./NCUN)))" />
						</xsl:when>
						<xsl:when test="./NUCN">
							<xsl:value-of select="concat('Edition/', arco-fn:urify(normalize-space(./NUCN)))" />
						</xsl:when>
						<xsl:when test="./BIBK">
							<xsl:value-of select="concat('Edition/', arco-fn:urify(normalize-space(./BIBK)))" />
						</xsl:when>
						<xsl:when test="./BIBM">
							<xsl:value-of select="concat('Edition/', arco-fn:urify(normalize-space(./BIBM)))" />
						</xsl:when>
						<xsl:when test="./BIBH">
							<xsl:value-of select="concat('Edition/', arco-fn:urify(normalize-space(./BIBH)), 'local')" />
						</xsl:when>
						<xsl:when test="./BIBA and ./BIBD">
							<xsl:value-of select="concat('Edition/', arco-fn:arcofy(normalize-space(./BIBA)), arco-fn:arcofy(normalize-space(./BIBD)))" />
						</xsl:when>
	                </xsl:choose>
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:choose>
							<xsl:when test="./NCUN">
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:urify(normalize-space(./NCUN)))" />
							</xsl:when>
							<xsl:when test="./NUCN">
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:urify(normalize-space(./NUCN)))" />
							</xsl:when>
							<xsl:when test="./BIBK">
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:urify(normalize-space(./BIBK)))" />
							</xsl:when>
							<xsl:when test="./BIBM">
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:urify(normalize-space(./BIBM)))" />
							</xsl:when>
							<xsl:when test="./BIBH">
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:urify(normalize-space(./BIBH)), 'local')" />
							</xsl:when>
							<xsl:when test="./BIBA and ./BIBD">
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:arcofy(normalize-space(./BIBA)), arco-fn:arcofy(normalize-space(./BIBD)))" />
							</xsl:when>
	                	</xsl:choose>
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Edition'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:choose>
							<xsl:when test="./NCUN">
								<xsl:value-of select="normalize-space(./NCUN)" />
							</xsl:when>
							<xsl:when test="./NUCN">
								<xsl:value-of select="normalize-space(./NUCN)" />
							</xsl:when>
							<xsl:when test="./BIBK">
								<xsl:value-of select="normalize-space(./BIBK)" />
							</xsl:when>
							<xsl:when test="./BIBM">
								<xsl:value-of select="normalize-space(./BIBM)" />
							</xsl:when>
							<xsl:when test="./BIBH">
								<xsl:value-of select="normalize-space(./BIBH)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat((normalize-space(./BIBA)), ', ', normalize-space(./BIBD))" />
							</xsl:otherwise>
	                	</xsl:choose>
					</rdfs:label>
					<l0:name>
						<xsl:choose>
							<xsl:when test="./NCUN">
								<xsl:value-of select="normalize-space(./NCUN)" />
							</xsl:when>
							<xsl:when test="./NUCN">
								<xsl:value-of select="normalize-space(./NUCN)" />
							</xsl:when>
							<xsl:when test="./BIBK">
								<xsl:value-of select="normalize-space(./BIBK)" />
							</xsl:when>
							<xsl:when test="./BIBM">
								<xsl:value-of select="normalize-space(./BIBM)" />
							</xsl:when>
							<xsl:when test="./BIBH">
								<xsl:value-of select="normalize-space(./BIBH)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat((normalize-space(./BIBA)), ', ', normalize-space(./BIBD))" />
							</xsl:otherwise>
	                	</xsl:choose>
					</l0:name>
					<xsl:if test="./BIBA">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./BIBA))" />
							</xsl:attribute>
						</arco-lite:hasAuthor>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $edition)" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:if>
					<xsl:if test="./BIBD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
				        		<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./BIBD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./BIBA and ./BIBD">
						<arco-cd:completeBibliographicReference>
							<xsl:value-of select="concat(normalize-space(./BIBA), ' - ', normalize-space(./BIBD))" />
						</arco-cd:completeBibliographicReference>
					</xsl:if>
					<xsl:if test="./BIBM[not(starts-with(lower-case(normalize-space()), 'nr')) and not(starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-cd:completeBibliographicReference>
							<xsl:value-of select="normalize-space()" />
						</arco-cd:completeBibliographicReference>      
					</xsl:if>
					<xsl:if test="./BIBH and (not(starts-with(lower-case(normalize-space(./BIBH)), 'nr')) and not(starts-with(lower-case(normalize-space(./BIBH)), 'n.r')))">
						<arco-lite:localIdentifier>
							<xsl:value-of select="normalize-space(./BIBH)" />
						</arco-lite:localIdentifier>
						<arco-core:hasIdentifier>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'BibliographyIdentifier/', arco-fn:arcofy(./BIBH), '-local')" />
							</xsl:attribute>
						</arco-core:hasIdentifier>
					</xsl:if>
					<xsl:if test="./BIBK or ./NCUN and (not(starts-with(lower-case(normalize-space(./BIBK)), 'nr')) and not(starts-with(lower-case(normalize-space(./BIBK)), 'n.r')) and not(starts-with(lower-case(normalize-space(./NCUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NCUN)), 'n.r')))">
						<arco-lite:ICCDIdentifier>
							<xsl:choose>
								<xsl:when test="./BIBK">
									<xsl:value-of select="normalize-space(./BIBK)" />
								</xsl:when>
								<xsl:when test="./NCUN">
									<xsl:value-of select="normalize-space(./NCUN)" />
								</xsl:when>
							</xsl:choose>
						</arco-lite:ICCDIdentifier>
						<arco-core:hasIdentifier>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="./BIBK">
										<xsl:value-of select="concat($NS, 'BibliographyIdentifier/', arco-fn:arcofy(./BIBK))" />
									</xsl:when>
									<xsl:when test="./NCUN">
										<xsl:value-of select="concat($NS, 'BibliographyIdentifier/', arco-fn:arcofy(./NCUN))" />
									</xsl:when>
								</xsl:choose>
							</xsl:attribute>
						</arco-core:hasIdentifier>
					</xsl:if>
					<xsl:if test="./BIBR and (not(starts-with(lower-case(normalize-space(./BIBR)), 'nr')) and not(starts-with(lower-case(normalize-space(./BIBR)), 'n.r')))">
						<arco-cd:abbreviation>
							<xsl:value-of select="normalize-space(./BIBR)" />
						</arco-cd:abbreviation>
					</xsl:if>
					<xsl:if test="./BIBY and (not(starts-with(lower-case(normalize-space(./BIBY)), 'nr')) and not(starts-with(lower-case(normalize-space(./BIBY)), 'n.r')))">
						<arco-cd:hasCopyright>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-bibliography-', position())" />
							</xsl:attribute>
						</arco-cd:hasCopyright>
					</xsl:if>
					<xsl:if test="./BIBN or ./BIBI">
						<arco-core:note>
							<xsl:choose>
								<xsl:when test="./BIBI">
									<xsl:value-of
										select="concat(normalize-space(./BIBN), normalize-space(./BIBI))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./BIBN)" />
								</xsl:otherwise>
							</xsl:choose>
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./BIBW">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./BIBW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if
						test="./BIBF and (not(starts-with(lower-case(normalize-space(./BIBF)), 'nr')) and not(starts-with(lower-case(normalize-space(./BIBF)), 'n.r')))">
						<arco-cd:hasBibliographyType>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="concat($NS, 'BibliographyType/', arco-fn:urify(normalize-space(./BIBF)))" />
            				</xsl:attribute>
						</arco-cd:hasBibliographyType>
					</xsl:if>
				</rdf:Description>
				<!-- documentation identifier -->
				<xsl:if test="./BIBH">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'BibliographyIdentifier/', arco-fn:arcofy(./BIBH), '-local')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			                </xsl:attribute>
						</rdf:type>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
			    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				    	    </xsl:attribute>
						</arco-core:hasType>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./BIBH)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./BIBH)" />
						</l0:name>
						<arco-core:identifier>
							<xsl:value-of select="normalize-space(./BIBH)" />
						</arco-core:identifier>
						<arco-core:current>
							<xsl:value-of select="true()" />
						</arco-core:current>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="./BIBK or ./NCUN and (not(starts-with(lower-case(normalize-space(./BIBK)), 'nr')) and not(starts-with(lower-case(normalize-space(./BIBK)), 'n.r')) and not(starts-with(lower-case(normalize-space(./NCUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NCUN)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:choose>
									<xsl:when test="./BIBK">
										<xsl:value-of select="concat($NS, 'BibliographyIdentifier/', arco-fn:arcofy(./BIBK))" />
									</xsl:when>
									<xsl:when test="./NCUN">
										<xsl:value-of select="concat($NS, 'BibliographyIdentifier/', arco-fn:arcofy(./NCUN))" />
									</xsl:when>
								</xsl:choose>
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			                </xsl:attribute>
						</rdf:type>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
			    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				    	    </xsl:attribute>
						</arco-core:hasType>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./BIBK">
									<xsl:value-of select="normalize-space(./BIBK)" />
								</xsl:when>
								<xsl:when test="./NCUN">
									<xsl:value-of select="normalize-space(./NCUN)" />
								</xsl:when>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./BIBK">
									<xsl:value-of select="normalize-space(./BIBK)" />
								</xsl:when>
								<xsl:when test="./NCUN">
									<xsl:value-of select="normalize-space(./NCUN)" />
								</xsl:when>
							</xsl:choose>
						</l0:name>
						<arco-core:identifier>
							<xsl:choose>
								<xsl:when test="./BIBK">
									<xsl:value-of select="normalize-space(./BIBK)" />
								</xsl:when>
								<xsl:when test="./NCUN">
									<xsl:value-of select="normalize-space(./NCUN)" />
								</xsl:when>
							</xsl:choose>
						</arco-core:identifier>
						<arco-core:current>
							<xsl:value-of select="true()" />
						</arco-core:current>
						<arco-core:issuedBy>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
							</xsl:attribute>
						</arco-core:issuedBy>
					</rdf:Description>
				</xsl:if>
				<!-- author as an individual -->
				<xsl:if test="./BIBA">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $edition)" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Autore ', position(), ' dell edizione: ', normalize-space(./BIBA))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Author ', position(), ' of edition: ', normalize-space(./BIBA))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Autore ', position(), ' dell edizione: ', normalize-space(./BIBA))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Author ', position(), ' of edition: ', normalize-space(./BIBA))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/Author')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./BIBA))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/Author')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Autore'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Author'" />
						</rdfs:label>
					</rdf:Description>
					<!-- agent as an indiviual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./BIBA))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./BIBA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./BIBA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Time inverval -->
				<xsl:if test="./BIBD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
					    	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(./BIBD))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
				        		<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="./BIBD" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="./BIBD" />
						</l0:name>
						<arco-arco:startTime>
							<xsl:value-of select="./BIBD" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="./BIBD" />
						</arco-arco:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- copyright -->
				<xsl:if test="./BIBY and (not(starts-with(lower-case(normalize-space(./BIBY)), 'nr')) and not(starts-with(lower-case(normalize-space(./BIBY)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-bibliography-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copyright'" />
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property bibliography ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della bibliografia del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Copyright ', position(), ' of cultural property bibliography ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Diritti d''autore ', position(), ' della bibliografia del bene culturale ', $itemURI)" />
						</l0:name>
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./BIBY)" />
						</arco-core:specifications>
					</rdf:Description>
				</xsl:if>
				<!-- bibliography type as an individual -->
				<xsl:if test="./BIBF and (not(starts-with(lower-case(normalize-space(./BIBF)), 'nr')) and not(starts-with(lower-case(normalize-space(./BIBF)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of
							select="concat($NS, 'BibliographyType/', arco-fn:urify(normalize-space(./BIBF)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of
								select="'https://w3id.org/arco/ontology/context-description/BibliographyType'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./BIBF)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./BIBF)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/DO/BSE">
				<xsl:variable name="edition">
					<xsl:choose>
						<xsl:when test="./BSEA and ./BSED">
							<xsl:value-of select="concat('Edition/', arco-fn:arcofy(normalize-space(./BSET)), arco-fn:arcofy(normalize-space(./BSEA)), arco-fn:arcofy(normalize-space(./BSED)))" />
						</xsl:when>
						<xsl:when test="./BSED">
							<xsl:value-of select="concat('Edition/', arco-fn:arcofy(normalize-space(./BSET)), arco-fn:arcofy(normalize-space(./BSED)))" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="concat('Edition/', arco-fn:arcofy(normalize-space(./BSET)))" />
						</xsl:otherwise>
	                </xsl:choose>
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:choose>
							<xsl:when test="./BSEA and ./BSED">
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:arcofy(normalize-space(./BSET)), arco-fn:arcofy(normalize-space(./BSEA)), arco-fn:arcofy(normalize-space(./BSED)))" />
							</xsl:when>
							<xsl:when test="./BSED">
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:arcofy(normalize-space(./BSET)), arco-fn:arcofy(normalize-space(./BSED)))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($NS, 'Edition/', arco-fn:arcofy(normalize-space(./BSET)))" />
							</xsl:otherwise>
	                	</xsl:choose>
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Edition'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(./BSET)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(./BSET)" />
					</l0:name>
					<xsl:if test="./BSEA">
						<arco-lite:hasAuthor>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./BSEA))" />
							</xsl:attribute>
						</arco-lite:hasAuthor>
					</xsl:if>
					<xsl:if test="./BSED">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
				        		<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./BSED)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<arco-cd:completeBibliographicReference>
						<xsl:choose>
							<xsl:when test="./BSEA and ./BSED">
								<xsl:value-of select="concat(normalize-space(./BSEA), ', ', normalize-space(./BSET), '. ', normalize-space(./BSED))" />
							</xsl:when>
							<xsl:when test="./BSED">
								<xsl:value-of select="concat(normalize-space(./BSET), '. ', normalize-space(./BSED))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="normalize-space(./BSET)" />
							</xsl:otherwise>
						</xsl:choose>
					</arco-cd:completeBibliographicReference>
					<xsl:if test="./BSEC">
						<arco-core:note>
							<xsl:choose>
								<xsl:when test="./BSER">
									<xsl:value-of select="concat('Contributo: ', normalize-space(./BSER), '. ', normalize-space(./BSEC))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Contributo: ', normalize-space(./BSEC))" />
								</xsl:otherwise>
							</xsl:choose>
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./BSEI">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./BSEI" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
				</rdf:Description>
				<!-- author as an individual -->
				<xsl:if test="./BSEA">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./BSEA))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./BSEA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./BSEA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Time inverval -->
				<xsl:if test="./BSED">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
					    	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(./BSED))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
				        		<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="./BSED" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="./BSED" />
						</l0:name>
						<arco-arco:startTime>
							<xsl:value-of select="./BSED" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="./BSED" />
						</arco-arco:endTime>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Legal situation of cultural property as an individual -->
			<xsl:if test="record/metadata/schede/*/TU/CDG">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                		<xsl:value-of select="concat($NS, 'LegalSituation/', $itemURI, '-legal-situation-', arco-fn:urify(normalize-space(record/metadata/schede/*/TU/CDG/CDGG)))" />
                	</xsl:attribute>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Condizione giuridica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/TU/CDG/CDGG))" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Condizione giuridica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/TU/CDG/CDGG))" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Legal situation of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/TU/CDG/CDGG))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Legal situation of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/TU/CDG/CDGG))" />
					</l0:name>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LegalSituation'" />
						</xsl:attribute>
					</rdf:type>
					<xsl:if test="record/metadata/schede/*/TU/CDG/CDGN">
						<arco-core:note>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/TU/CDG/CDGN)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/TU/CDG/CDGI">
						<arco-core:note>
							<xsl:value-of select="concat('Indirizzo: ', normalize-space(record/metadata/schede/*/TU/CDG/CDGI))" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/TU/CDG/CDGG">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'LegalSituationType/', arco-fn:urify(normalize-space(record/metadata/schede/*/TU/CDG/CDGG)))" />
							</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:for-each select="record/metadata/schede/*/TU/CDG/CDGS">
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-owner', position())" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:for-each>
				</rdf:Description>
				<!-- Legal situation type -->
				<xsl:if test="record/metadata/schede/*/TU/CDG/CDGG">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'LegalSituationType/', arco-fn:urify(normalize-space(record/metadata/schede/*/TU/CDG/CDGG)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LegalSituationType'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/TU/CDG/CDGG)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/TU/CDG/CDGG)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agento role -->
				<xsl:for-each select="record/metadata/schede/*/TU/CDG/CDGS[not(starts-with(lower-case(normalize-space(.)), 'nr') or starts-with(lower-case(normalize-space(.)), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-owner', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Proprietario ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Owner ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Proprietario ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Owner ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/Owner')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/Owner')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Proprietario'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Owner'" />
						</rdfs:label>
						<arco-core:isRoleOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-owner', position())" />
							</xsl:attribute>
						</arco-core:isRoleOf>
					</rdf:Description>
					<!-- agent as an indiviual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	            			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	            		</xsl:attribute>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(.)" />
							</xsl:call-template>
						</l0:name>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<xsl:if test="../CDGI ">
							<arco-cd:address>
								<xsl:value-of select="normalize-space(string-join(../CDGI,' ; '))" />
							</arco-cd:address>
						</xsl:if>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/MT/CDG">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                		<xsl:value-of select="concat($NS, 'LegalSituation/', $itemURI, '-legal-situation-', arco-fn:urify(normalize-space(record/metadata/schede/*/MT/CDG)))" />
                	</xsl:attribute>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Condizione giuridica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/MT/CDG))" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Condizione giuridica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/MT/CDG))" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Legal situation of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/MT/CDG))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Legal situation of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/MT/CDG))" />
					</l0:name>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LegalSituation'" />
						</xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'LegalSituationType/', arco-fn:urify(normalize-space(record/metadata/schede/*/MT/CDG)))" />
						</xsl:attribute>
					</arco-core:hasType>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'LegalSituationType/', arco-fn:urify(normalize-space(record/metadata/schede/*/MT/CDG)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LegalSituationType'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/MT/CDG)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/MT/CDG)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- Export import certification of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/TU/ESP">
				<xsl:variable name="exp-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                		<xsl:value-of
						select="concat($NS, 'ExportImportCertification/', $itemURI, '-export-import-certification-', position())" />
                	</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
						<xsl:value-of
							select="'https://w3id.org/arco/ontology/context-description/ExportImportCertification'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:choose>
							<xsl:when test="./ESPT">
								<xsl:value-of select="concat(normalize-space(./ESPT), ' ', position(), ' del bene culturale ', $itemURI)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of
									select="concat('Certificazione ', position(), ' per la circolazione del bene culturale ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:choose>
							<xsl:when test="./ESPT and (not(starts-with(lower-case(normalize-space(./ESPT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ESPT)), 'n.r')))">
								<xsl:value-of select="concat(normalize-space(./ESPT), ' ', position(), ' del bene culturale ', $itemURI)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Certificazione ', position(), ' per la circolazione del bene culturale ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Certification ', position(), ' for import and export of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Certification ', position(), ' for import and export of cultural property ', $itemURI)" />
					</l0:name>
					<xsl:if test="./ESPD and (not(starts-with(lower-case(normalize-space(./ESPD)), 'nr')) and not(starts-with(lower-case(normalize-space(./ESPD)), 'n.r')))">
						<arco-cd:issueDate>
							<xsl:value-of select="normalize-space(./ESPD)" />
						</arco-cd:issueDate>
					</xsl:if>
					<xsl:if test="./ESPN">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./ESPN)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./ESPT">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
	                				<xsl:if test="./ESPT and not(./ESPT='.' or ./ESPT='-' or ./ESPT='/') and (not(starts-with(lower-case(normalize-space(./ESPT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ESPT)), 'n.r')))">
	                                <xsl:choose>
	                                    <xsl:when test="lower-case(normalize-space(./ESPT))='attestato di libera circolazione' or lower-case(normalize-space(./ESPT))='attestato libera circolazione'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/FreeMovementCertification'" />
	                                    </xsl:when>
	                                    <xsl:when test="lower-case(normalize-space(./ESPT))='attestato di circolazione temporanea' or lower-case(normalize-space(./ESPT))='attestato circolazione temporanea'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/TemporaryMovementCertification'" />
	                                    </xsl:when>
	                                    <xsl:when test="lower-case(normalize-space(./ESPT))='licenza di esportazione definitiva' or lower-case(normalize-space(./ESPT))='licenza esportazione definitiva'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PermanentExportLicense'" />
	                                    </xsl:when>
	                                    <xsl:when test="lower-case(normalize-space(./ESPT))='licenza di esportazione temporanea' or lower-case(normalize-space(./ESPT))='licenza esportazione temporanea'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/TemporaryExportLicense'" />
	                                    </xsl:when>
	                                    <xsl:when test="lower-case(normalize-space(./ESPT))='certificato di avvenuta spedizione' or lower-case(normalize-space(./ESPT))='certificato avvenuta spedizione'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DeliveryConfirmationCertification'" />
	                                    </xsl:when>
	                                    <xsl:when test="lower-case(normalize-space(./ESPT))='certificato di avvenuta importazione' or lower-case(normalize-space(./ESPT))='certificato avvenuta importazione'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ImportConfirmationCertification'" />
	                                    </xsl:when>
	                                    <xsl:when test="./ESPT">
	                                        <xsl:value-of select="concat($NS, 'ExportImportCertificationType/', arco-fn:urify(normalize-space(./ESPT)))" />
	                                    </xsl:when>
	                                </xsl:choose>
                    			</xsl:if>
	                			</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./ESPU and (not(starts-with(lower-case(normalize-space(./ESPU)), 'nr')) and not(starts-with(lower-case(normalize-space(./ESPU)), 'n.r')))">
						<arco-lite:hasExportOffice>
							<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ESPU))" />
	                		</xsl:attribute>
						</arco-lite:hasExportOffice>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-export-import-certification-', $exp-position, '-export-office')" />
						</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:if>
				</rdf:Description>
				<!-- export import certification type as an individual -->
				<xsl:if test="./ESPT">
					<xsl:choose>
						<xsl:when test="lower-case(normalize-space(./ESPT))='attestato di libera circolazione' or lower-case(normalize-space(./ESPT))='attestato libera circolazione'" />
						<xsl:when test="lower-case(normalize-space(./ESPT))='attestato di circolazione temporanea' or lower-case(normalize-space(./ESPT))='attestato circolazione temporanea'" />
						<xsl:when test="lower-case(normalize-space(./ESPT))='licenza di esportazione definitiva' or lower-case(normalize-space(./ESPT))='licenza esportazione definitiva'" />
						<xsl:when test="lower-case(normalize-space(./ESPT))='licenza di esportazione temporanea' or lower-case(normalize-space(./ESPT))='licenza esportazione temporanea'" />
						<xsl:when test="lower-case(normalize-space(./ESPT))='certificato di avvenuta spedizione' or lower-case(normalize-space(./ESPT))='certificato avvenuta spedizione'" />
						<xsl:when test="lower-case(normalize-space(./ESPT))='certificato di avvenuta importazione' or lower-case(normalize-space(./ESPT))='certificato avvenuta importazione'" />
						<xsl:when test="./ESPT and not(./ESPT='.' or ./ESPT='-' or ./ESPT='/') and (not(starts-with(lower-case(normalize-space(./ESPT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ESPT)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                    <xsl:value-of 	select="concat($NS, 'ExportImportCertificationType/', arco-fn:urify(normalize-space(./ESPT)))" />
                                </xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/ExportImportCertificationType" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(./ESPT)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./ESPT)" />
								</l0:name>
							</rdf:Description>
						</xsl:when>
					</xsl:choose>
				</xsl:if>
				<!-- agent role of export import certification as an individual -->
				<xsl:if test="./ESPU and (not(starts-with(lower-case(normalize-space(./ESPU)), 'nr')) and not(starts-with(lower-case(normalize-space(./ESPU)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-export-import-certification-', $exp-position, '-export-office')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ufficio Esportazione della certificazione ', $exp-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./ESPU))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of
								select="concat('Export Office of certification ', $exp-position, ' of cultural property ', $itemURI, ': ', normalize-space(./ESPU))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Ufficio Esportazione della certificazione ', $exp-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./ESPU))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Export Office of certification ', $exp-position, ' of cultural property ', $itemURI, ': ', normalize-space(./ESPU))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/ExportOffice')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ESPU))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/ExportOffice')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Ufficio Esportazione'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Export Office'" />
						</rdfs:label>
						<arco-core:isRoleOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-export-import-certification-', $exp-position, '-export-office')" />
							</xsl:attribute>
						</arco-core:isRoleOf>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ESPU))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./ESPU)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./ESPU)" />
						</l0:name>
						<arco-core:isAgentOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-export-import-certification-', $exp-position, '-export-office')" />
							</xsl:attribute>
						</arco-core:isAgentOf>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Protective measures of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/TU/NVC">
				<xsl:variable name="measure-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                		<xsl:value-of select="concat($NS, 'ProtectiveMeasure/', $itemURI, '-protective-measure-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ProtectiveMeasure'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Protective measure ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./NVCT))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Protective measure ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./NVCT))" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Provvedimento di tutela ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./NVCT))" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Provvedimento di tutela ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./NVCT))" />
					</l0:name>
					<xsl:if test="./NVCE and (not(starts-with(lower-case(normalize-space(./NVCE)), 'nr')) and not(starts-with(lower-case(normalize-space(./NVCE)), 'n.r')))">
						<arco-cd:issueDate>
							<xsl:value-of select="normalize-space(./NVCE)" />
						</arco-cd:issueDate>
					</xsl:if>
					<xsl:if test="./NVCR and (not(starts-with(lower-case(normalize-space(./NVCR)), 'nr')) and not(starts-with(lower-case(normalize-space(./NVCR)), 'n.r')))">
						<arco-cd:registrationDateOrGU>
							<xsl:value-of select="normalize-space(./NVCR)" />
						</arco-cd:registrationDateOrGU>
					</xsl:if>
					<xsl:if test="./NVCI and (not(starts-with(lower-case(normalize-space(./NVCI)), 'nr')) and not(starts-with(lower-case(normalize-space(./NVCI)), 'n.r')))">
						<arco-cd:openingNoticeDate>
							<xsl:value-of select="normalize-space(./NVCI)" />
						</arco-cd:openingNoticeDate>
					</xsl:if>
					<xsl:if test="./NVCD[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-cd:noticeDate>
							<xsl:value-of select="normalize-space(string-join(./NVCD, ', '))" />
						</arco-cd:noticeDate>
					</xsl:if>
					<xsl:if test="./NVCW and (not(starts-with(lower-case(normalize-space(./NVCW)), 'nr')) and not(starts-with(lower-case(normalize-space(./NVCW)), 'n.r')))">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./NVCW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if test="./NVCN">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./NVCN)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./NVCA and (not(starts-with(lower-case(normalize-space(./NVCA)), 'nr')) and not(starts-with(lower-case(normalize-space(./NVCA)), 'n.r')))">
						<arco-lite:hasProponentAgent>
							<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./NVCA))" />
							</xsl:attribute>
						</arco-lite:hasProponentAgent>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-protective-meausure-', $measure-position, '-proponent-agent')" />
						</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:if>
				</rdf:Description>
				<!-- agent role for protective measure as an individual -->
				<xsl:if test="./NVCA and (not(starts-with(lower-case(normalize-space(./NVCA)), 'nr')) and not(starts-with(lower-case(normalize-space(./NVCA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-protective-meausure-', $measure-position, '-proponent-agent')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ente proponente del provvedimento di tutela ', $measure-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./NVCA))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Proponent agent of protective measure ', $measure-position, ' of cultural property ', $itemURI, ': ', normalize-space(./NVCA))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Ente proponente del provvedimento di tutela ', $measure-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./NVCA))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Proponent agent of protective measure ', $measure-position, ' of cultural property ', $itemURI, ': ', normalize-space(./NVCA))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/ProponentAgent')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./NVCA))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/ProponentAgent')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Ente proponente'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Proponent Agent'" />
						</rdfs:label>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./NVCA))" /> 
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./NVCA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./NVCA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/MT/NVC">
				<xsl:variable name="measure-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                		<xsl:value-of select="concat($NS, 'ProtectiveMeasure/', $itemURI, '-protective-measure-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ProtectiveMeasure'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Protective measure ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Protective measure ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Provvedimento di tutela ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Provvedimento di tutela ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
					</l0:name>
					<arco-core:description>
						<xsl:value-of select="normalize-space(.)" />
					</arco-core:description>
				</rdf:Description>
			</xsl:for-each>
			<!-- Protective Measure for A 2.00 -->
			<xsl:for-each select="record/metadata/schede/*/TU/VIN">
				<xsl:variable name="measure-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                		<xsl:value-of select="concat($NS, 'ProtectiveMeasure/', $itemURI, '-protective-measure-', position())" />
                		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ProtectiveMeasure'" />
					</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:choose>
							<xsl:when test="./VINL and ./VINA">
								<xsl:value-of select="concat('Protective measure ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./VINL), ' ', normalize-space(./VINA))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Protective measure ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./VINL), normalize-space(./VINA))" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:choose>
							<xsl:when test="./VINL and ./VINA">
								<xsl:value-of select="concat('Protective measure ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./VINL), ' ', normalize-space(./VINA))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Protective measure ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./VINL), normalize-space(./VINA))" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:choose>
							<xsl:when test="./VINL and ./VINA">
								<xsl:value-of select="concat('Provvedimento di tutela ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./VINL), ' ', normalize-space(./VINA))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Provvedimento di tutela ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./VINL), normalize-space(./VINA))" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:choose>
							<xsl:when test="./VINL and ./VINA">
								<xsl:value-of select="concat('Provvedimento di tutela ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./VINL), ' ', normalize-space(./VINA))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Provvedimento di tutela ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./VINL), normalize-space(./VINA))" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<xsl:if test="./VIND and (not(starts-with(lower-case(normalize-space(./VIND)), 'nr')) and not(starts-with(lower-case(normalize-space(./VIND)), 'n.r')))">
						<arco-cd:issueDate>
							<xsl:value-of select="normalize-space(./VIND)" />
						</arco-cd:issueDate>
					</xsl:if>
					<xsl:if test="./VINR and (not(starts-with(lower-case(normalize-space(./VINR)), 'nr')) and not(starts-with(lower-case(normalize-space(./VINR)), 'n.r')))">
						<arco-cd:registrationDateOrGU>
							<xsl:value-of select="normalize-space(./VINR)" />
						</arco-cd:registrationDateOrGU>
					</xsl:if>
				</rdf:Description>
			</xsl:for-each>
			<!-- Urban planning instrument of culturale property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/TU/STU">
				<xsl:variable name="upinstrument-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                		<xsl:value-of select="concat($NS, 'UrbanPlanningInstrument/', $itemURI, '-urban-planning-instrument-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UrbanPlanningInstrument'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(./STUT)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(./STUT)" />
					</l0:name>
					<xsl:if test="./STUW and (not(starts-with(lower-case(normalize-space(./STUW)), 'nr')) and not(starts-with(lower-case(normalize-space(./STUW)), 'n.r')))">
						<smapit:URL>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./STUW" />
							</xsl:attribute>
						</smapit:URL>
					</xsl:if>
					<xsl:if test="./STUS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./STUS)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./STUE and (not(starts-with(lower-case(normalize-space(./STUE)), 'nr')) and not(starts-with(lower-case(normalize-space(./STUE)), 'n.r')))">
						<arco-lite:hasIssuingAgency>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./STUE))" />
							</xsl:attribute>
						</arco-lite:hasIssuingAgency>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-urban-planning-instrument-', $upinstrument-position, '-issuing-agency')" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:if>
					<xsl:if test="./STUN and (not(starts-with(lower-case(normalize-space(./STUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./STUN)), 'n.r')))">
						<arco-cd:definesEligibleIntervention>
							<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'InterventionType/', arco-fn:urify(normalize-space(./STUN)))" />
							</xsl:attribute>
						</arco-cd:definesEligibleIntervention>
					</xsl:if>
				</rdf:Description>
				<!-- agent role for urban planning instrument as an individual -->
				<xsl:if test="./STUE and (not(starts-with(lower-case(normalize-space(./STUE)), 'nr')) and not(starts-with(lower-case(normalize-space(./STUE)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-urban-planning-instrument-', $upinstrument-position, '-issuing-agency')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ente che ha emanato il provvedimento ', $upinstrument-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./STUE))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Issuing agency of urban planning instrument ', $upinstrument-position, ' of cultural property ', $itemURI, ': ', normalize-space(./STUE))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Ente che ha emanato il provvedimento ', $upinstrument-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./STUE))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Issuing agency of urban planning instrument ', $upinstrument-position, ' of cultural property ', $itemURI, ': ', normalize-space(./STUE))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/IssuingAgency')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./STUE))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/IssuingAgency')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Ente che ha emanato il provvedimento'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Issuing Agency'" />
						</rdfs:label>
						<arco-core:isRoleOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-urban-planning-instrument-', $upinstrument-position, '-issuing-agency')" />
							</xsl:attribute>
						</arco-core:isRoleOf>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./STUE))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
						</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./STUE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./STUE)" />
						</l0:name>
						<arco-core:isAgentOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-urban-planning-instrument-', $upinstrument-position, '-issuing-agency')" />
							</xsl:attribute>
						</arco-core:isAgentOf>
					</rdf:Description>
				</xsl:if>
				<!-- eligible intervention of u.p.instrument as an individual -->
				<xsl:if test="./STUN and (not(starts-with(lower-case(normalize-space(./STUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./STUN)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'InterventionType/', arco-fn:urify(normalize-space(./STUN)))" />
						</xsl:attribute>
						<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InterventionType'" />
						</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./STUN)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./STUN)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Other related agents of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/AU/NMC">
				<xsl:if test="not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AU/NMC/NMCN)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AU/NMC/NMCN)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                			<xsl:choose>
                				<xsl:when test="./NMCA">
                					<xsl:value-of select="concat($NS, 'Agent/', $itemURI, '-', arco-fn:arcofy(concat(./NMCN, '-', ./NMCA)))" />
                				</xsl:when>
                				<xsl:otherwise>
                					<xsl:value-of select="concat($NS, 'Agent/', $itemURI, '-', arco-fn:arcofy(./NMCN))" />
                				</xsl:otherwise>
                			</xsl:choose>
                		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
            			</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./NMCN)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./NMCN)" />
						</l0:name>
						<xsl:if test="./NMCA and (not(starts-with(lower-case(normalize-space(./NMCA)), 'nr')) and not(starts-with(lower-case(normalize-space(./NMCA)), 'n.r')))">
							<arco-cd:agentDate>
								<xsl:value-of select="normalize-space(./NMCA)" />
							</arco-cd:agentDate>
						</xsl:if>
						<xsl:if test="./NMCY">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./NMCY)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Surveys -->			
			<!-- Archaeometric and diagnostic survey -->
			<xsl:if test="not(record/metadata/schede/*/RE/IND/INDD='0000/00/00' or record/metadata/schede/*/RE/IND/INDD='/') and record/metadata/schede/*/RE/IND/*">
				<xsl:for-each select="record/metadata/schede/*/RE/IND">
					<xsl:variable name="survey-position">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                			<xsl:value-of select="concat($NS, 'ArchaeometricDiagnosticSurvey/', $itemURI, '-survey-', position())" />
                		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ArchaeometricDiagnosticSurvey'" />
                			</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Archaeometric and diagnostic survey of cultural property ', $itemURI, ': ', normalize-space(./INDV))" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Archaeometric and diagnostic survey of cultural property ', $itemURI, ': ', normalize-space(./INDV))" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Indagine archeometrica e diagnostica del bene culturale ', $itemURI, ': ', normalize-space(./INDV))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Indagine archeometrica e diagnostica del bene culturale ', $itemURI, ': ', normalize-space(./INDV))" />
						</l0:name>
						<xsl:if test="./INDD and (not(starts-with(lower-case(normalize-space(./INDD)), 'nr')) and not(starts-with(lower-case(normalize-space(./INDD)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./INDD)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./INDI">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
                					<xsl:value-of select="concat($NS, 'ArchaeometricDiagnosticSurveyType/', arco-fn:urify(normalize-space(./INDI)))" />
                				</xsl:attribute>
							</arco-core:hasType>
						</xsl:if>
						<xsl:if test="./INDS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./INDS)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./INDO">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./INDO)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./INDT">
							<arco-cd:report>
								<xsl:value-of select="normalize-space(./INDT)" />
							</arco-cd:report>
						</xsl:if>
						<xsl:if test="./INDM and (not(starts-with(lower-case(normalize-space(./INDM)), 'nr')) and not(starts-with(lower-case(normalize-space(./INDM)), 'n.r')))">
							<arco-cd:hasSurveyMotivation>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'SurveyMotivation/', arco-fn:urify(normalize-space(./INDM)))" />
	                			</xsl:attribute>
							</arco-cd:hasSurveyMotivation>
						</xsl:if>
						<xsl:for-each select="./INDE">
							<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
								<arco-lite:hasResponsibleAgent>
									<xsl:attribute name="rdf:resource">
		                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                			</xsl:attribute>
								</arco-lite:hasResponsibleAgent>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeometric-diagnostic-survey-', $survey-position, '-activity-responsible')" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./INDR">
							<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
								<arco-lite:hasSponsor>
									<xsl:attribute name="rdf:resource">
		                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                			</xsl:attribute>
								</arco-lite:hasSponsor>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeometric-diagnostic-survey-', $survey-position, '-activity-sponsor')" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./INDN">
							<arco-lite:hasOperator>
								<xsl:attribute name="rdf:resource">
		                			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                		</xsl:attribute>
							</arco-lite:hasOperator>
							<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeometric-diagnostic-survey-', $survey-position, '-activity-operator')" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
						</xsl:for-each>
					</rdf:Description>
					<!-- Time interval as an individual -->
					<xsl:if test="./INDD and (not(starts-with(lower-case(normalize-space(./INDD)), 'nr')) and not(starts-with(lower-case(normalize-space(./INDD)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./INDD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./INDD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./INDD)" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./INDD)" />
							</tiapit:startTime>
						</rdf:Description>
					</xsl:if>
					<!-- ArchaeometricDiagnosticSurveyType as an individual -->
					<xsl:if test="./INDI">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                				<xsl:value-of select="concat($NS, 'ArchaeometricDiagnosticSurveyType/', arco-fn:urify(normalize-space(./INDI)))" />
                				</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/ArchaeometricDiagnosticSurveyType" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./INDI)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./INDI)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- motivation of survey as an individual -->
					<xsl:if test="./INDM and (not(starts-with(lower-case(normalize-space(./INDM)), 'nr')) and not(starts-with(lower-case(normalize-space(./INDM)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'SurveyMotivation/', arco-fn:urify(normalize-space(./INDM)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SurveyMotivation'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./INDM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./INDM)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- agent role of activity responsible as an individual -->
					<xsl:for-each select="./INDE">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeometric-diagnostic-survey-', $survey-position, '-activity-responsible')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Ente responsabile dell&quot;indagine archeometrica e diagnostica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Ente responsabile dell&quot;indagine archeometrica e diagnostica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Responsible agency of archaeometric and diagnostic survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Responsible agency of archaeometric and diagnostic survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
									</xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
									</xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Responsabile'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Responsible agent'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
					<!-- agent role of activity sponsor as an individual -->
					<xsl:for-each select="./INDR">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeometric-diagnostic-survey-', $survey-position, '-activity-sponsor')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Sponsor dell&quot;indagine archeometrica e diagnostica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Sponsor dell&quot;indagine archeometrica e diagnostica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Sponsor of archaeometric and diagnostic survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Sponsor of archaeometric and diagnostic survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Role/Sponsor')" />
									</xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
									</xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of activity sponsor as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Role/Sponsor')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Sponsor'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Sponsor'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of activity sponsor as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
					<!-- agent role of activity operator as an individual -->
					<xsl:for-each select="./INDN">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeometric-diagnostic-survey-', $survey-position, '-activity-operator')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Operatore dell&quot;indagine archeometrica e diagnostica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Operatore dell&quot;indagine archeometrica e diagnostica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Operator of archaeometric and diagnostic survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Operator of archaeometric and diagnostic survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'RoleOperator')" />
									</xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
									</xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Role/Operator')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Operatore'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Operator'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of activity operator as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
				</xsl:for-each>
			</xsl:if>
			<!-- Archaeological field survey of cultural property -->
			<xsl:if test="not(record/metadata/schede/*/RE/RCG/RCGD='0000/00/00' or record/metadata/schede/*/RE/RCG/RCGD='/') and record/metadata/schede/*/RE/RCG/*">
				<xsl:for-each select="record/metadata/schede/*/RE/RCG">
					<xsl:variable name="survey-position">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                			<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurvey/', $itemURI, '-survey-', position())" />
                		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ArchaeologicalFieldSurvey'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:choose>
								<xsl:when test="./RCGV and (not(starts-with(lower-case(normalize-space(./RCGV)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGV)), 'n.r')))">
									<xsl:value-of select="concat('Ricognizione archeologica ', position(), ' sul bene ', $itemURI, ': ', normalize-space(./RCGV))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Ricognizione archeologica ' , position(), ' sul bene ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:choose>
								<xsl:when test="./RCGV and (not(starts-with(lower-case(normalize-space(./RCGV)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGV)), 'n.r')))">
									<xsl:value-of select="concat('Ricognizione archeologica ', position(), ' sul bene ', $itemURI, ': ', normalize-space(./RCGV))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Ricognizione archeologica ' , position(), ' sul bene ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:choose>
								<xsl:when test="./RCGV and (not(starts-with(lower-case(normalize-space(./RCGV)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGV)), 'n.r')))">
									<xsl:value-of select="concat('Archaeological field survey ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./RCGV))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Archaeological field survey ' , position(), ' of cultural property ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:choose>
								<xsl:when test="./RCGV and (not(starts-with(lower-case(normalize-space(./RCGV)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGV)), 'n.r')))">
									<xsl:value-of select="concat('Ricognizione archeologica ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./RCGV))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Ricognizione archeologica ' , position(), ' of cultural property ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./RCGZ">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./RCGZ)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./RCGD and (not(starts-with(lower-case(normalize-space(./RCGD)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGD)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RCGD)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./RCGK and (not(starts-with(lower-case(normalize-space(./RCGK)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGK)), 'n.r')))">
							<arco-lite:ICCDIdentifier>
								<xsl:value-of select="normalize-space(./RCGK)" />
							</arco-lite:ICCDIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurveyIdentifier/', arco-fn:arcofy(./RCGK))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./NCUN and (not(starts-with(lower-case(normalize-space(./NCUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NCUN)), 'n.r')))">
							<arco-lite:ICCDIdentifier>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</arco-lite:ICCDIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurveyIdentifier/', arco-fn:arcofy(./NCUN))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./NUCN and (not(starts-with(lower-case(normalize-space(./NUCN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NUCN)), 'n.r')))">
							<arco-lite:localIdentifier>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</arco-lite:localIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurveyIdentifier/', arco-fn:arcofy(./NUCN))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./RCGH and (not(starts-with(lower-case(normalize-space(./RCGH)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGH)), 'n.r')))">
							<arco-lite:localIdentifier>
								<xsl:value-of select="normalize-space(./RCGH)" />
							</arco-lite:localIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurveyIdentifier/', arco-fn:arcofy(./RCGH))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./RCGU or ./RCGT or ./RCGC">
							<arco-cd:environmentalState>
								<xsl:choose>
									<xsl:when test="./RCGT">
										<xsl:value-of select="normalize-space(./RCGT)" />
									</xsl:when>
									<xsl:when test="./RCGU and ./RCGC">
										<xsl:value-of select="concat(normalize-space(string-join(./RCGU,' ; ')), ' - ', normalize-space(string-join(./RCGC,' ; ')))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat(normalize-space(string-join(./RCGC,' ; ')), normalize-space(string-join(./RCGU, ' ; ')))" />
									</xsl:otherwise>
								</xsl:choose>
							</arco-cd:environmentalState>
						</xsl:if>
						<xsl:if test="./RCGS[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-cd:hasBibliography>
								<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Bibliography/', $itemURI, '-archaeological-field-survey-bibliography-', position())" />
	                		</xsl:attribute>
							</arco-cd:hasBibliography>
						</xsl:if>
						<xsl:if test="./RCGE and (not(starts-with(lower-case(normalize-space(./RCGE)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGE)), 'n.r')))">
							<arco-cd:hasSurveyMotivation>
								<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'SurveyMotivation/', arco-fn:urify(normalize-space(./RCGE)))" />
	                		</xsl:attribute>
							</arco-cd:hasSurveyMotivation>
						</xsl:if>
						<xsl:if test="./RCGM and (not(starts-with(lower-case(normalize-space(./RCGM)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGM)), 'n.r')))">
							<arco-cd:hasSurveyMethod>
								<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'SurveyMethod/', arco-fn:urify(normalize-space(./RCGM)))" />
	                		</xsl:attribute>
							</arco-cd:hasSurveyMethod>
						</xsl:if>
						<xsl:for-each select="./RCGA[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-lite:hasScientificDirector>
								<xsl:attribute name="rdf:resource">
                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                			</xsl:attribute>
							</arco-lite:hasScientificDirector>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-field-survey-', $survey-position, '-scientific-director-',arco-fn:arcofy(.))" />
							</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:for-each>
						<xsl:if test="./RCGR and (not(starts-with(lower-case(normalize-space(./RCGR)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGR)), 'n.r')))">
							<arco-lite:hasResponsibleAgent>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./RCGR))" />
	                			</xsl:attribute>
							</arco-lite:hasResponsibleAgent>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-field-survey-', $survey-position, '-activity-responsible')" />
							</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
						<xsl:if test="./RCGJ and (not(starts-with(lower-case(normalize-space(./RCGJ)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGJ)), 'n.r')))">
							<arco-lite:hasCataloguingAgent>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./RCGJ))" />
	                			</xsl:attribute>
							</arco-lite:hasCataloguingAgent>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-field-survey-', $survey-position, '-cataloguing-agency')" />
							</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
					</rdf:Description>
					<!-- documentation identifier -->
					<xsl:if test="./RCGK">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurveyIdentifier/', arco-fn:arcofy(./RCGK))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./RCGK)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./RCGK)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./RCGK)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./NCUN">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurveyIdentifier/', arco-fn:arcofy(./NCUN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./NUCN">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurveyIdentifier/', arco-fn:arcofy(./NUCN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./RCGH">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalFieldSurveyIdentifier/', arco-fn:arcofy(./RCGH))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./RCGH)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./RCGH)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./RCGH)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						</rdf:Description>
					</xsl:if>
					<!-- Time interval as an individual -->
					<xsl:if test="./RCGD and (not(starts-with(lower-case(normalize-space(./RCGD)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGD)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RCGD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./RCGD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./RCGD)" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./RCGD)" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(./RCGD)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:if>
					<!-- bibliography of survey as an individual -->
					<xsl:if test="./RCGS[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                		<xsl:value-of select="concat($NS, 'Bibliography/', $itemURI, '-archaeological-field-survey-bibliography-', position())" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Bibliography'" />
	                			</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Bibliografia relativa alla ricognizione archeologica sul bene ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Bibliografia relativa alla ricognizione archeologica sul bene ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Bibliography about archaeological field survey of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Bibliography about archaeological field survey of cultural property ', $itemURI)" />
							</l0:name>
							<arco-cd:completeBibliographicReference>
								<xsl:value-of select="normalize-space(string-join(./RCGS,' ; '))" />
							</arco-cd:completeBibliographicReference>
						</rdf:Description>
					</xsl:if>
					<!-- motivation of survey as an individual -->
					<xsl:if test="./RCGE and (not(starts-with(lower-case(normalize-space(./RCGE)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGE)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'SurveyMotivation/', arco-fn:urify(normalize-space(./RCGE)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SurveyMethod'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./RCGE)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./RCGE)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- method of survey as an individual -->
					<xsl:if test="./RCGM and (not(starts-with(lower-case(normalize-space(./RCGM)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGM)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'SurveyMethod/', arco-fn:urify(normalize-space(./RCGM)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SurveyMethod'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./RCGM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./RCGM)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- agent role of survey scientific director as an individual -->
					<xsl:for-each select="./RCGA[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-field-survey-', $survey-position, '-scientific-director-', arco-fn:arcofy(.))" />
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Responsabile scientifico della ricognizione archeologica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Responsabile scientifico della ricognizione archeologica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Scientific director of archaeological field survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Scientific director of archaeological field survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Responsabile Scientifico'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Scientific Director'" />
							</rdfs:label>
						</rdf:Description>
					</xsl:for-each>
					<!-- agent role of activity responsible as an individual -->
					<xsl:if test="./RCGR and (not(starts-with(lower-case(normalize-space(./RCGR)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGR)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-field-survey-', $survey-position, '-activity-responsible')" />
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Ente responsabile della ricognizione archeologica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./RCGR))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Ente responsabile della ricognizione archeologica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./RCGR))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Responsible agency of archaeological field survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(./RCGR))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Responsible agency of archaeological field survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(./RCGR))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
		                        </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./RCGR))" />
		                        </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Responsabile'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Responsible agent'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./RCGR))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./RCGR)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./RCGR)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- agent role of authority file cataloguing agency as an individual -->
					<xsl:if test="./RCGJ and (not(starts-with(lower-case(normalize-space(./RCGJ)), 'nr')) and not(starts-with(lower-case(normalize-space(./RCGJ)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                        		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-field-survey-', $survey-position, '-cataloguing-agency')" />
                    		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Ente schedatore dell''Authority File della ricognizione archeologica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./RCGJ))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Ente schedatore dell''Authority File della ricognizione archeologica ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./RCGJ))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Authority File cataloguing agency of archaeological field survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(./RCGJ))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Authority File cataloguing agency of archaeological field survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(./RCGJ))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Role/CataloguingAgent')" />
		                        </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./RCGJ))" />
		                        </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role of authority file cataloguing agency as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Role/CataloguingAgent')" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Ente Schedatore'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Cataloguing Agent'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent of authority file cataloguing agency as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./RCGJ))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./RCGJ)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./RCGJ)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- Archaeological excavation of cultural property -->
			<xsl:if test="not(record/metadata/schede/*/*/DSC/DSCD='0000/00/00' or record/metadata/schede/*/*/DSC/DSCD='/') and record/metadata/schede/*/*/DSC/*">
				<xsl:for-each select="record/metadata/schede/*/*/DSC">
					<xsl:variable name="survey-position">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                			<xsl:value-of select="concat($NS, 'ArchaeologicalExcavation/', $itemURI, '-survey-', position())" />
                		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                			<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ArchaeologicalExcavation'" />
                		</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:choose>
								<xsl:when test="./DSCV">
									<xsl:value-of select="concat('Scavo archeologico ', position(), ' del bene ', $itemURI, ': ', normalize-space(./DSCV))" />
								</xsl:when>
								<xsl:when test="./SCAN">
									<xsl:value-of select="concat('Scavo archeologico ', position(), ' del bene ', $itemURI, ': ', normalize-space(./SCAN))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Scavo archeologico ' , position(), ' del bene ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:choose>
								<xsl:when test="./DSCV">
									<xsl:value-of select="concat('Scavo archeologico ', position(), ' del bene ', $itemURI, ': ', normalize-space(./DSCV))" />
								</xsl:when>
								<xsl:when test="./SCAN">
									<xsl:value-of select="concat('Scavo archeologico ', position(), ' del bene ', $itemURI, ': ', normalize-space(./SCAN))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Scavo archeologico ' , position(), ' del bene ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:choose>
								<xsl:when test="./DSCV">
									<xsl:value-of select="concat('Archaeological excavation ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./DSCV))" />
								</xsl:when>
								<xsl:when test="./SCAN">
									<xsl:value-of select="concat('Archaeological excavation ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./SCAN))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Archaeological excavation ' , position(), ' of cultural property ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:choose>
								<xsl:when test="./DSCV">
									<xsl:value-of select="concat('Archaeological excavation ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./DSCV))" />
								</xsl:when>
								<xsl:when test="./SCAN">
									<xsl:value-of select="concat('Archaeological excavation ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./SCAN))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat('Archaeological excavation ' , position(), ' of cultural property ', $itemURI)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./DSCN">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./DSCN)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./DSCD and (not(starts-with(lower-case(normalize-space(./DSCD)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCD)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DSCD)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./DSCK and (not(starts-with(lower-case(normalize-space(./DSCK)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCK)), 'n.r')))">
							<arco-lite:ICCDIdentifier>
								<xsl:value-of select="normalize-space(./DSCK)" />
							</arco-lite:ICCDIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./DSCK))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./NCUN and (not(starts-with(lower-case(normalize-space(./NCUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NCUN)), 'n.r')))">
							<arco-lite:ICCDIdentifier>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</arco-lite:ICCDIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./NCUN))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./NUCN and (not(starts-with(lower-case(normalize-space(./NUCN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NUCN)), 'n.r')))">
							<arco-lite:ICCDIdentifier>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</arco-lite:ICCDIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./NUCN))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./DSCH and (not(starts-with(lower-case(normalize-space(./DSCH)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCH)), 'n.r')))">
							<arco-lite:localIdentifier>
								<xsl:value-of select="normalize-space(./DSCH)" />
							</arco-lite:localIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./DSCH))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
						<xsl:if test="./DSCQ and (not(starts-with(lower-case(normalize-space(./DSCQ)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCQ)), 'n.r')))">
							<arco-cd:areaRoomSquare>
								<xsl:value-of select="normalize-space(./DSCQ)" />
							</arco-cd:areaRoomSquare>
						</xsl:if>
						<xsl:if test="./DSCZ[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-cd:hasBibliography>
								<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Bibliography/', $itemURI, '-archaeological-excavation-bibliography')" />
	                		</xsl:attribute>
							</arco-cd:hasBibliography>
						</xsl:if>
						<!-- bibliography in RA 2.00 -->
						<xsl:if test="./DSCB and (not(starts-with(lower-case(normalize-space(./DSCB)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCB)), 'n.r')))">
							<arco-cd:hasBibliography>
								<xsl:attribute name="rdf:resource">
		                			<xsl:value-of select="concat($NS, 'Bibliography/', $itemURI, '-archaeological-excavation-bibliography')" />
		                		</xsl:attribute>
							</arco-cd:hasBibliography>
						</xsl:if>
						<xsl:if test="./DSCI and (not(starts-with(lower-case(normalize-space(./DSCI)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCI)), 'n.r')))">
							<arco-lite:currentInventoryNumber>
								<xsl:value-of select="normalize-space(./DSCI)" />
							</arco-lite:currentInventoryNumber>
							<arco-cd:hasInventorySituation>
								<xsl:attribute name="rdf:resource">
	               					<xsl:value-of select="concat($NS, 'ArchaeologicalExcaationInventorySistuation/', $itemURI, arco-fn:arcofy(./DSCI))" />
				               	</xsl:attribute>
							</arco-cd:hasInventorySituation>
						</xsl:if>
						<xsl:if test="./DSCM and (not(starts-with(lower-case(normalize-space(./DSCM)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCM)), 'n.r')))">
							<arco-cd:hasSurveyMethod>
								<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'SurveyMethod/', arco-fn:urify(normalize-space(./DSCM)))" />
	                		</xsl:attribute>
							</arco-cd:hasSurveyMethod>
						</xsl:if>
						<xsl:if test="./DSCT and (not(starts-with(lower-case(normalize-space(./DSCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCT)), 'n.r')))">
							<arco-cd:hasSurveyMotivation>
								<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'SurveyMotivation/', arco-fn:urify(normalize-space(./DSCT)))" />
	                		</xsl:attribute>
							</arco-cd:hasSurveyMotivation>
						</xsl:if>
						<xsl:if test="./DSCU and (not(starts-with(lower-case(normalize-space(./DSCU)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCU)), 'n.r')))">
							<arco-cd:hasStratigraphicUnit>
								<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'StratigraphicUnit/', arco-fn:urify(normalize-space(./DSCU)))" />
	                		</xsl:attribute>
							</arco-cd:hasStratigraphicUnit>
						</xsl:if>
						<xsl:if test="./DSCS and (not(starts-with(lower-case(normalize-space(./DSCS)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCS)), 'n.r')))">
							<arco-cd:hasTomb>
								<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Tomb/', arco-fn:urify(normalize-space(./DSCS)))" />
	                		</xsl:attribute>
							</arco-cd:hasTomb>
						</xsl:if>
						<xsl:for-each select="./DSCA">
							<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
								<arco-lite:hasScientificDirector>
									<xsl:attribute name="rdf:resource">
		                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                			</xsl:attribute>
								</arco-lite:hasScientificDirector>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-excavation-', $survey-position, '-scientific-director')" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./DSCF">
							<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
								<arco-lite:hasResponsibleAgent>
									<xsl:attribute name="rdf:resource">
		                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                			</xsl:attribute>
								</arco-lite:hasResponsibleAgent>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-excavation-', $survey-position, '-activity-responsible')" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./DSCJ">
							<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
								<arco-lite:hasCataloguingAgent>
									<xsl:attribute name="rdf:resource">
		                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                			</xsl:attribute>
								</arco-lite:hasCataloguingAgent>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-excavation-', $survey-position, '-cataloguing-agency')" />							
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:for-each>
					</rdf:Description>
					<!-- documentation identifier -->
					<xsl:if test="./DSCK">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./DSCK))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DSCK)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DSCK)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./DSCK)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./NCUN">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./NCUN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./NUCN">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./NUCN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./DSCH">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./DSCH))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DSCH)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DSCH)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./DSCH)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						</rdf:Description>
					</xsl:if>
					<!--  inventory situation -->
					<xsl:if test="./DSCI and (not(starts-with(lower-case(normalize-space(./DSCI)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCI)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
			            		<xsl:value-of select="concat($NS, 'ArchaeologicalExcaationInventorySistuation/', $itemURI, arco-fn:arcofy(./DSCI))" />
			            	</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                    	        	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InventorySituation'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Situazione inventariale dell opera correlata al bene: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Situazione inventariale dell opera correlata al bene: ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Inventory situation of related work of cultural property: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Inventory situation of related work of cultural property: ', $itemURI)" />
							</l0:name>
							<arco-cd:inventoryNumber>
            					<xsl:value-of select="normalize-space(./DSCI)" />
	          	  			</arco-cd:inventoryNumber>
							<arco-core:current>
        	    				<xsl:value-of select="true()" />
          		  			</arco-core:current>
						</rdf:Description>
					</xsl:if>
					<!-- Time interval as an individual -->
					<xsl:if test="./DSCD and (not(starts-with(lower-case(normalize-space(./DSCD)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCD)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DSCD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DSCD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DSCD)" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./DSCD)" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(./DSCD)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:if>
					<!-- bibliography of survey as an individual -->
					<xsl:if test="./DSCZ[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                		<xsl:value-of select="concat($NS, 'Bibliography/', $itemURI, '-archaeological-excavation-bibliography')" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Bibliography'" />
	                			</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Bibliografia relativa allo scavo archeologico del bene ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Bibliografia relativa allo scavo archeologico del bene ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Bibliography about archaeological excavation of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Bibliography about archaeological excavation of cultural property ', $itemURI)" />
							</l0:name>
							<arco-cd:completeBibliographicReference>
								<xsl:value-of select="normalize-space(string-join(./DSCZ, ' ; '))" />
							</arco-cd:completeBibliographicReference>
						</rdf:Description>
					</xsl:if>
					<!-- bibliography of survey as an individual (RA 2.00) -->
					<xsl:if test="./DSCB and (not(starts-with(lower-case(normalize-space(./DSCB)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCB)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                		<xsl:value-of select="concat($NS, 'Bibliography/', $itemURI, '-archaeological-excavation-bibliography')" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Bibliography'" />
	                			</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Bibliografia relativa allo scavo archeologico del bene ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Bibliografia relativa allo scavo archeologico del bene ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Bibliography about archaeological excavation of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Bibliography about archaeological excavation of cultural property ', $itemURI)" />
							</l0:name>
							<arco-cd:completeBibliographicReference>
								<xsl:value-of select="normalize-space(./DSCB)" />
							</arco-cd:completeBibliographicReference>
						</rdf:Description>
					</xsl:if>
					<!-- method of survey as an individual -->
					<xsl:if test="./DSCM and (not(starts-with(lower-case(normalize-space(./DSCM)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCM)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'SurveyMethod/', arco-fn:urify(normalize-space(./DSCM)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SurveyMethod'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DSCM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DSCM)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- motivation of survey as an individual -->
					<xsl:if test="./DSCT and (not(starts-with(lower-case(normalize-space(./DSCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCT)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'SurveyMotivation/', arco-fn:urify(normalize-space(./DSCT)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SurveyMotivation'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DSCT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DSCT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- stratigraphic unit of survey as an individual -->
					<xsl:if test="./DSCU and (not(starts-with(lower-case(normalize-space(./DSCU)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCU)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'StratigraphicUnit/', arco-fn:urify(normalize-space(./DSCU)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/StratigraphicUnit'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DSCU)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DSCU)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- tomb of survey as an individual -->
					<xsl:if 	test="./DSCS and (not(starts-with(lower-case(normalize-space(./DSCS)), 'nr')) and not(starts-with(lower-case(normalize-space(./DSCS)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'Tomb/', arco-fn:urify(normalize-space(./DSCS)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Tomb'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DSCS)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DSCS)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- agent role of survey scientific director as an individual -->
					<xsl:for-each select="./DSCA">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(./DSCA)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-excavation-', $survey-position, '-scientific-director')" />
	                    		</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Responsabile scientifico dello scavo archeologico ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Responsabile scientifico dello scavo archeologico ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Scientific director of archaeological excavation ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Scientific director of archaeological excavation ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
			                        </xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
			                        </xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of survey scientific director as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                        <xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Responsabile Scientifico'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Scientific Director'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of survey scientific director as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
					<!-- agent role of activity responsible as an individual -->
					<xsl:for-each select="./DSCF">
						<xsl:if 	test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	                        		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-excavation-', $survey-position, '-activity-responsible')" />
	                    		</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Ente responsabile dello scavo archeologico ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Ente responsabile dello scavo archeologico ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Responsible agency of archaeological excavation ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Responsible agency of archaeological excavation ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
			                        </xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
			                        </xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                        <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Responsabile'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Responsible agent'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
					<!-- agent role of authority file cataloguing agency as an individual -->
					<xsl:for-each select="./DSCJ">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-archaeological-excavation-', $survey-position, '-cataloguing-agency')" />
	                    		</xsl:attribute>
								<rdf:type>
								<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                        </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Ente schedatore dell&quot;Authority File dello scavo archeologico ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Ente schedatore dell&quot;Authority File dello scavo archeologico ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Authority File cataloguing agency of archaeological excavation ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Authority File cataloguing agency of archaeological excavation ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="concat($NS, 'Role/CataloguingAgent')" />
			                        </xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
			                        </xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of authority file cataloguing agency as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                        <xsl:value-of select="concat($NS, 'Role/CataloguingAgent')" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Ente Schedatore'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Cataloguing Agent'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of authority file cataloguing agency as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
			                            <xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
				</xsl:for-each>
			</xsl:if>
			<!-- Inspection of cultural property -->
			<xsl:if test="not(record/metadata/schede/*/CM/ISP/ISPD='0000/00/00' or record/metadata/schede/*/CM/ISP/ISPD='/') and record/metadata/schede/*/CM/ISP/*">
				<xsl:for-each select="record/metadata/schede/*/CM/ISP">
					<xsl:variable name="inspection-position">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                			<xsl:value-of select="concat($NS, 'Inspection/', $itemURI, '-inspection-', position())" />
                		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Inspection'" />
                			</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ispezione ' , position(), ' del bene ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Ispezione ' , position(), ' del bene ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Inspection ' , position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Inspection ' , position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./ISPS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./DSCN)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./ISPD and (not(starts-with(lower-case(normalize-space(./ISPD)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISPD)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ISPD)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./ISPN and (not(starts-with(lower-case(normalize-space(./ISPN)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISPN)), 'n.r')))">
							<arco-lite:hasResponsibleAgent>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISPN))" />
	                			</xsl:attribute>
							</arco-lite:hasResponsibleAgent>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-inspection-', $inspection-position, '-activity-responsible')" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
					</rdf:Description>
					<!-- Time interval as an individual -->
					<xsl:if test="./ISPD and (not(starts-with(lower-case(normalize-space(./ISPD)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISPD)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ISPD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ISPD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ISPD)" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./ISPD)" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(./ISPD)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:if>
					<!-- agent role of activity responsible as an individual -->
					<xsl:if test="./ISPN and (not(starts-with(lower-case(normalize-space(./ISPN)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISPN)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-inspection-', $inspection-position, '-activity-responsible')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Ente responsabile dell&quot;ispezione ', $inspection-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./ISPN))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Ente responsabile dell&quot;ispezione ', $inspection-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./ISPN))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Responsible agency of inspection ', $inspection-position, ' of cultural property ', $itemURI, ': ', normalize-space(./ISPN))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Responsible agency of inspection ', $inspection-position, ' of cultural property ', $itemURI, ': ', normalize-space(./ISPN))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISPN))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Responsabile'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Responsible agent'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISPN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./ISPN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./ISPN)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- Laboratory test as individual -->
			<xsl:for-each select="record/metadata/schede/*/*/ALB">
				<xsl:variable name="test-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS,'LaboratoryTest/', $itemURI, '-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
				        	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LaboratoryTest'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Analisi di laboratorio del bene ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Analisi di laboratorio del bene ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Laboratory test of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Laboratory test of cultural property ', $itemURI)" />
					</l0:name>
					<xsl:if test="./ALBD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
		        				<xsl:value-of 	select="concat($NS, 'TimeInterval/', arco-fn:urify(./ALBD))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>						
					<xsl:if test="./ALBO">
						<arco-lite:hasOperator>
							<xsl:attribute name="rdf:resource">
			        			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ALBO))" />
							</xsl:attribute>
						</arco-lite:hasOperator>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-laboratory-test-', $test-position, '-activity-operator')" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:if>
					<xsl:if test="./ALBE and not($sheetType='TMA')">
						<arco-lite:hasResponsibleAgent>
							<xsl:attribute name="rdf:resource">
		    	    			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ALBE))" />
							</xsl:attribute>
						</arco-lite:hasResponsibleAgent>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-laboratory-test-', $test-position, '-activity-responsible')" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:if>
					<xsl:if test="./ALBT">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'LaboratoryTestType/', arco-fn:urify(./ALBT))" />
							</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./ALBR">
						<arco-cd:testResults>
							<xsl:value-of select="normalize-space(./ALBR)" />
						</arco-cd:testResults>
					</xsl:if>
					<xsl:if test="./ALBN">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./ALBN)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="$sheetType='TMA'">
						<xsl:if test="./ALBE">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./ALBE)" />
							</arco-core:note>
						</xsl:if>
					</xsl:if>
					<xsl:if test="./ALBS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./ALBS)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./ALBA">
						<arco-cd:claySpecifications>
							<xsl:value-of select="normalize-space(./ALBA)" />
						</arco-cd:claySpecifications>
					</xsl:if>
				</rdf:Description>
				<!-- agent role of activity operator as an individual -->
				<xsl:if test="./ALBO">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-laboratory-test-', $test-position, '-activity-operator')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Operatore del test di laboratorio ', $test-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./ALBO))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Operatore del test di laboratorio ', $test-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./ALBO))" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Operator of laboratory test ', $test-position, ' of cultural property ', $itemURI, ': ', normalize-space(./ALBO))" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Operator of laboratory test ', $test-position, ' of cultural property ', $itemURI, ': ', normalize-space(./ALBO))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/Operator')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ALBO))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- role of activity operator as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/Operator')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Operatore'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Operator'" />
						</rdfs:label>
					</rdf:Description>
					<!-- agent of activity operator as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
       			    	   	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ALBO))" />
        	        	</xsl:attribute>
		    	        <rdf:type>
							<xsl:attribute name="rdf:resource">
    			    	    	<xsl:value-of	select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>   
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./ALBO)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./ALBO)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- agent role of activity responsible as an individual -->
				<xsl:if test="./ALBE  and not($sheetType='TMA')">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-laboratory-test-', $test-position, '-activity-responsible')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabile del test di laboratorio ', $test-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./ALBE))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Responsabile del test di laboratorio ', $test-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./ALBE))" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Responsible of laboratory test ', $test-position, ' of cultural property ', $itemURI, ': ', normalize-space(./ALBE))" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Responsible of laboratory test ', $test-position, ' of cultural property ', $itemURI, ': ', normalize-space(./ALBE))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ALBE))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- role of activity responsible as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Responsabile'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Responsible agent'" />
						</rdfs:label>
					</rdf:Description>
					<!-- agent of activity responsible as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
       			    	   	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ALBE))" />
        	        	</xsl:attribute>
		    	        <rdf:type>
							<xsl:attribute name="rdf:resource">
    			    	    	<xsl:value-of	select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>   
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./ALBE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./ALBE)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!--laboratory test type as an individual -->
				<xsl:if test="./ALBT">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	        	    		<xsl:value-of select="concat($NS, 'LaboratoryTestType/', arco-fn:urify(./ALBT))" />
				        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	        	    			<xsl:value-of	select="'https://w3id.org/arco/ontology/context-description/LaboratoryTestType'" />
			    	        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ALBT)" />
						</rdfs:label>
							<l0:name>
							<xsl:value-of select="normalize-space(./ALBT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- time interval as an individual -->
				<xsl:if test="./ALBD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
				    		<xsl:value-of 	select="concat($NS, 'TimeInterval/', arco-fn:urify(./ALBD))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
		    	    			<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
						</rdf:type>
						<rdfs:label>
								<xsl:value-of select="./ALBD" />
						</rdfs:label>
						<l0:name>
								<xsl:value-of select="./ALBD" />
						</l0:name>
						<arco-arco:startTime>
							<xsl:value-of select="./ALBD" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="./ALBD" />
						</arco-arco:endTime>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>		
			<!-- Photo interpretation rendering excavation of cultural property -->
			<xsl:if test="record/metadata/schede/*/*/FOI/*">
				<xsl:for-each select="record/metadata/schede/*/*/FOI">
					<xsl:variable name="survey-position">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                			<xsl:value-of select="concat($NS, 'PhotoInterpretationRendering/', $itemURI, '-survey-', position())" />
                		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PhotoInterpretationRendering'" />
                			</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Fotointerpretazione e fotorestituzione ', position(), ' del bene ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Fotointerpretazione e fotorestituzione ', position(), ' del bene ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Photo interpretation and rendering ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Photo interpretation and rendering ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./FOIN">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./FOIN)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./FOIR and (not(starts-with(lower-case(normalize-space(./FOIR)), 'nr')) and not(starts-with(lower-case(normalize-space(./FOIR)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./FOIR)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./FOIA or ./FOIQ">
							<arco-cd:hasAnomaly>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'Anomaly/', $itemURI)" />
	                			</xsl:attribute>
							</arco-cd:hasAnomaly>
						</xsl:if>
						<xsl:if test="./FOIP">
							<arco-cd:overlapSpecifications>
								<xsl:value-of select="normalize-space(./FOIP)" />
							</arco-cd:overlapSpecifications>
						</xsl:if>
						<xsl:if test="./FOIO and (not(starts-with(lower-case(normalize-space(./FOIO)), 'nr')) and not(starts-with(lower-case(normalize-space(./FOIO)), 'n.r')))">
							<arco-cd:hasReliability>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
										<xsl:when test="lower-case(normalize-space(./FOIA))='scarsa'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InsufficientReliability'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./FOIA))='discreta'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DecentReliability'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./FOIA))='buona'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/GoodReliability'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./FOIA))='ottima'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ExcellentReliability'" />
										</xsl:when>
									</xsl:choose>
								</xsl:attribute>
							</arco-cd:hasReliability>
						</xsl:if>
						<xsl:if test="./FOIM and (not(starts-with(lower-case(normalize-space(./FOIM)), 'nr')) and not(starts-with(lower-case(normalize-space(./FOIM)), 'n.r')))">
							<arco-cd:hasSurveyMotivation>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'SurveyMotivation/', arco-fn:urify(normalize-space(./FOIM)))" />
	                			</xsl:attribute>
							</arco-cd:hasSurveyMotivation>
						</xsl:if>
						<xsl:for-each select="./FOIS">
							<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
								<arco-lite:hasScientificDirector>
									<xsl:attribute name="rdf:resource">
		                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                			</xsl:attribute>
								</arco-lite:hasScientificDirector>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-photo-interpretation-rendering-', $survey-position, '-scientific-director')" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./FOIE">
							<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
								<arco-lite:hasResponsibleAgent>
									<xsl:attribute name="rdf:resource">
		                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                			</xsl:attribute>
								</arco-lite:hasResponsibleAgent>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-photo-interpretation-rendering-', $survey-position, '-activity-responsible')" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:for-each>
						<xsl:if test="./FOIT or ./FOID">
							<arco-cd:hasSurveyImage>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'SurveyImage/', $itemURI, '-', $survey-position)" />
	                			</xsl:attribute>
							</arco-cd:hasSurveyImage>
						</xsl:if>
					</rdf:Description>
					<!-- Time interval as an individual -->
					<xsl:if test="./FOIR and (not(starts-with(lower-case(normalize-space(./FOIR)), 'nr')) and not(starts-with(lower-case(normalize-space(./FOIR)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./FOIR)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./FOIR)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./FOIR)" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./FOIR)" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(./FOIR)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:if>
					<!-- anomaly of survey as an individual -->
					<xsl:if test="./FOIA or ./FOIQ">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                		<xsl:value-of select="concat($NS, 'Anomaly/', $itemURI)" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Anomaly'" />
	                			</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Anomalia relativa alla fotointerpretazione e fotorestituzione del bene ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Anomalia relativa alla fotointerpretazione e fotorestituzione ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Anomaly about photo interpretation and rendering of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Bibliography about photo interpretation and rendering of cultural property ', $itemURI)" />
							</l0:name>
							<xsl:if test="./FOIA">
								<arco-cd:hasAnomalyOrigin>
									<xsl:attribute name="rdf:resource">
										<xsl:choose>
											<xsl:when test="lower-case(normalize-space(./FOIA))='origine antropica'">
												<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AnthropicOrigin'" />
											</xsl:when>
											<xsl:when test="lower-case(normalize-space(./FOIA))='origine naturale'">
												<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/NaturalOrigin'" />
											</xsl:when>
											<xsl:when test="lower-case(normalize-space(./FOIA))='origine incerta'">
												<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UncertainOrigin'" />
											</xsl:when>
										</xsl:choose>
									</xsl:attribute>
								</arco-cd:hasAnomalyOrigin>
							</xsl:if>
							<xsl:if test="./FOIQ">
								<arco-core:hasType>
									<xsl:attribute name="rdf:resource">
										<xsl:choose>
											<xsl:when test="lower-case(normalize-space(./FOIA))='anomalia puntuale'">
												<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PointAnomaly'" />
											</xsl:when>
											<xsl:when test="lower-case(normalize-space(./FOIA))='anomalia lineare'">
												<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LineAnomaly'" />
											</xsl:when>
											<xsl:when test="lower-case(normalize-space(./FOIA))='anomalia areale'">
												<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PolygonAnomaly'" />
											</xsl:when>
										</xsl:choose>
									</xsl:attribute>
								</arco-core:hasType>
							</xsl:if>
							<xsl:if test="./FOIF">
								<arco-core:hasClassification>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AnomalyClassification/', arco-fn:urify(normalize-space(./FOIF)))" />
									</xsl:attribute>
								</arco-core:hasClassification>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
					<!-- anomaly as an individual -->
					<xsl:if test="./FOIF">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'AnomalyClassification/', arco-fn:urify(normalize-space(./FOIF)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AnomalyClassification'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./FOIF)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./FOIF)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- motivation of survey as an individual -->
					<xsl:if test="./FOIM and (not(starts-with(lower-case(normalize-space(./FOIM)), 'nr')) and not(starts-with(lower-case(normalize-space(./FOIM)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'SurveyMotivation/', arco-fn:urify(normalize-space(./FOIM)))" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SurveyMotivation'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./FOIM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./FOIM)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- survay image as an individual -->
					<xsl:if test="./FOIT or ./FOID">						
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	                			<xsl:value-of select="concat($NS, 'SurveyImage/', $itemURI, '-', $survey-position)" />
	                		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SurveyImage'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Immagine relativa all&quot;indagine ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./FOID))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Immagine relativa all&quot;indagine ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./FOID))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Image related to survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(./FOID))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Image related to survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(./FOID))" />
							</l0:name>
							<xsl:if test="./FOIT and (not(starts-with(lower-case(normalize-space(./FOIT)), 'nr')) and not(starts-with(lower-case(normalize-space(./FOIT)), 'n.r')))">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
										<xsl:when test="lower-case(normalize-space(./FOIT))='fotografia aerea'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AerialPhotograph'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./FOIT))='fotografia satellitare'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SatellitePhotograph'" />
										</xsl:when>
									</xsl:choose>
								</xsl:attribute>
							</arco-core:hasType>
						</xsl:if>
						<xsl:if test="./FOID">
							<arco-lite:localIdentifier>
								<xsl:value-of select="normalize-space(./FOID)" />
							</arco-lite:localIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'SurveyImageIdentifier/', arco-fn:arcofy(./FOID))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
							</xsl:if>
						</rdf:Description>
						<xsl:if test="./FOID">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalExcavationIdentifier/', arco-fn:arcofy(./FOID))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./FOID)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./FOID)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./FOID)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						</rdf:Description>
						</xsl:if>
					</xsl:if>
					<!-- agent role of survey scientific director as an individual -->
					<xsl:for-each select="./FOIS">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(./FOIS)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-photo-interpretation-rendering-', $survey-position, '-scientific-director')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Responsabile scientifico della fotointerpretazione e fotorestituzione ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Responsabile scientifico della fotointerpretazione e fotorestituzione ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Scientific director of photo interpretation and rendering ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Scientific director of photo interpretation and rendering ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
									</xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
									</xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of survey scientific director as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Role/ScientificDirector')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Responsabile Scientifico'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Scientific Director'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of survey scientific director as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
					<!-- agent role of activity responsible as an individual -->
					<xsl:for-each select="./FOIR">
						<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-photo-interpretation-rendering-', $survey-position, '-activity-responsible')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Ente responsabile della fotointerpretazione e fotorestituzione ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Ente responsabile della fotointerpretazione e fotorestituzione ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Responsible agency of photo interpretation and rendering ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Responsible agency of photo interpretation and rendering ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
									</xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
									</xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Responsabile'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Responsible agent'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
				</xsl:for-each>
			</xsl:if>
			<!-- Other surveys -->
			<xsl:if test="not(record/metadata/schede/*/RE/AIN/AIND='0000/00/00' or record/metadata/schede/*/RE/AIN/AIND='/') and record/metadata/schede/*/RE/AIN/*">
				<xsl:for-each select="record/metadata/schede/*/RE/AIN">
					<xsl:variable name="survey-position">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                			<xsl:value-of select="concat($NS, 'Survey/', $itemURI, '-survey-', position())" />
                		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Survey'" />
                			</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Survey of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Survey of cultural property ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Indagine del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Indagine del bene culturale ', $itemURI)" />
						</l0:name>
						<xsl:if test="./AIND and (not(starts-with(lower-case(normalize-space(./AIND)), 'nr')) and not(starts-with(lower-case(normalize-space(./AIND)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./AIND)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./AINT">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
                					<xsl:value-of select="concat($NS, 'SurveyType/', arco-fn:urify(normalize-space(./AINT)))" />
                				</xsl:attribute>
							</arco-core:hasType>
						</xsl:if>
						<xsl:if test="./AINS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./AINS)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./AINR">
							<arco-lite:hasResponsibleAgent>
								<xsl:attribute name="rdf:resource">
		                			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AINR))" />
		                		</xsl:attribute>
							</arco-lite:hasResponsibleAgent>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-survey-', $survey-position, '-activity-responsible')" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
					</rdf:Description>
					<!-- Time interval as an individual -->
					<xsl:if test="./AIND and (not(starts-with(lower-case(normalize-space(./AIND)), 'nr')) and not(starts-with(lower-case(normalize-space(./AIND)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./AIND)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./AIND)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./AIND)" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./AIND)" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(./AIND)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:if>
					<!-- SurveyType as an individual -->
					<xsl:if test="./AINT">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                				<xsl:value-of select="concat($NS, 'SurveyType/', arco-fn:urify(normalize-space(./AINT)))" />
                				</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/SurveyType" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./AINT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./AINT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- agent role of activity responsible as an individual -->
					<xsl:if test="./AINR">
						<xsl:if test="./AINR and (not(starts-with(lower-case(normalize-space(./AINR)), 'nr')) and not(starts-with(lower-case(normalize-space(./AINR)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-survey-', $survey-position, '-activity-responsible')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Responsabile dell&quot;indagine ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./AINR))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Responsabile dell&quot;indagine ', $survey-position, ' del bene culturale ', $itemURI, ': ', normalize-space(./AINR))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Responsible of survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(./AINR))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Responsible of survey ', $survey-position, ' of cultural property ', $itemURI, ': ', normalize-space(./AINR))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
									</xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
									</xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- role of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Responsabile'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Responsible agent'" />
								</rdfs:label>
							</rdf:Description>
							<!-- agent of activity responsible as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AINR))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(./AINR)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(./AINR)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- affixed element (DA/STM) -->
			<xsl:if test="record/metadata/schede/*/DA/STM/*">
				<xsl:for-each select="record/metadata/schede/*/DA/STM">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-affixed-element-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/AffixedElement'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Element ', position(), ' affixed to cultural property ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Elemento ', position(), ' apposto sul bene ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Element ', position(), ' affixed to cultural property ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Elemento ', position(), ' apposto sul bene ', $itemURI)" />
						</l0:name>
						<xsl:if test="./STMD and (not(starts-with(lower-case(normalize-space(./STMD)), 'nr')) and not(starts-with(lower-case(normalize-space(./STMD)), 'n.r')))">
							<arco-core:description>
								<xsl:value-of select="normalize-space(./STMD)" />
							</arco-core:description>
						</xsl:if>
						<xsl:if test="./STMU and (not(starts-with(lower-case(normalize-space(./STMU)), 'nr')) and not(starts-with(lower-case(normalize-space(./STMU)), 'n.r')))">
							<arco-dd:occurrences>
								<xsl:value-of select="normalize-space(./STMU)" />
							</arco-dd:occurrences>
						</xsl:if>
						<xsl:if test="./STMP">
							<arco-dd:positionOnCulturalProperty>
								<xsl:value-of select="normalize-space(./STMP)" />
							</arco-dd:positionOnCulturalProperty>
						</xsl:if>
						<arco-core:hasType>
							<xsl:choose>
								<xsl:when test="./STMQ and (not(starts-with(lower-case(normalize-space(./STMQ)), 'nr')) and not(starts-with(lower-case(normalize-space(./STMQ)), 'n.r')))">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./STMC)), '-', arco-fn:urify(normalize-space(./STMQ)))" />
									</xsl:attribute>
								</xsl:when>	
								<xsl:when test="lower-case(normalize-space(./STMC))='timbro'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Stamp'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./STMC))='stemma'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CoatOfArms'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./STMC))='emblema'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Emblem'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when
									test="lower-case(normalize-space(./STMC))='marchio'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Brand'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./STMC))='logo'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Logo'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./STMC)))" />
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
						</arco-core:hasType>
						<xsl:if test="./STMI and (not(starts-with(lower-case(normalize-space(./STMI)), 'nr')) and not(starts-with(lower-case(normalize-space(./STMI)), 'n.r')))">
							<arco-dd:refersToAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./STMI))" />
								</xsl:attribute>
							</arco-dd:refersToAgent>
						</xsl:if>
					</rdf:Description>
					<!-- affixed element type as an individual -->
					<xsl:choose>
						<xsl:when test="./STMQ and (not(starts-with(lower-case(normalize-space(./STMQ)), 'nr')) and not(starts-with(lower-case(normalize-space(./STMQ)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./STMC)), '-', arco-fn:urify(normalize-space(./STMQ)))" />
								</xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElementType" />
								<rdfs:label>
									<xsl:value-of select="concat(normalize-space(./STMC), ' ', normalize-space(./STMQ))" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="concat(normalize-space(./STMC), ' ', normalize-space(./STMQ))" />
								</l0:name>
								<skos:broader>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./STMC)))" />
									</xsl:attribute>
								</skos:broader>
							</rdf:Description>
						</xsl:when>	
						<xsl:when test="lower-case(normalize-space(./STMC))='timbro'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./STMC))='stemma'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./STMC))='emblema'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./STMC))='marchio'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./STMC))='logo'"></xsl:when>
						<xsl:otherwise>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./STMC)))" />
								</xsl:attribute>					
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElementType" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(./STMC)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./STMC)" />
								</l0:name>
							</rdf:Description>
						</xsl:otherwise>
					</xsl:choose>
					<!-- referred agent as an individual -->
					<xsl:if test="./STMI and (not(starts-with(lower-case(normalize-space(./STMI)), 'nr')) and not(starts-with(lower-case(normalize-space(./STMI)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./STMI))" />
	                            </xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./STMI)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./STMI)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- affixed element (*/LSI) -->
			<xsl:if test="record/metadata/schede/*/*/LSI/*">
				<xsl:for-each select="record/metadata/schede/*/*/LSI">
					<xsl:variable name="parentPosition">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-affixed-element-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/AffixedElement'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Element ', position(), ' affixed to cultural property ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Elemento ', position(), ' apposto sul bene ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Element ', position(), ' affixed to cultural property ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Elemento ', position(), ' apposto sul bene ', $itemURI)" />
						</l0:name>
						<arco-core:hasType>
							<xsl:choose>
								<xsl:when test="lower-case(normalize-space(./LSIG))='timbro'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Stamp'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./LSIG))='stemma'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CoatOfArms'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./LSIG))='emblema'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Emblem'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./LSIG))='marchio'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Brand'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./LSIG))='logo'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Logo'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./LSIG))='lapide'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/HistoricalPlaque'" />
									</xsl:attribute>
								</xsl:when>
							</xsl:choose>
						</arco-core:hasType>
						<xsl:if test="./LSIT and (not(starts-with(lower-case(normalize-space(./LSIT)), 'nr')) and not(starts-with(lower-case(normalize-space(./LSIT)), 'n.r')))">
							<arco-core:description>
								<xsl:value-of select="normalize-space(./LSIT)" />
							</arco-core:description>
						</xsl:if>
						<xsl:if test="./LSII and (not(starts-with(lower-case(normalize-space(./LSII)), 'nr')) and not(starts-with(lower-case(normalize-space(./LSII)), 'n.r')))">
							<arco-dd:transcript>
								<xsl:value-of select="normalize-space(./LSII)" />
							</arco-dd:transcript>
						</xsl:if>
						<xsl:if test="./LSIM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))] or ./LSIC[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-dd:hasTechnicalStatus>
								<xsl:attribute name="rdf:resource">
			                		<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-affixed-element-', $parentPosition)" />
		 	                	</xsl:attribute>
							</arco-dd:hasTechnicalStatus>
						</xsl:if>
						<xsl:for-each select="./LSIC">
							<arco-lite:hasTechnique>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
	                		</xsl:attribute>
							</arco-lite:hasTechnique>
						</xsl:for-each>
						<xsl:for-each select="./LSIM">
							<arco-lite:hasMaterial>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
	                		</xsl:attribute>
							</arco-lite:hasMaterial>
						</xsl:for-each>
					</rdf:Description>
					<!-- technical status as an individual -->
					<xsl:if test="./LSIM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))] or ./LSIC[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-affixed-element-', $parentPosition)" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
								</xsl:attribute>
							</rdf:type>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Stato tecnico dell''elemento ', $parentPosition, ' apposto sul bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Stato tecnico dell''elemento ', $parentPosition, ' apposto sul bene culturale ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Technical status of element ', $parentPosition, ' affixed to cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Technical status of element ', $parentPosition, ' affixed to cultural property ', $itemURI)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- technique as an individual -->
					<xsl:if test="./LSIC and (not(starts-with(lower-case(normalize-space(./LSIC)), 'nr')) and not(starts-with(lower-case(normalize-space(./LSIC)), 'n.r')))">
						<xsl:if test="./LSIC">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
            						<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-affixed-element-', $parentPosition)" />
            					</xsl:attribute>
            					<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
								</xsl:attribute>
							</rdf:type>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Stato tecnico dell''elemento ', position(), ' del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Stato tecnico dell''elemento ', position(), ' del bene culturale ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Technical status of decorative apparatus ', position(), ' of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Technical status of decorative apparatus ', position(), ' of cultural property ', $itemURI)" />
							</l0:name>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
								<xsl:for-each select="./LSIC">
									<arco-dd:includesTechnicalCharacteristic>
										<xsl:attribute name="rdf:resource">
            								<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
            							</xsl:attribute>
									</arco-dd:includesTechnicalCharacteristic>
								</xsl:for-each>
							</rdf:Description>
							<!-- Technical detail as an individual -->
							<xsl:for-each select="./LSIC">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="normalize-space(.)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(.)" />
									</l0:name>
									<arco-dd:isCharacteristicClassifiedBy>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Technique'" />
										</xsl:attribute>
									</arco-dd:isCharacteristicClassifiedBy>
								</rdf:Description>
							</xsl:for-each>
						</xsl:if>
					</xsl:if>
					<!-- material as an individual -->
					<xsl:if test="./LSIM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
           						<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-affixed-element-', $parentPosition)" />
           					</xsl:attribute>
           					<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
								</xsl:attribute>
							</rdf:type>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Stato tecnico dell''elemento ', position(), ' del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Stato tecnico dell''elemento ', position(), ' del bene culturale ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Technical status of element ', position(), ' of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Technical status of element ', position(), ' of cultural property ', $itemURI)" />
							</l0:name>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<xsl:for-each select="./LSIM">
								<arco-dd:includesTechnicalCharacteristic>
									<xsl:attribute name="rdf:resource">
           								<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
           							</xsl:attribute>
								</arco-dd:includesTechnicalCharacteristic>
							</xsl:for-each>
						</rdf:Description>
						<!-- Technical detail as an individual -->
						<xsl:for-each select="./LSIM">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(.)" />
								</l0:name>
								<arco-dd:isCharacteristicClassifiedBy>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Technique'" />
									</xsl:attribute>
								</arco-dd:isCharacteristicClassifiedBy>
							</rdf:Description>
						</xsl:for-each>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- affixed element (DA/ISE) -->
			<xsl:if test="record/metadata/schede/*/DA/ISE/*">
				<xsl:for-each select="record/metadata/schede/*/DA/ISE">
					<xsl:variable name="parentPosition">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-affixed-element-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/AffixedElement'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Element ', position(), ' affixed to cultural property ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Elemento ', position(), ' apposto sul bene ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Element ', position(), ' affixed to cultural property ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Elemento ', position(), ' apposto sul bene ', $itemURI)" />
						</l0:name>
						<xsl:if test="./ISEN and (not(starts-with(lower-case(normalize-space(./ISEN)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEN)), 'n.r')))">
							<arco-core:description>
								<xsl:value-of select="normalize-space(./ISEN)" />
							</arco-core:description>
						</xsl:if> 
						<xsl:if test="./ISEZ and (not(starts-with(lower-case(normalize-space(./ISEZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEZ)), 'n.r')))">
							<arco-core:description>
								<xsl:value-of select="normalize-space(./ISEZ)" />
							</arco-core:description>
						</xsl:if>
						<xsl:if test="./ISEQ and (not(starts-with(lower-case(normalize-space(./ISEQ)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEQ)), 'n.r')))">
							<arco-dd:occurrences>
								<xsl:value-of select="normalize-space(./ISEQ)" />
							</arco-dd:occurrences>
						</xsl:if>
						<xsl:if test="./ISEI and (not(starts-with(lower-case(normalize-space(./ISEI)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEI)), 'n.r')))">
							<arco-dd:transcript>
								<xsl:value-of select="normalize-space(./ISEI)" />
							</arco-dd:transcript>
						</xsl:if>
						<xsl:if test="./ISEB and (not(starts-with(lower-case(normalize-space(./ISEB)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEB)), 'n.r')))">
							<arco-dd:italianTranslation>
								<xsl:value-of select="normalize-space(./ISEB)" />
							</arco-dd:italianTranslation>
						</xsl:if>
						<xsl:if test="./ISEP and (not(starts-with(lower-case(normalize-space(./ISEP)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEP)), 'n.r')))">
							<arco-dd:positionOnCulturalProperty>
								<xsl:value-of select="normalize-space(./ISEP)" />
							</arco-dd:positionOnCulturalProperty>
						</xsl:if>
						<arco-core:hasType>
							<xsl:choose>
								<xsl:when test="./ISEE and (not(starts-with(lower-case(normalize-space(./ISEE)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEE)), 'n.r')))">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./ISED)), arco-fn:urify(normalize-space(./ISEE)))" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./ISED))='timbro'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Stamp'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./ISED))='stemma'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CoatOfArms'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./ISED))='emblema'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Emblem'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./ISED))='marchio'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Brand'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./ISED))='logo'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Logo'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./ISED))='iscrizione'">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Inscription'" />
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./ISED)))" />
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
						</arco-core:hasType>
						<xsl:if test="./ISEO and (not(starts-with(lower-case(normalize-space(./ISEO)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEO)), 'n.r')))">
							<arco-dd:refersToAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISEO))" />
								</xsl:attribute>
							</arco-dd:refersToAgent>
						</xsl:if>
						<xsl:for-each select="./ISEL[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<language:hasLanguage>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Language/', arco-fn:urify(normalize-space(.)))" />
								</xsl:attribute>
							</language:hasLanguage>
						</xsl:for-each>
						<xsl:if test="./ISEA and (not(starts-with(lower-case(normalize-space(./ISEA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEA)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISEA))" />
								</xsl:attribute>
							</arco-lite:hasAuthor>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-affixed-element-', $parentPosition, '-author')" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
						<xsl:for-each select="./ISEF[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-dd:hasWritingSystem>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'WritingSystem/', arco-fn:urify(normalize-space()))" />
								</xsl:attribute>
							</arco-dd:hasWritingSystem>
						</xsl:for-each>
						<xsl:for-each select="./ISET[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-dd:hasFontStyle>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'FontStyle/', arco-fn:urify(normalize-space(.)))" />
								</xsl:attribute>
							</arco-dd:hasFontStyle>
						</xsl:for-each>
						<xsl:if test="./ISES and (not(starts-with(lower-case(normalize-space(./ISES)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISES)), 'n.r')))">
							<arco-dd:hasSupport>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Support/', arco-fn:urify(normalize-space(./ISES)))" />
								</xsl:attribute>
							</arco-dd:hasSupport>
						</xsl:if>
						<xsl:if test="./ISEM[not(starts-with(lower-case(normalize-space()), 'nr')) and not(starts-with(lower-case(normalize-space()), 'n.r'))]"><!-- xslt2 normalize-space more than one item es: ICCD12375601 -->
							<xsl:if test="./ISEM">
								<arco-dd:hasTechnicalStatus>
									<xsl:attribute name="rdf:resource">
			                			<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-affixed-element-', $parentPosition)" />
		 	                	</xsl:attribute>
								</arco-dd:hasTechnicalStatus>
								<xsl:for-each select="./ISEM">
									<arco-dd:hasMaterialOrTechnique>
										<xsl:attribute name="rdf:resource">
		            						<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
										</xsl:attribute>
									</arco-dd:hasMaterialOrTechnique>
								</xsl:for-each>
							</xsl:if>
						</xsl:if>
						<xsl:for-each select="./ISEC[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-cd:hasFunctionalPurpose>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(.)))" />
								</xsl:attribute>
							</arco-cd:hasFunctionalPurpose>
						</xsl:for-each>
					</rdf:Description>
					<!-- affixed element type as an individual -->
					<xsl:choose>
						<xsl:when test="./ISEE and (not(starts-with(lower-case(normalize-space(./ISEE)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEE)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./ISED)), arco-fn:urify(normalize-space(./ISEE)))" />
								</xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElementType" />
								<rdfs:label>
									<xsl:value-of select="concat(normalize-space(./ISED), ' ', normalize-space(./ISEE))" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="concat(normalize-space(./ISED), ' ', normalize-space(./ISEE))" />
								</l0:name>
								<skos:broader>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./ISED)))" />
									</xsl:attribute>
								</skos:broader>
							</rdf:Description>
						</xsl:when>
						<xsl:when test="lower-case(normalize-space(./ISED))='timbro'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./ISED))='stemma'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./ISED))='emblema'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./ISED))='marchio'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./ISED))='logo'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(./ISED))='iscrizione'"></xsl:when>
						<xsl:otherwise>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AffixedElementType/', arco-fn:urify(normalize-space(./ISED)))" />
								</xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElementType" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(./ISED)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./ISED)" />
								</l0:name>
							</rdf:Description>
						</xsl:otherwise>
					</xsl:choose>						
					<!-- referred agent as an individual -->
					<xsl:if test="./ISEO and (not(starts-with(lower-case(normalize-space(./ISEO)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEO)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISEO))" />
	                            </xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ISEO)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ISEO)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- language as an individual -->
					<xsl:for-each select="./ISEL[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="concat($NS, 'Language/', arco-fn:urify(normalize-space(.)))" />
                            </xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/italia/onto/Language/Language" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
					<!-- author as an individual -->
					<xsl:if test="./ISEA and (not(starts-with(lower-case(normalize-space(./ISEA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISEA)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-affixed-element-', $parentPosition, '-author')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Autore ', position(), ' dell elemento affisso: ', normalize-space(./ISEA))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Author ', position(), ' of affixed element: ', normalize-space(./ISEA))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Autore ', position(), ' dell elemento affisso: ', normalize-space(./ISEA))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Author ', position(), ' of affixed element: ', normalize-space(./ISEA))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/Author')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISEA))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Author')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Autore'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Author'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent as an indiviual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISEA))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ISEA)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ISEA)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- writing system as an individual -->
					<xsl:for-each select="./ISEF[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'WritingSystem/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/WritingSystem" />
							<rdfs:label>
								<xsl:value-of select="normalize-space()" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space()" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
					<!-- font style as an individual -->
					<xsl:for-each select="./ISET[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="concat($NS, 'FontStyle/', arco-fn:urify(normalize-space(.)))" />
                            </xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/FontStyle" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
					<!-- support as an individual -->
					<xsl:if test="./ISES and (not(starts-with(lower-case(normalize-space(./ISES)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISES)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Support/', arco-fn:urify(normalize-space(./ISES)))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/Support" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ISES)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ISES)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- material technique as an individual -->
					<xsl:if test="./ISEM[not(starts-with(lower-case(normalize-space()), 'nr')) and not(starts-with(lower-case(normalize-space()), 'n.r'))]"><!-- xslt2 normalize-space more than one item es: ICCD12375601 -->
						<xsl:if test="./ISEM">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-affixed-element-', $parentPosition)" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
									</xsl:attribute>
								</rdf:type>
								<arco-core:current>
									<xsl:value-of select="true()" />
								</arco-core:current>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Stato tecnico dell''elemento ', $parentPosition, ' apposto sul bene culturale ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Stato tecnico dell''elemento ', $parentPosition, ' apposto sul bene culturale ', $itemURI)" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Technical status of element ', $parentPosition, ' affixed to cultural property ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Technical status of element ', $parentPosition, ' affixed to cultural property ', $itemURI)" />
								</l0:name>
								<xsl:for-each select="./ISEM">
									<arco-dd:includesTechnicalCharacteristic>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
										</xsl:attribute>
									</arco-dd:includesTechnicalCharacteristic>
								</xsl:for-each>
							</rdf:Description>
							<!-- Technical detail as an individual -->
							<xsl:for-each select="./ISEM">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="normalize-space(.)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(.)" />
									</l0:name>
									<arco-dd:isCharacteristicClassifiedBy>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MaterialOrTechnique'" />
										</xsl:attribute>
									</arco-dd:isCharacteristicClassifiedBy>
								</rdf:Description>
							</xsl:for-each>
						</xsl:if>
					</xsl:if>
					<!-- functional purpose as an individual -->
					<xsl:for-each select="./ISEC[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/UseFunction" />
							<rdfs:label>
								<xsl:value-of select="normalize-space()" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space()" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
				</xsl:for-each>
			</xsl:if>
			<!-- affixed element (DA/ISR) -->
			<xsl:if test="record/metadata/schede/*/DA/ISR/*">
				<xsl:for-each select="record/metadata/schede/*/DA/ISR">
					<xsl:variable name="parentPosition">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-inscription-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/AffixedElement'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Inscription ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Iscrizione ', position(), ' sul bene culturale ', $itemURI)" />
						</rdfs:label>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Inscription'" />
							</xsl:attribute>
						</arco-core:hasType>
						<xsl:if test="./ISRI and (not(starts-with(lower-case(normalize-space(./ISRI)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISRI)), 'n.r')))">
							<arco-dd:transcript>
								<xsl:value-of select="normalize-space(./ISRI)" />
							</arco-dd:transcript>
						</xsl:if>
						<xsl:if test="./ISRP">
							<arco-dd:positionOnCulturalProperty>
								<xsl:value-of select="normalize-space(./ISRP)" />
							</arco-dd:positionOnCulturalProperty>
						</xsl:if>
						<xsl:if test="./ISRL and (not(starts-with(lower-case(normalize-space(./ISRL)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISRL)), 'n.r')))">
							<xsl:for-each select="./ISRL">
								<language:hasLanguage>
									<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Language/', arco-fn:urify(normalize-space(.)))" />
								</xsl:attribute>
								</language:hasLanguage>
							</xsl:for-each>
						</xsl:if>
						<xsl:if test="./ISRA and (not(starts-with(lower-case(normalize-space(./ISRA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISRA)), 'n.r')))">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISRA))" />
								</xsl:attribute>
							</arco-lite:hasAuthor>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-affixed-element-', $parentPosition, '-author')" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
						<xsl:if test="./ISRT and (not(starts-with(lower-case(normalize-space(./ISRT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISRT)), 'n.r')))">
							<xsl:for-each select="./ISRT">
								<arco-dd:hasFontStyle>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'FontStyle/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-dd:hasFontStyle>
							</xsl:for-each>
						</xsl:if>
						<xsl:if test="./ISRM">
							<arco-dd:hasMeasurementCollection>
								<xsl:attribute name="rdf:resource">
					 	   			<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI, '-inscription-measurement-collection-', position())" />
								</xsl:attribute>
			            	</arco-dd:hasMeasurementCollection>
						</xsl:if>
						<xsl:if test="./ISRS and (not(starts-with(lower-case(normalize-space(./ISRS)), 'nr')) and not(starts-with(lower-case(normalize-space(ISRS)), 'n.r')))">
							<xsl:if test="./ISRS">
								<arco-dd:hasTechnicalStatus>
									<xsl:attribute name="rdf:resource">
			                			<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-inscription-', $parentPosition)" />
									</xsl:attribute>
								</arco-dd:hasTechnicalStatus>
								<xsl:for-each select="./ISRS">
									<arco-lite:hasTechnique>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
										</xsl:attribute>
									</arco-lite:hasTechnique>
								</xsl:for-each>
							</xsl:if>
						</xsl:if>
						<xsl:for-each select="./ISRC[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-cd:hasFunctionalPurpose>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(.)))" />
								</xsl:attribute>
							</arco-cd:hasFunctionalPurpose>
						</xsl:for-each>
					</rdf:Description>
					<!-- Measurement collection as individual -->
					<xsl:for-each select="ISRM">
						<rdf:Description>
				 			<xsl:attribute name="rdf:about">
				            	<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI, '-inscription-measurement-collection-', position())" />
				            </xsl:attribute>
				 	        <rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MeasurementCollection'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Misure dell&quot;iscrizone ', position(), 'del bene culturale ', $itemURI" />
							</rdfs:label>
							<l0:name  xml:lang="it">
								<xsl:value-of select="'Misure dell&quot;iscrizone ', position(), 'del bene culturale ', $itemURI" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Measuerements of inscription ', position(), 'of cultural property ', $itemURI" />
							</rdfs:label>
							<l0:name  xml:lang="en">
								<xsl:value-of select="'Measuerements of inscription ', position(), 'of cultural property ', $itemURI" />
							</l0:name>
							<arco-dd:hasMeasurement>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Measurement/Inscription/', (.))" />
								</xsl:attribute>
							</arco-dd:hasMeasurement>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about"   select="concat($NS, 'Measurement/Inscription/', (.))" />
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/Measurement" />
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Measurement of inscription ', position(), ': ', (.))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Measurement of inscription ', position(), ': ', (.))" />
							</l0:name>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Misura dell&quot;iscrizione ',  position(), ': ', (.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Misura dell&quot;iscrizione ',  position(), ': ', (.))" />
							</l0:name>
							<arco-dd:hasValue>
								<xsl:attribute name="rdf:resource" select="concat($NS, 'Value/', (.))" />
							</arco-dd:hasValue>
						</rdf:Description>
					</xsl:for-each>
					<!-- language as an individual -->
					<xsl:if test="./ISRL and (not(starts-with(lower-case(normalize-space(./ISRL)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISRL)), 'n.r')))">
						<xsl:for-each select="./ISRL">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	                                <xsl:value-of select="concat($NS, 'Language/', arco-fn:urify(normalize-space(.)))" />
	                            </xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/italia/onto/Language/Language" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:for-each>
					</xsl:if>
					<!-- author as an individual -->
					<xsl:if test="./ISRA and (not(starts-with(lower-case(normalize-space(./ISRA)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISRA)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-affixed-element-', $parentPosition, '-author')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Autore ', position(), ' dell elemento affisso: ', normalize-space(./ISRA))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Author ', position(), ' of affixed element: ', normalize-space(./ISRA))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Autore ', position(), ' dell elemento affisso: ', normalize-space(./ISRA))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Author ', position(), ' of affixed element: ', normalize-space(./ISRA))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/Author')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISRA))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Author')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Autore'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Author'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent as an indiviual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ISRA))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ISRA)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ISRA)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>		
					<!-- font style as an individual -->
					<xsl:if test="./ISRT and (not(starts-with(lower-case(normalize-space(./ISRT)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISRT)), 'n.r')))">
						<xsl:for-each select="./ISRT">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	                                <xsl:value-of select="concat($NS, 'FontStyle/', arco-fn:urify(normalize-space(.)))" />
	                            </xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/FontStyle" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:for-each>
					</xsl:if>
					<!-- material technique as an individual -->
					<xsl:if test="./ISRS and (not(starts-with(lower-case(normalize-space(./ISRS)), 'nr')) and not(starts-with(lower-case(normalize-space(./ISRS)), 'n.r')))">
						<xsl:if test="./ISRS">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI, '-inscription-', $parentPosition)" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
									</xsl:attribute>
								</rdf:type>
								<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Stato tecnico dell''iscrizione ', $parentPosition, ' sul bene culturale ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Stato tecnico dell''iscrizione ', $parentPosition, ' sul bene culturale ', $itemURI)" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Technical status of inscription ', $parentPosition, ' of cultural property ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Technical status of inscription ', $parentPosition, ' of cultural property ', $itemURI)" />
								</l0:name>
								<arco-core:current>
									<xsl:value-of select="true()" />
								</arco-core:current>
								<xsl:for-each select="./ISRS">
									<arco-dd:includesTechnicalCharacteristic>
										<xsl:attribute name="rdf:resource">
            								<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
            							</xsl:attribute>
									</arco-dd:includesTechnicalCharacteristic>
								</xsl:for-each>
							</rdf:Description>
							<!-- Technical detail as an individual -->
							<xsl:for-each select="./ISRS">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
            							<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
            						</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="normalize-space(.)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(.)" />
									</l0:name>
									<arco-dd:isCharacteristicClassifiedBy>
										<xsl:attribute name="rdf:resource">
            								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Technique'" />
            							</xsl:attribute>
									</arco-dd:isCharacteristicClassifiedBy>
								</rdf:Description>
							</xsl:for-each>
						</xsl:if>
					</xsl:if>
					<!-- functional purpose as an individual -->
					<xsl:for-each select="./ISRC[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/UseFunction" />
							<rdfs:label>
								<xsl:value-of select="normalize-space()" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space()" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
				</xsl:for-each>
			</xsl:if>
			<!-- quarry mark -->
			<xsl:if test="record/metadata/schede/*/DA/MNC/*">
				<xsl:for-each select="record/metadata/schede/*/DA/MNC">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-quarry-or-masonry-mark-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/AffixedElement'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Quarry or masonry mark ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Marchio di cava o fabrica ', position(), ' sul bene culturale ', $itemURI)" />
						</rdfs:label>
						<arco-core:hasType>
							<xsl:choose>
								<xsl:when test="./MNCT">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AffixedElementType/marchio-di-cava-o-fabbrica-', arco-fn:urify(./MNCT))" />
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/QuarryOrMasonryMark'" />
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
						</arco-core:hasType>
						<xsl:if test="./MNCD">
							<arco-core:descritpion>
								<xsl:value-of select="./MNCD" />
							</arco-core:descritpion>
						</xsl:if>
					</rdf:Description>
					<xsl:if test="./MNCT">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AffixedElementType/marchio-di-cava-o-fabbrica-', arco-fn:urify(./MNCT))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/AffixedElementType'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="concat('Marchio di cava o fabrica ', ./MNCT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="concat('Marchio di cava o fabrica ', ./MNCT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- affixed element (dedication) -->
			<xsl:if test="record/metadata/schede/*/AU/DDC/*">
				<xsl:for-each select="record/metadata/schede/*/AU/DDC">
					<xsl:variable name="parentPosition">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-dedication-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/AffixedElement'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Dedication ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Dedica ', position(), ' sul bene culturale ', $itemURI)" />
						</rdfs:label>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Dedication'" />
							</xsl:attribute>
						</arco-core:hasType>
						<xsl:for-each select="./DDCN[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-lite:hasAuthor>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(normalize-space(.)))" />
								</xsl:attribute>
							</arco-lite:hasAuthor>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-affixed-element-', $parentPosition, '-author-', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
							<dc:creator>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(normalize-space(.)))" />
								</xsl:attribute>
							</dc:creator>
							<pico:author>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(normalize-space(.)))" />
								</xsl:attribute>
							</pico:author>
						</xsl:for-each>
						<xsl:for-each select="./DDCM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-lite:hasDedicatee>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-lite:hasDedicatee>
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-affixed-element-', $parentPosition, '-dedicatee-', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:for-each>
						<xsl:if test="./DDCF and (not(starts-with(lower-case(normalize-space(./DDCF)), 'nr')) and not(starts-with(lower-case(normalize-space(./DDCF)), 'n.r')))">
							<arco-core:informationSource>
								<xsl:value-of select="normalize-space(./DDCF)" />
							</arco-core:informationSource>
						</xsl:if>
						<xsl:if test="./DDCC and (not(starts-with(lower-case(normalize-space(./DDCC)), 'nr')) and not(starts-with(lower-case(normalize-space(./DDCC)), 'n.r')))">
							<arco-cd:hasCircumstance>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./DDCC)))" />
								</xsl:attribute>
							</arco-cd:hasCircumstance>
						</xsl:if>
						<xsl:if test="./DDCD and (not(starts-with(lower-case(normalize-space(./DDCD)), 'nr')) and not(starts-with(lower-case(normalize-space(./DDCD)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DDCD)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
					</rdf:Description>
					<!-- Time interval as an individual -->
					<xsl:if test="./DDCD and (not(starts-with(lower-case(normalize-space(./DDCD)), 'nr')) and not(starts-with(lower-case(normalize-space(./DDCD)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./DDCD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DDCD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DDCD)" />
							</l0:name>
							<tiapit:time>
								<xsl:value-of select="normalize-space(./DDCD)" />
							</tiapit:time>
						</rdf:Description>
					</xsl:if>
					<!-- dedicatee as an individual -->
					<xsl:for-each select="./DDCM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-affixed-element-', $parentPosition, '-dedicatee-', position())" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Dedicatario ', position(), ' della dedica: ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Dedicatee ', position(), ' of dedication: ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Dedicatario ', position(), ' della dedica: ', normalize-space(.))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Dedicatee ', position(), ' of dedication: ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/Dedicatee')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Dedicatee')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Dedicatario'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Dedicatee'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent as an indiviual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                            </xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
					<!-- author as an individual -->
					<xsl:for-each select="./DDCN[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-affixed-element-', $parentPosition, '-author-', position())" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Autore ', position(), ' della dedica: ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Author ', position(), ' of dedication: ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Autore ', position(), ' della dedica: ', normalize-space(.))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Author ', position(), ' of dedication: ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/Author')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Author')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Autore'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Author'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent as an indiviual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                            </xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
					<!-- circumstance as an individual -->
					<xsl:if test="./DDCC and (not(starts-with(lower-case(normalize-space(./DDCC)), 'nr')) and not(starts-with(lower-case(normalize-space(./DDCC)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./DDCC)))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/Circumstance" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./DDCC)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./DDCC)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- affixed element (DA/ELR) -->
			<xsl:if test="record/metadata/schede/SCAN/DA/ELR">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/AffixedElement'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Element ', position(), ' affixed to cultural property ', $itemURI)" />
					</rdfs:label>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Elemento ', position(), ' apposto sul bene ', $itemURI)" />
					</rdfs:label>
					<arco-core:description>
						<xsl:value-of select="normalize-space(record/metadata/schede/SCAN/DA/ELR)" />
					</arco-core:description>
				</rdf:Description>
			</xsl:if>
			<!-- alternative photographic heritage classification -->
			<xsl:if test="record/metadata/schede/*/SG/CLF/*">
				<xsl:for-each select="record/metadata/schede/*/SG/CLF">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'PhotographicHeritageClassification/', $itemURI, '-alternative-classification-', position())" />
							</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/ClassificationInTime'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of
								select="concat('Alternative classification ', position(), ' of photographic heritage ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="it">
							<xsl:value-of
								select="concat('Classificazione alternativa ', position(), ' del bene fotografico ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of
								select="concat('Alternative classification ', position(), ' of photographic heritage ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of
								select="concat('Classificazione alternativa ', position(), ' del bene fotografico ', $itemURI)" />
						</l0:name>
						<xsl:if test="./CLFS">
							<arco-core:hasConcept>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'PhotographicClass/', arco-fn:urify(normalize-space(./CLFS)))" />
								</xsl:attribute>
							</arco-core:hasConcept>
						</xsl:if>
						<xsl:if test="./CLFT">
							<arco-core:hasClassificationSystem>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ClassificationSystem/', arco-fn:urify(normalize-space(./CLFT)))" />
								</xsl:attribute>
							</arco-core:hasClassificationSystem>
						</xsl:if>
					</rdf:Description>
					<xsl:if test="./CLFS">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'PhotographicClass/', arco-fn:urify(normalize-space(./CLFS)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Concept'" />
								</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="normalize-space(./CLFS)" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./CLFS)" />
							</rdfs:label>
							<xsl:if test="./CLFT">
								<arco-core:isDefinedBy>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'ClassificationSystem/', arco-fn:urify(normalize-space(./CLFT)))" />
									</xsl:attribute>
								</arco-core:isDefinedBy>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./CLFT">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
									<xsl:value-of
								select="concat($NS, 'ClassificationSystem/', arco-fn:urify(normalize-space(./CLFT)))" />
								</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/ClassificationSystem'" />
								</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="normalize-space(./CLFT)" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./CLFT)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- cultural property classification based on inventory -->
			<xsl:if test="record/metadata/schede/*/OG/OGT/OGTS and not($sheetType='NU' or $sheetType='VeAC' or $sheetType='F' or $sheetType='BNB')">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'ReferenceCatalogue/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTS)))" />
						</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ReferenceCatalogue'" />
							</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTS)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTS)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/MODI/OG/OGS">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ReferenceCatalogue/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGS)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ReferenceCatalogue'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGS)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGS)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- numismatic property category -->
			<xsl:if test="record/metadata/schede/NU/OG/OGT/OGTT">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'ReferenceCatalogue/', arco-fn:urify(normalize-space(record/metadata/schede/NU/OG/OGT/OGTT)))" />
						</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ReferenceCatalogue'" />
							</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTT)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTT)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- copyright -->
			<xsl:for-each select="record/metadata/schede/*/TU/CPR">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Copyright/', $itemURI, '-copyright-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Copyright'" />
						</xsl:attribute>
					</rdf:type>
					<xsl:choose>
						<xsl:when test="lower-case(normalize-space(./CPRD))='scaduti' or lower-case(normalize-space(./CPRD))='diritti scaduti' or lower-case(normalize-space(./CPRD))='in pubblico dominio'">
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Copyright ', position(), ' of cultural property ', $itemURI, ': expired')" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Diritti d''autore ', position(), ' del bene culturale ', $itemURI, ': scaduti')" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Copyright ', position(), ' of cultural property ', $itemURI, ': expired')" />
							</l0:name>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Diritti d''autore ', position(), ' del bene culturale ', $itemURI, ': scaduti')" />
							</l0:name>
						</xsl:when>
						<xsl:otherwise>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Copyright ', position(), ' of cultural property ', $itemURI)" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Diritti d''autore ', position(), ' del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Copyright ', position(), ' of cultural property ', $itemURI)" />
							</l0:name>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Diritti d''autore ', position(), ' del bene culturale ', $itemURI)" />
							</l0:name>
						</xsl:otherwise>
					</xsl:choose>
					<xsl:if test="./CPRD">
						<xsl:choose>
							<xsl:when test="lower-case(normalize-space(./CPRD))='scaduti' or lower-case(normalize-space(./CPRD))='diritti scaduti' or lower-case(normalize-space(./CPRD))='in pubblico dominio'">
								<arco-cd:expired>
									<xsl:value-of select="true()" />
								</arco-cd:expired>
							</xsl:when>
							<xsl:otherwise>
								<arco-cd:expiryDate>
									<xsl:value-of select="normalize-space(./CPRD)" />
								</arco-cd:expiryDate>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:if>
					<xsl:if test="./CPRS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./CPRS)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./CPRN">
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, position(), '-rights-holder')" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:if>
				</rdf:Description>
				<xsl:if test="./CPRN">
					<!-- agent role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, position(), '-rights-holder')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Detentore dei diritti sul bene culturale ', $itemURI, ': ', normalize-space(./CPRN))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Rights holder on cultural property ', $itemURI, ': ', normalize-space(./CPRN))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Detentore dei diritti sul bene culturale ', $itemURI, ': ', normalize-space(./CPRN))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Rights holder on cultural property ', $itemURI, ': ', normalize-space(./CPRN))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/RightsHolder')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CPRN))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/RightsHolder')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Detentore dei diritti'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Rights Holder'" />
						</rdfs:label>
						<arco-core:isRoleOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CPRN))" />
							</xsl:attribute>
						</arco-core:isRoleOf>
					</rdf:Description>
					<!-- agent as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CPRN))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/italia/onto/l0/Agent" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./CPRN)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./CPRN)" />
						</l0:name>
						<xsl:if test="./CPRI">
							<arco-cd:address>
								<xsl:value-of select="normalize-space(./CPRI)" />
							</arco-cd:address>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- coin issuance (NU) -->
			<xsl:for-each select="record/metadata/schede/*/DA/AUE">
				<xsl:variable name="issuancePosition">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'CoinIssuance/', $itemURI, '-issuance-', position())" />
						</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
	            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CoinIssuance'" />
	            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Coin issuance ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Coin issuance ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Emissione di moneta ', position(), ' del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Emissione di moneta ', position(), ' del bene culturale ', $itemURI)" />
					</l0:name>
					<!-- has committent -->
					<xsl:for-each select="./AUEE">
						<xsl:if test="(not(starts-with(lower-case(normalize-space(./AUEE)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUEE)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of
									select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-committent-', position())" />
                        		</xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasCommittent>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                        		</xsl:attribute>
							</arco-lite:hasCommittent>
						</xsl:if>
					</xsl:for-each>
					<!-- has minter -->
					<xsl:for-each select="./AUEZ">
						<xsl:if test="(not(starts-with(lower-case(normalize-space(./AUEZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUEZ)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-minter-', position())" />
                        		</xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasMinter>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                        		</xsl:attribute>
							</arco-lite:hasMinter>
						</xsl:if>
					</xsl:for-each>
					<!-- has mint -->
					<xsl:for-each select="../ZEC[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-mint-', position())" />
                       		</xsl:attribute>
						</arco-core:hasAgentRole>
						<arco-lite:hasMint>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                       		</xsl:attribute>
						</arco-lite:hasMint>
					</xsl:for-each>
					<!-- has issuing State -->
					<xsl:for-each select="./AUES">
						<xsl:if test="(not(starts-with(lower-case(normalize-space(./AUES)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUES)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-issuer-', position())" />
                        		</xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasIssuer>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                        		</xsl:attribute>
							</arco-lite:hasIssuer>
						</xsl:if>
					</xsl:for-each>
				</rdf:Description>
				<!-- issuer as individual -->
				<xsl:if test="./AUEE and (not(starts-with(lower-case(normalize-space(./AUEE)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUEE)), 'n.r')))">
					<xsl:for-each select="./AUEE">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of
								select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-committent-', position())" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of
									select="concat('Committente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of
									select="concat('Committent ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of
									select="concat('Committente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of
									select="concat('Committent ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="concat($NS, 'Role/Committent')" />
		                        </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                        </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of
								select="concat($NS, 'Role/Committent')" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of
									select="'https://w3id.org/italia/onto/RO/Role'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of
									select="'Committente'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Committent'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
				</xsl:if>
				<!-- minter as individual -->
				<xsl:if
					test="./AUEZ and (not(starts-with(lower-case(normalize-space(./AUEZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUEZ)), 'n.r')))">
					<xsl:for-each select="./AUEZ">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-minter-', position())" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Zecchiere ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Minter ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Zecchiere ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Minter ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Role/Minter')" />
		                        </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                        </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Role/Minter')" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Zecchiere'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Minter'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
				</xsl:if>
				<!-- mint as individual -->
				<xsl:for-each select="../ZEC[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-mint-', position())" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Zecca ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Mint ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Zecca ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Mint ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Role/Mint')" />
	                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Role/Mint')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Zecca'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Mint'" />
						</rdfs:label>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<!-- issuer as individual -->
				<xsl:if
					test="./AUES and (not(starts-with(lower-case(normalize-space(./AUES)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUES)), 'n.r')))">
					<xsl:for-each select="./AUES">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-issuer-', position())" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Soggetto emittente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Issuer ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Soggetto emittente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Issuer ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Role/Issur')" />
		                        </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                        </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Role/Issuer')" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Soggetto emittente'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Issuer'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
				</xsl:if>
			</xsl:for-each>
			<!-- coin issuance (OA) -->
			<xsl:if test="$sheetType='OA'">
			<xsl:for-each select="record/metadata/schede/*/AU/EDT">
				<xsl:variable name="issuancePosition">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CoinIssuance/', $itemURI, '-issuance-', position())" />
						</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
	            			<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CoinIssuance'" />
	            		</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Coin issuance ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Coin issuance ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Emissione di moneta ', position(), ' del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Emissione di moneta ', position(), ' del bene culturale ', $itemURI)" />
					</l0:name>
					<!-- has committent -->
					<xsl:for-each select="./EDTN[not(starts-with(lower-case(normalize-space(.)), 'nr') or starts-with(lower-case(normalize-space(.)), 'n.r'))]">
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-committent-', position())" />
                       		</xsl:attribute>
						</arco-core:hasAgentRole>
						<arco-cd:hasCommittent>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                       		</xsl:attribute>
						</arco-cd:hasCommittent>
					</xsl:for-each>
					<!-- has issuer -->
					<xsl:for-each select="./EDTA[not(starts-with(lower-case(normalize-space(.)), 'nr') or starts-with(lower-case(normalize-space(.)), 'n.r'))]">
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-issuer-', position())" />
                       		</xsl:attribute>
						</arco-core:hasAgentRole>
						<arco-cd:hasIssuer>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                       		</xsl:attribute>
						</arco-cd:hasIssuer>
					</xsl:for-each>
					<!-- has mint -->
					<xsl:for-each select="./EDTZ[not(starts-with(lower-case(normalize-space(.)), 'nr') or starts-with(lower-case(normalize-space(.)), 'n.r'))]">
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-mint-', position())" />
                       		</xsl:attribute>
						</arco-core:hasAgentRole>
						<arco-cd:hasMint>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                       		</xsl:attribute>
						</arco-cd:hasMint>
					</xsl:for-each>
				</rdf:Description>
				<!-- issuer as individual -->
				<xsl:for-each select="./EDTN[not(starts-with(lower-case(normalize-space(.)), 'nr') or starts-with(lower-case(normalize-space(.)), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-committent-', position())" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Committente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Committent ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Committente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Committent ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Role/Committent')" />
	                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of
								select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of
							select="concat($NS, 'Role/Committent')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Committente'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Committent'" />
						</rdfs:label>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<!-- mint as individual -->
				<xsl:for-each select="./EDTZ[not(starts-with(lower-case(normalize-space(.)), 'nr') or starts-with(lower-case(normalize-space(.)), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-mint-', position())" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Zecca ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Mint ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Zecca ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Mint ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Role/Mint')" />
	                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Role/Mint')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Zecca'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Mint'" />
						</rdfs:label>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<!-- minter as individual -->
				<xsl:for-each select="./EDTA[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-issuance-', $issuancePosition, '-issuer-', position())" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Soggetto emittente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Issuer ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Soggetto emittente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Issuer ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Role/IssuingState')" />
	                        </xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                        </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Role/IssuingState')" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Soggetto emittente'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Issuer'" />
						</rdfs:label>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
			</xsl:for-each>
			</xsl:if>
			<!-- Use of cultural property -->
			<xsl:if test="not(record/metadata/schede/A/UT or record/metadata/schede/PG/UT)">
				<xsl:for-each select="record/metadata/schede/*/UT">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-use-', position())" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Use ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Use ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Uso ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Uso ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<xsl:if test="./UTU/UTUN">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./UTU/UTUN)" />
							</arco-core:note>
						</xsl:if>
						<xsl:for-each select="(./UTU/UTUD)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(.))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:for-each>
						<xsl:for-each select="(./UTS)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(.))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:for-each>
						<!-- 4.0 multiple UTU context lost eg:ICCD14096057 -->
						<xsl:for-each select="(./UTU/UTUF)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-cd:hasUseFunction>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(.))" />
								</xsl:attribute>
							</arco-cd:hasUseFunction>
						</xsl:for-each>
						<xsl:for-each select="(./UTF)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-cd:hasUseFunction>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(.))" />
								</xsl:attribute>
							</arco-cd:hasUseFunction>
						</xsl:for-each>
						<xsl:for-each select="(./UTU/UTUM|./UTM)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-cd:useConditions>
								<xsl:value-of select="normalize-space()"/>
							</arco-cd:useConditions>
						</xsl:for-each>
						<xsl:for-each select="./UTU/UTUT[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r') or .='.' or .='-' or .='/')]"><!-- allow multiple values eg:ICCD14298501 (context is lost) -->
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
	                                    <xsl:when test="lower-case(normalize-space())='attuale'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CurrentUse'" />
	                                    </xsl:when>
	                                    <xsl:when test="lower-case(normalize-space())='precedente'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PreviousUse'" />
	                                    </xsl:when>
	                                    <xsl:when test="lower-case(normalize-space())='storico'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/HistoricalUse'" />
	                                    </xsl:when>
	                                    <xsl:when test="lower-case(normalize-space())='dato non disponibile'">
	                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseTypeUnavailable'" />
	                                    </xsl:when>
	                                    <xsl:otherwise>
	                                        <xsl:value-of select="concat($NS, 'UseType/', arco-fn:urify(normalize-space()))" />
	                                    </xsl:otherwise>
									</xsl:choose>
	                			</xsl:attribute>
							</arco-core:hasType>
						</xsl:for-each>
						<xsl:if test="./UTU/UTUS and (not(starts-with(lower-case(normalize-space(./UTU/UTUS)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTU/UTUS)), 'n.r')))">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
	                				<xsl:if test="./UTU/UTUS and not(./UTU/UTUS='.' or ./UTU/UTUS='-' or ./UTU/UTUS='/')">
		                                <xsl:choose>
		                                    <xsl:when test="lower-case(normalize-space(./UTU/UTUS))='edilizio'">
		                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/BuildingUse'" />
		                                    </xsl:when>
		                                    <xsl:when test="lower-case(normalize-space(./UTU/UTUS))='epigrafico'">
		                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/EpigraphicUse'" />
		                                    </xsl:when>
		                                    <xsl:when test="lower-case(normalize-space(./UTU/UTUS))='strutturale'">
		                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/StructuralUse'" />
		                                    </xsl:when>
		                                    <xsl:when test="lower-case(normalize-space(./UTU/UTUS))='ornamentale'">
		                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/OrnamentalUse'" />
		                                    </xsl:when>
		                                    <xsl:when test="lower-case(normalize-space(./UTU/UTUS))='strumentale'">
		                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InstrumentalUse'" />
		                                    </xsl:when>
		                                    <xsl:when test="lower-case(normalize-space(./UTU/UTUS))='reimpiego'"></xsl:when>
		                                    <xsl:otherwise>
		                                        <xsl:value-of select="concat($NS, 'UseTypeSpecification/', arco-fn:urify(normalize-space(./UTU/UTUS)))" />
		                                    </xsl:otherwise>
		                                </xsl:choose>
                    				</xsl:if>
	                			</xsl:attribute>
							</arco-core:hasType>
						</xsl:if>
						<xsl:if test="(./UTU/UTUO|./UTO)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<arco-cd:hasCircumstance>
								<xsl:attribute name="rdf:resource">
	                				<xsl:choose>
	                					<xsl:when test="./UTU/UTUO"><!-- 4.0 multiple UTU context lost eg:ICCD14096057 -->
	                						<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(string-join(./UTU/UTUO[not(.=../preceding-sibling::UTU/UTUO)],'-'))))" />
	                					</xsl:when>
	                					<xsl:otherwise>
	                						<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./UTO)))" />
	                					</xsl:otherwise>
	                				</xsl:choose>
	                			</xsl:attribute>
							</arco-cd:hasCircumstance>
						</xsl:if>
						<xsl:for-each select="./UTN">
							<xsl:if test=".">
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, position(), '-user')" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:for-each>
						<xsl:if test="./UTL and (not(starts-with(lower-case(normalize-space(./UTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL)), 'n.r')))">
							<clvapit:hasSpatialCoverage>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
										<xsl:when test="./UTL/UTLS and not(lower-case(normalize-space(./UTL/UTLS))='italia')">
											<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(./UTL/UTLS)), normalize-space(lower-case(./UTL/UTLR)), normalize-space(lower-case(./UTL/UTLP)),  normalize-space(lower-case(./UTL/UTLC)),  normalize-space(lower-case(./UTL/UTLF)), normalize-space(lower-case(./UTL/UTLL)))))" />
										</xsl:when>
										<xsl:otherwise>
			            	   	             <xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(./UTL/UTLP)),  normalize-space(lower-case(./UTL/UTLC)),  normalize-space(lower-case(./UTL/UTLF)), normalize-space(lower-case(./UTL/UTLL)))))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</clvapit:hasSpatialCoverage>
						</xsl:if>
						<xsl:if test="./AGC and (not(starts-with(lower-case(normalize-space(./AGC)), 'nr')) and not(starts-with(lower-case(normalize-space(./AGC)), 'n.r')))">
							<clvapit:hasSpatialCoverage>
								<xsl:attribute name="rdf:resource">
	                				<xsl:value-of select="concat($NS, 'Feature/', arco-fn:urify(normalize-space(./AGC)))" />
	                			</xsl:attribute>
							</clvapit:hasSpatialCoverage>
						</xsl:if>
					</rdf:Description>
					<!-- agent role -->
					<xsl:for-each select="./UTN">
						<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, position(), '-user')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Utente ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('User ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Utente ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('User ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/User')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
		                		<xsl:choose>
					            	<xsl:when test="./UTNN">
					            		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./UTNN))" />
					            	</xsl:when>
					            	<xsl:otherwise>
					            		<xsl:value-of select="concat($NS, 'Agent/', $itemURI, '-user-', position())" />
					            	</xsl:otherwise>
			            		</xsl:choose>
		                	</xsl:attribute>
						</arco-core:hasAgent>
						</rdf:Description>
						<!-- role as an individual -->
						<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/User')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Utente'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'User'" />
						</rdfs:label>
						</rdf:Description>
						<!-- agent -->
						<xsl:if test=".">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
				            		<xsl:choose>
				            			<xsl:when test="./UTNN">
				            				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
				            			</xsl:when>
				            			<xsl:otherwise>
			        	    				<xsl:value-of select="concat($NS, 'Agent/', $itemURI, '-user-', position())" />
			            				</xsl:otherwise>
			            			</xsl:choose>	
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	                                	<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<xsl:choose>
									<xsl:when test="./UTNN">
										<rdfs:label>
											<xsl:value-of select="arco-fn:name-cleaner(./UTNN)" />
										</rdfs:label>
										<l0:name>
											<xsl:value-of select="arco-fn:name-cleaner(./UTNN)" />
										</l0:name>
									</xsl:when>
									<xsl:otherwise>
										<rdfs:label xml:lang="en">
											<xsl:value-of select="concat('User of cultural property ', $itemURI)" />
										</rdfs:label>
										<l0:name xml:lang="en">
											<xsl:value-of select="concat('User of cultural property ', $itemURI)" />
										</l0:name>
										<rdfs:label xml:lang="it">
											<xsl:value-of select="concat('Utente del bene culturale ', $itemURI)" />
										</rdfs:label>
										<l0:name xml:lang="it">
											<xsl:value-of select="concat('Utente del bene culturale ', $itemURI)" />
										</l0:name>
									</xsl:otherwise>
								</xsl:choose>
								<xsl:if test="./UTNA and (not(starts-with(lower-case(normalize-space(./UTNA)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTNA)), 'n.r')))">
									<arco-cd:agentDate>
										<xsl:value-of select="normalize-space(./UTNA)" />
									</arco-cd:agentDate>
								</xsl:if>
								<xsl:if test="./UTNM and (not(starts-with(lower-case(normalize-space(./UTNM)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTNM)), 'n.r')))">
									<arco-cd:hasProfession>
										<xsl:attribute name="rdf:resource">
		            						<xsl:value-of select="concat($NS, 'Profession/', arco-fn:urify(normalize-space(./UTNM)))" />
										</xsl:attribute>
									</arco-cd:hasProfession>
								</xsl:if>
								<xsl:if test="./UTNC and (not(starts-with(lower-case(normalize-space(./UTNC)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTNC)), 'n.r')))">
									<arco-cd:hasUserSocialCategory>
										<xsl:attribute name="rdf:resource">
		            						<xsl:value-of select="concat($NS, 'SocialCategory/', arco-fn:urify(normalize-space(./UTNC)))" />
										</xsl:attribute>
									</arco-cd:hasUserSocialCategory>
								</xsl:if>
							</rdf:Description>
						</xsl:if>
						<!-- profession of user as an individual -->
						<xsl:if test="./UTNM and (not(starts-with(lower-case(normalize-space(./UTNM)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTNM)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	            					<xsl:value-of select="concat($NS, 'Profession/', arco-fn:urify(normalize-space(./UTNM)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	            						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Profession'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./UTNM)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./UTNM)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<!-- social category of user as an individual -->
						<xsl:if test="./UTNC and (not(starts-with(lower-case(normalize-space(./UTNC)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTNC)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	            					<xsl:value-of select="concat($NS, 'UserSocialCategory/', arco-fn:urify(normalize-space(./UTNC)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	            						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UserSocialCategory'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./UTNC)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./UTNC)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
					<!-- time interval as an individual -->
					<xsl:for-each select="(./UTU/UTUD)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
						    	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(.))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
		        				</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
							<tiapit:statTime>
								<xsl:value-of select="normalize-space(.)" />
							</tiapit:statTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(.)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:for-each>
					<xsl:for-each select="(./UTS)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
						    	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(.))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
		        				</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
							<tiapit:statTime>
								<xsl:value-of select="normalize-space(.)" />
							</tiapit:statTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(.)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:for-each>
					<!-- usefunction as an individual -->
					<xsl:for-each select="(./UTU/UTUF)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
						    	<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(.))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseFunction'" />
		        				</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
					<xsl:for-each select="(./UTF)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
						    	<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(.))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseFunction'" />
		        				</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
					<!-- use type as an individual -->
					<xsl:for-each select="./UTU/UTUT[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r') or .='.' or .='-' or .='/')]"><!-- allow multiple values eg:ICCD14298501 (context is lost) -->
						<xsl:choose>
							<xsl:when test="lower-case(normalize-space())='attuale'" />
							<xsl:when test="lower-case(normalize-space())='precedente'" />
							<xsl:when test="lower-case(normalize-space())='storico'" />
							<xsl:when test="lower-case(normalize-space())='dato non disponibile'" />
							<xsl:otherwise>
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'UseType/', arco-fn:urify(normalize-space()))" />
									</xsl:attribute>
									<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/UseType" />
									<rdfs:label>
										<xsl:value-of select="normalize-space()" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space()" />
									</l0:name>
								</rdf:Description>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:for-each>
					<!-- use type as an individual -->
					<xsl:if test="./UTU/UTUS and (not(starts-with(lower-case(normalize-space(./UTU/UTUS)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTU/UTUS)), 'n.r')))">
						<xsl:choose>
							<xsl:when test="lower-case(normalize-space(./UTU/UTUS))='strumentale'" />
							<xsl:when test="lower-case(normalize-space(./UTU/UTUS))='strutturale'" />
							<xsl:when test="lower-case(normalize-space(./UTU/UTUS))='edilizio'" />
							<xsl:when test="lower-case(normalize-space(./UTU/UTUS))='ornamentale'" />
							<xsl:when test="lower-case(normalize-space(./UTU/UTUS))='epigrafico'" />
							<xsl:when test="lower-case(normalize-space(./UTU/UTUS))='reimpiego'" />
							<xsl:when test="../UTU/UTUS and not(./UTU/UTUS='.' or ./UTU/UTUS='-' or ./UTU/UTUS='/')">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                    	<xsl:value-of select="concat($NS, 'UseType/', arco-fn:urify(normalize-space(./UTU/UTUS)))" />
									</xsl:attribute>
									<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/UseType" />
									<rdfs:label>
										<xsl:value-of select="normalize-space(./UTU/UTUS)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./UTU/UTUS)" />
									</l0:name>
								</rdf:Description>
							</xsl:when>
						</xsl:choose>
					</xsl:if>
					<!-- use circumstance as an individual -->
					<xsl:if test="(./UTU/UTUO|./UTO)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                             <xsl:choose>
	                			<xsl:when test="./UTU/UTUO"><!-- 4.0 multiple UTU context lost eg:ICCD14096057 -->
	                				<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(string-join(./UTU/UTUO[not(.=../preceding-sibling::UTU/UTUO)],'-'))))" />
	                			</xsl:when>
	                			<xsl:otherwise>
	                				<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./UTO)))" />
	                			</xsl:otherwise>
	                		</xsl:choose>
                           </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Circumstance'" />
							</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:choose>
									<xsl:when test="./UTU/UTUO">
										<xsl:value-of select="normalize-space(string-join(./UTU/UTUO[not(.=../preceding-sibling::UTU/UTUO)],'; '))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="normalize-space(./UTO)" />
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name>
								<xsl:choose>
									<xsl:when test="./UTU/UTUO">
										<xsl:value-of select="normalize-space(string-join(./UTU/UTUO[not(.=../preceding-sibling::UTU/UTUO)],'; '))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="normalize-space(./UTO)" />
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- use location AGC as an individual -->
					<xsl:if test="./AGC and (not(starts-with(lower-case(normalize-space(./AGC)), 'nr')) and not(starts-with(lower-case(normalize-space(./AGC)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                		<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(normalize-space(./AGC)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./AGC)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./AGC)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- use location UTL as an individual -->
					<xsl:if test="./UTL and (not(starts-with(lower-case(normalize-space(./UTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                		<xsl:choose>
									<xsl:when test="./UTL/UTLS and not(lower-case(normalize-space(./UTL/UTLS))='italia')">
										<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(./UTL/UTLS)), normalize-space(lower-case(./UTL/UTLR)), normalize-space(lower-case(./UTL/UTLP)),  normalize-space(lower-case(./UTL/UTLC)),  normalize-space(lower-case(./UTL/UTLF)), normalize-space(lower-case(./UTL/UTLL)))))" />
									</xsl:when>
									<xsl:otherwise>
			               	             <xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(./UTL/UTLP)),  normalize-space(lower-case(./UTL/UTLC)),  normalize-space(lower-case(./UTL/UTLF)), normalize-space(lower-case(./UTL/UTLL)))))" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./UTL)" />
							</rdfs:label>
							<clvapit:hasAddress>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
										<xsl:when test="./UTL/UTLS and not(lower-case(normalize-space(./UTL/UTLS))='italia')">
											<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./UTL/UTLS)), normalize-space(lower-case(./UTL/UTLR)), normalize-space(lower-case(./UTL/UTLP)),  normalize-space(lower-case(./UTL/UTLC)),  normalize-space(lower-case(./UTL/UTLF)), normalize-space(lower-case(./UTL/UTLL)))))" />
										</xsl:when>
										<xsl:otherwise>
			            	   	             <xsl:value-of select="concat($NS, 'Adress/', arco-fn:arcofy(concat(normalize-space(lower-case(./UTL/UTLP)),  normalize-space(lower-case(./UTL/UTLC)),  normalize-space(lower-case(./UTL/UTLF)), normalize-space(lower-case(./UTL/UTLL)))))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</clvapit:hasAddress>
						</rdf:Description>
						<!-- address of use location as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                		<xsl:choose>
										<xsl:when test="./UTL/UTLS and not(lower-case(normalize-space(./UTL/UTLS))='italia')">
											<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./UTL/UTLS)), normalize-space(lower-case(./UTL/UTLR)), normalize-space(lower-case(./UTL/UTLP)),  normalize-space(lower-case(./UTL/UTLC)),  normalize-space(lower-case(./UTL/UTLF)), normalize-space(lower-case(./UTL/UTLL)))))" />
										</xsl:when>
										<xsl:otherwise>
			            	   	             <xsl:value-of select="concat($NS, 'Adress/', arco-fn:arcofy(concat(normalize-space(lower-case(./UTL/UTLP)),  normalize-space(lower-case(./UTL/UTLC)),  normalize-space(lower-case(./UTL/UTLF)), normalize-space(lower-case(./UTL/UTLL)))))" />
										</xsl:otherwise>
									</xsl:choose>
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:for-each select="./UTL/*">
									<xsl:choose>
										<xsl:when test="position() = 1">
											<xsl:value-of select="./text()" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat(', ', ./text())" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:for-each>
							</rdfs:label>
							<l0:name>
								<xsl:for-each select="./UTL/*">
									<xsl:choose>
										<xsl:when test="position() = 1">
											<xsl:value-of select="./text()" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat(', ', ./text())" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:for-each>
							</l0:name>
							<xsl:if test="./UTL/UTLL and (not(starts-with(lower-case(normalize-space(./UTL/UTLL)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLL)), 'n.r')))">
								<clvapit:hasAddressArea>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(normalize-space(./UTL/UTLL)))" />
									</xsl:attribute>
								</clvapit:hasAddressArea>
							</xsl:if>
							<xsl:if test="./UTL/UTLF and (not(starts-with(lower-case(normalize-space(./UTL/UTLF)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLF)), 'n.r')))">
								<clvapit:hasAddressArea>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(normalize-space(./UTL/UTLF)))" />
									</xsl:attribute>
								</clvapit:hasAddressArea>
							</xsl:if>
							<xsl:if test="./UTL/UTLS and (not(starts-with(lower-case(normalize-space(./UTL/UTLS)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLS)), 'n.r')))">
								<clvapit:hasCountry>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(normalize-space(./UTL/UTLS)))" />
									</xsl:attribute>
								</clvapit:hasCountry>
							</xsl:if>
							<xsl:if test="./UTL/UTLR and (not(starts-with(lower-case(normalize-space(./UTL/UTLR)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLR)), 'n.r')))">
								<xsl:choose>
									<xsl:when test="./UTL/UTLC and (starts-with(lower-case(normalize-space(./UTL/UTLC)), 'firenze') or starts-with(lower-case(normalize-space(./UTL/UTLC)), 'siena') or starts-with(lower-case(normalize-space(./UTL/UTLC)), 'san severino marche') or starts-with(lower-case(normalize-space(./UTL/UTLC)), 'modena'))">	
										<xsl:choose>
											<xsl:when test="./UTL/UTLR and (starts-with(lower-case(normalize-space(./UTL/UTLR)), 'lombardia'))">
											</xsl:when>
											<xsl:otherwise>
												<clvapit:hasRegion>
													<xsl:attribute name="rdf:resource">
            	            			                 <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./UTL/UTLR))" />
		                        	    		    </xsl:attribute>
												</clvapit:hasRegion>
											</xsl:otherwise>
										</xsl:choose>					
									</xsl:when>
									<xsl:otherwise>
										<clvapit:hasRegion>
											<xsl:attribute name="rdf:resource">
        	            			            <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./UTL/UTLR))" />
            	            			    </xsl:attribute>
										</clvapit:hasRegion>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:if>
							<xsl:if test="./UTL/UTLP and (not(starts-with(lower-case(normalize-space(./UTL/UTLP)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLP)), 'n.r')))">
								<clvapit:hasProvince>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(normalize-space(./UTL/UTLP)))" />
									</xsl:attribute>
								</clvapit:hasProvince>
							</xsl:if>
							<xsl:if test="./UTL/UTLC and (not(starts-with(lower-case(normalize-space(./UTL/UTLC)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLC)), 'n.r')))">
								<clvapit:hasCity>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'City/', arco-fn:urify(normalize-space(./UTL/UTLC)))" />
									</xsl:attribute>
								</clvapit:hasCity>
							</xsl:if>
						</rdf:Description>
						<xsl:if test="./UTL/UTLL and (not(starts-with(lower-case(normalize-space(./UTL/UTLL)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLL)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                            		<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(normalize-space(./UTL/UTLL)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                		<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLL)" />
									</xsl:call-template>
								</rdfs:label>
								<l0:name>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLL)" />
									</xsl:call-template>
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<xsl:if test="./UTL/UTLF and (not(starts-with(lower-case(normalize-space(./UTL/UTLF)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLF)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                            		<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(normalize-space(./UTL/UTLF)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLF)" />
									</xsl:call-template>
								</rdfs:label>
								<l0:name>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLF)" />
									</xsl:call-template>
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<xsl:if test="./UTL/UTLS and (not(starts-with(lower-case(normalize-space(./UTL/UTLS)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLS)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                            		<xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(normalize-space(./UTL/UTLS)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	                                	<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Country'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLS)" />
									</xsl:call-template>
								</rdfs:label>
								<l0:name>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLS)" />
									</xsl:call-template>
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<xsl:if test="./UTL/UTLR and (not(starts-with(lower-case(normalize-space(./UTL/UTLR)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLR)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                            		<xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(normalize-space(./UTL/UTLR)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	                                	<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Region'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLR)" />
									</xsl:call-template>
								</rdfs:label>
								<l0:name>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLR)" />
									</xsl:call-template>
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<xsl:if test="./UTL/UTLP and (not(starts-with(lower-case(normalize-space(./UTL/UTLP)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLP)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                            		<xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(normalize-space(./UTL/UTLP)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Province'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLP)" />
									</xsl:call-template>
								</rdfs:label>
								<l0:name>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLP)" />
									</xsl:call-template>
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<xsl:if test="./UTL/UTLC and (not(starts-with(lower-case(normalize-space(./UTL/UTLC)), 'nr')) and not(starts-with(lower-case(normalize-space(./UTL/UTLC)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                            		<xsl:value-of select="concat($NS, 'City/', arco-fn:urify(normalize-space(./UTL/UTLC)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/CLV/City'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLC)" />
									</xsl:call-template>
								</rdfs:label>
								<l0:name>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./UTL/UTLC)" />
									</xsl:call-template>
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
					<!-- address of location of use as an individual -->
				</xsl:for-each>
			</xsl:if>
			<!-- Use of cultural property -->
			<xsl:if test="record/metadata/schede/*/DA/UTF or record/metadata/schede/*/DA/UTM or record/metadata/schede/*/DA/UTS">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
           				<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-use-', position())" />
           			</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
           					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Use ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Use ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Uso ', position(), ' del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Uso ', position(), ' del bene culturale ', $itemURI)" />
					</l0:name>
					<xsl:for-each select="(record/metadata/schede/*/DA/UTS)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
	        					<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(.))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:for-each>
					<xsl:if test="record/metadata/schede/*/DA/UTF">
						<arco-core:description>
							<xsl:value-of select="record/metadata/schede/*/DA/UTF" />
						</arco-core:description>
					</xsl:if>
					<xsl:for-each select="(record/metadata/schede/*/DA/UTM)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-cd:useConditions>
							<xsl:value-of select="normalize-space()"/>
						</arco-cd:useConditions>
					</xsl:for-each>
				</rdf:Description>
				<xsl:for-each select="(record/metadata/schede/*/DA/UTS)[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
					    	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
		        				<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
		        			</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
						<tiapit:statTime>
							<xsl:value-of select="normalize-space(.)" />
						</tiapit:statTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(.)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:for-each>

			</xsl:if>
			<!-- A and PG - Use of cultural property -->
			<!-- USO -->
			<xsl:for-each select="record/metadata/schede/*/US/USO">
				<xsl:if test="./*">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-historical-use-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Historical use ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Historical use ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Uso storico ', position(), ' del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Uso storico ', position(), ' del bene culturale ', $itemURI)" />
					</l0:name>
					<xsl:for-each select="./USOD[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]"> <!-- allow multiple values eg:ICCD14295730  -->
						<arco-cd:hasUseFunction>
							<xsl:attribute name="rdf:resource">
		        				<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(.))" />
							</xsl:attribute>
						</arco-cd:hasUseFunction>
					</xsl:for-each>
					<xsl:for-each select="./USOC [not(starts-with(lower-case(normalize-space(./USOC)), 'nr')) and not(starts-with(lower-case(normalize-space(./USOC)), 'n.r')) ]">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
		        				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(.))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:for-each>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/HistoricalUse'" />
						</xsl:attribute>
					</arco-core:hasType>
				</rdf:Description>
				<!-- usefunction as an individual -->
				<xsl:for-each select="./USOD[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]"> <!-- allow multiple values eg:ICCD14295730  -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
					    	<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
		        				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseFunction'" />
		        			</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<!-- time interval as an individual -->
				<xsl:for-each select="./USOC [not(starts-with(lower-case(normalize-space(./USOC)), 'nr')) and not(starts-with(lower-case(normalize-space(./USOC)), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
					    	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
		       					<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
		       				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
						<tiapit:statTime>
							<xsl:value-of select="normalize-space(.)" />
						</tiapit:statTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(.)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:for-each>
				<!-- part as an individual -->
				<xsl:if test="./USOR and not(./USOR='intero bene' or ./USOR='integrale' or ./USOR='tutta' or ./USOR='totale' or (starts-with(lower-case(normalize-space(./USOR)), 'nr')) or (starts-with(lower-case(normalize-space(./USOR)), 'n.r')) or (starts-with(lower-case(normalize-space(./USOR)), 'intero')) or (starts-with(lower-case(normalize-space(./USOR)), 'intera')) or (starts-with(lower-case(normalize-space(./USOR)), 'esemplar')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'CulturalPropertyPart/', $itemURI, '-part-', arco-fn:urify(normalize-space(./USOR)))" />
						</xsl:attribute>
						<rdf:type rdf:resource="http://dati.beniculturali.it/cis/CulturalEntity" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./USOR)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./USOR)" />
						</l0:name>
						<arco-cd:hasUse>
							<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-historical-use-', position())" />
 	                		</xsl:attribute>
						</arco-cd:hasUse>
						<xsl:for-each select="./USOD[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]"> <!-- allow multiple values eg:ICCD14295730  -->
							<arco-lite:hasCulturalEntityUseFunction>
								<xsl:attribute name="rdf:resource">
		        					<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(.))" />
								</xsl:attribute>
							</arco-lite:hasCulturalEntityUseFunction>
						</xsl:for-each>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			</xsl:for-each>
			<!-- USA -->
			<xsl:for-each select="record/metadata/schede/*/US/USA">
				<xsl:if test="./*">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
           					<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-current-use-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
           						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
	            			</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Current use ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Current use ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Uso attuale ', position(), ' del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Uso attuale ', position(), ' del bene culturale ', $itemURI)" />
						</l0:name>
						<xsl:if test="./USAD and (not(starts-with(lower-case(normalize-space(./USAD)), 'nr')) and not(starts-with(lower-case(normalize-space(./USAD)), 'n.r')))">
							<arco-cd:hasUseFunction>
								<xsl:attribute name="rdf:resource">
			        				<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(./USAD))" />
								</xsl:attribute>
							</arco-cd:hasUseFunction>
						</xsl:if>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
	                		       <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CurrentUse'" />
							</xsl:attribute>
						</arco-core:hasType>
					</rdf:Description>
				</xsl:if>
				<!-- usefunction as an individual -->
				<xsl:if test="./USAD and (not(starts-with(lower-case(normalize-space(./USAD)), 'nr')) and not(starts-with(lower-case(normalize-space(./USAD)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
					    	<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(./USAD))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
		        				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseFunction'" />
		        			</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./USAD)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./USAD)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="./USAR and not(./USAR='intero bene' or ./USAR='integrale' or ./USAR='tutta' or ./USAR='totale' or (starts-with(lower-case(normalize-space(./USAR)), 'nr')) or (starts-with(lower-case(normalize-space(./USAR)), 'n.r')) or (starts-with(lower-case(normalize-space(./USAR)), 'intero')) or (starts-with(lower-case(normalize-space(./USAR)), 'intera')) or (starts-with(lower-case(normalize-space(./USAR)), 'esemplar')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'CulturalPropertyPart/', $itemURI, '-part-', arco-fn:urify(normalize-space(./USAR)))" />
						</xsl:attribute>
						<rdf:type rdf:resource="http://dati.beniculturali.it/cis/CulturalEntity" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./USAR)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./USAR)" />
						</l0:name>
						<arco-cd:hasUse>
							<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-current-use-', position())" />
 	                		</xsl:attribute>
						</arco-cd:hasUse>
						<xsl:if test="./USAD and (not(starts-with(lower-case(normalize-space(./USAD)), 'nr')) and not(starts-with(lower-case(normalize-space(./USAD)), 'n.r')))">
							<arco-cd:hasUseFunction>
								<xsl:attribute name="rdf:resource">
			        				<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(./USAD))" />
								</xsl:attribute>
							</arco-cd:hasUseFunction>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- obverse of coin -->
			<xsl:if test="record/metadata/schede/NU/DA/DES/DESA or record/metadata/schede/NU/DA/DES/DESL or record/metadata/schede/NU/DA/DES/DESN or record/metadata/schede/NU/DA/DES/DESF">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CulturalPropertyPart/', $itemURI, '-obverse')" />
					</xsl:attribute>
					<rdf:type rdf:resource="http://dati.beniculturali.it/cis/CulturalEntity" />
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Dritto del bene numismatico ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Dritto del bene numismatico ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Obverse of numismatic property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Obverse of numismatic property ', $itemURI)" />
					</l0:name>
					<xsl:if test="record/metadata/schede/NU/DA/DES/DESA">
						<arco-dd:hasAffixedElement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'CoinDesign/', $itemURI, '-obverse-design')" />
							</xsl:attribute>
						</arco-dd:hasAffixedElement>
					</xsl:if>
					<xsl:if test="record/metadata/schede/NU/DA/DES/DESN or record/metadata/schede/NU/DA/DES/DESF or record/metadata/schede/NU/DA/DES/DESL">
						<arco-dd:hasAffixedElement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'CoinLegend/', $itemURI, '-obverse-legend')" />
							</xsl:attribute>
						</arco-dd:hasAffixedElement>
					</xsl:if>
				</rdf:Description>
			</xsl:if>
			<!-- coin design -->
			<xsl:if test="record/metadata/schede/NU/DA/DES/DESA">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CoinDesign/', $itemURI, '-obverse-design')" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElement" />
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CoinDesign'" />
						</xsl:attribute>
					</arco-core:hasType>
					<arco-core:description>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/DA/DES/DESA)" />
					</arco-core:description>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Raffigurazione presente sul dritto del bene numismatico ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Raffigurazione presente sul dritto del bene numismatico ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Design on obverse of numismatic property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Design on obverse of numismatic property ', $itemURI)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- coin legend -->
			<xsl:if test="record/metadata/schede/NU/DA/DES/DESN or record/metadata/schede/NU/DA/DES/DESF or record/metadata/schede/NU/DA/DES/DESL">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CoinLegend/', $itemURI, '-obverse-legend')" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElement" />
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CoinLegend'" />
						</xsl:attribute>
					</arco-core:hasType>
					<xsl:if test="record/metadata/schede/NU/DA/DES/DESL">
						<arco-dd:transcript>
							<xsl:value-of select="normalize-space(record/metadata/schede/NU/DA/DES/DESL)" />
						</arco-dd:transcript>
					</xsl:if>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Legenda presente sul dritto del bene numismatico ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Legenda presente sul dritto del bene numismatico ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Legend on obverse of numismatic property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Legend on obverse of numismatic property ', $itemURI)" />
					</l0:name>
					<xsl:for-each select="record/metadata/schede/NU/DA/DES/DESF[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-dd:hasWritingSystem>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'WritingSystem/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
						</arco-dd:hasWritingSystem>
					</xsl:for-each>
					<xsl:for-each select="record/metadata/schede/NU/DA/DES/DESN[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]"><!-- allow mutiple values eg:ICCD4689511 -->
						<language:hasLanguage>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Language/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
						</language:hasLanguage>
					</xsl:for-each>
				</rdf:Description>
				<xsl:for-each select="record/metadata/schede/NU/DA/DES/DESF[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'WritingSystem/', arco-fn:urify(normalize-space()))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/WritingSystem" />
						<rdfs:label>
							<xsl:value-of select="normalize-space()" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space()" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<xsl:for-each select="record/metadata/schede/NU/DA/DES/DESN[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Language/', arco-fn:urify(normalize-space()))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/italia/onto/Language/Language" />
						<rdfs:label>
							<xsl:value-of select="normalize-space()" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space()" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<!-- reverse of coin -->
			<xsl:if test="record/metadata/schede/NU/DA/DES/DESM or record/metadata/schede/NU/DA/DES/DESG or record/metadata/schede/NU/DA/DES/DESR or record/metadata/schede/NU/DA/DES/DEST">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CulturalPropertyPart/', $itemURI, '-reverse')" />
					</xsl:attribute>
					<rdf:type rdf:resource="http://dati.beniculturali.it/cis/CulturalEntity" />
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Rovescio del bene numismatico ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Rovescio del bene numismatico ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Reverse of numismatic property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Reverse of numismatic property ', $itemURI)" />
					</l0:name>
					<xsl:if test="record/metadata/schede/NU/DA/DES/DESM">
						<arco-dd:hasAffixedElement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'CoinDesign/', $itemURI, '-reverse-design')" />
							</xsl:attribute>
						</arco-dd:hasAffixedElement>
					</xsl:if>
					<xsl:if test="record/metadata/schede/NU/DA/DES/DESG or record/metadata/schede/NU/DA/DES/DESR or record/metadata/schede/NU/DA/DES/DEST">
						<arco-dd:hasAffixedElement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'CoinLegend/', $itemURI, '-reverse-legend')" />
							</xsl:attribute>
						</arco-dd:hasAffixedElement>
					</xsl:if>
				</rdf:Description>
			</xsl:if>
			<!-- coin design -->
			<xsl:if test="record/metadata/schede/NU/DA/DES/DESM">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CoinDesign/', $itemURI, '-reverse-design')" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElement" />
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CoinDesign'" />
						</xsl:attribute>
					</arco-core:hasType>
					<arco-core:description>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/DA/DES/DESM)" />
					</arco-core:description>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Raffigurazione presente sul rovescio del bene numismatico ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Raffigurazione presente sul rovescio del bene numismatico ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Design on reverse of numismatic property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Design on reverse of numismatic property ', $itemURI)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- coin legend -->
			<xsl:if test="record/metadata/schede/NU/DA/DES/DESG or record/metadata/schede/NU/DA/DES/DESR or record/metadata/schede/NU/DA/DES/DEST">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CoinLegend/', $itemURI, '-reverse-legend')" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElement" />
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CoinDesign'" />
						</xsl:attribute>
					</arco-core:hasType>
					<xsl:if test="record/metadata/schede/NU/DA/DES/DESG">
						<arco-dd:transcript>
							<xsl:value-of select="normalize-space(record/metadata/schede/NU/DA/DES/DESG)" />
						</arco-dd:transcript>
					</xsl:if>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Legenda presente sul rovescio del bene numismatico ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Legenda presente sul rovescio del bene numismatico ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Legend on reverse of numismatic property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Legend on reverse of numismatic property ', $itemURI)" />
					</l0:name>
					<xsl:for-each select="record/metadata/schede/NU/DA/DES/DEST[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-dd:hasWritingSystem>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'WritingSystem/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
						</arco-dd:hasWritingSystem>
					</xsl:for-each>
					<xsl:for-each select="record/metadata/schede/NU/DA/DES/DESR[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<language:hasLanguage>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Language/', arco-fn:urify(normalize-space()))" />
							</xsl:attribute>
						</language:hasLanguage>
					</xsl:for-each>
				</rdf:Description>
				<xsl:for-each select="record/metadata/schede/NU/DA/DES/DEST[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'WritingSystem/', arco-fn:urify(normalize-space()))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/WritingSystem" />
						<rdfs:label>
							<xsl:value-of select="normalize-space()" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space()" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<xsl:for-each select="record/metadata/schede/NU/DA/DES/DESR[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Language/', arco-fn:urify(normalize-space()))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/italia/onto/Language/Language" />
						<rdfs:label>
							<xsl:value-of select="normalize-space()" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space()" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<!-- edge of coin -->
			<xsl:if test="record/metadata/schede/NU/DA/DES/DESV or record/metadata/schede/NU/DA/DES/DESO">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'CulturalPropertyPart/', $itemURI, '-edge')" />
					</xsl:attribute>
					<rdf:type rdf:resource="http://dati.beniculturali.it/cis/CulturalEntity" />
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Taglio del bene numismatico ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Taglio del bene numismatico ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Edge of numismatic property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Edge of numismatic property ', $itemURI)" />
					</l0:name>
					<arco-core:description>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/NU/DA/DES/DESV">
								<xsl:value-of select="record/metadata/schede/NU/DA/DES/DESV" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="record/metadata/schede/NU/DA/DES/DESO" />
							</xsl:otherwise>
						</xsl:choose>
					</arco-core:description>
				</rdf:Description>
			</xsl:if>
			<!-- TechnicalStatus as an individual (not VeAC)-->
			<xsl:if test="record/metadata/schede/*/MT/MTC/*">
			<xsl:for-each select="record/metadata/schede/*/MT/MTC">
				<xsl:if test="(not(./MTCP) or ./MTCP='intero bene' or ./MTCP='integrale' or ./MTCP='tutta' or ./MTCP='totale') or (starts-with(lower-case(normalize-space(./MTCP)), 'nr')) or (starts-with(lower-case(normalize-space(./MTCP)), 'n.r')) or (starts-with(lower-case(normalize-space(./MTCP)), 'intero')) or (starts-with(lower-case(normalize-space(./MTCP)), 'intera')) or (starts-with(lower-case(normalize-space(./MTCP)), 'esemplar'))">
				<xsl:if test="not($sheetType='VeAC')" >
					<rdf:Description>
						<xsl:attribute name="rdf:about">
           					<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI)" />
           				</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
							</xsl:attribute>
						</rdf:type>
						<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./MTCS">
							<arco-core:note>
								<xsl:value-of select="./MTCS" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="../MTS">
							<arco-core:specifications>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/MT/MTS)" />
							</arco-core:specifications>
						</xsl:if>
						<xsl:for-each select="./MTCM">
							<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr'))  and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
								<arco-dd:includesTechnicalCharacteristic>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-dd:includesTechnicalCharacteristic>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./MTCT">
							<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr'))  and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
								<arco-dd:includesTechnicalCharacteristic>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-dd:includesTechnicalCharacteristic>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./MTCI">
							<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr'))  and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
								<arco-dd:includesTechnicalCharacteristic>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-dd:includesTechnicalCharacteristic>
							</xsl:if>
						</xsl:for-each>
					</rdf:Description>
				</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- TechnicalStatus as an individual (VeAC)-->
			<xsl:for-each select="record/metadata/schede/*/MT/MTC">
				<xsl:if test="$sheetType='VeAC'" >
					<rdf:Description>
						<xsl:attribute name="rdf:about">
           					<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI)" />
           				</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
							</xsl:attribute>
						</rdf:type>
						<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
						</l0:name>
						<xsl:if test="./MTCS">
							<arco-core:note>
								<xsl:value-of select="./MTCS" />
							</arco-core:note>
						</xsl:if>
						<xsl:for-each select="./MTCF">
							<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr'))  and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
								<arco-dd:includesTechnicalCharacteristic>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-dd:includesTechnicalCharacteristic>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./MTCT">
							<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr'))  and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
								<arco-dd:includesTechnicalCharacteristic>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-dd:includesTechnicalCharacteristic>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./MTCC">
							<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr'))  and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
								<arco-dd:includesTechnicalCharacteristic>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-dd:includesTechnicalCharacteristic>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="./MTCA">
							<xsl:if test="not(starts-with(lower-case(normalize-space(.)), 'nr'))  and not(starts-with(lower-case(normalize-space(.)), 'n.r'))">
								<arco-dd:includesTechnicalCharacteristic>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-dd:includesTechnicalCharacteristic>
							</xsl:if>
						</xsl:for-each>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			
			<!-- Technical characteristic (material) as an individual -->
			<xsl:for-each select="record/metadata/schede/*/MT/MTC">
				<xsl:if test="not(starts-with(lower-case(normalize-space(./MTCM)), 'nr'))  and not(starts-with(lower-case(normalize-space(./MTCM)), 'n.r'))">
					<xsl:if test="./MTCM">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(./MTCM)))" />
		            		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./MTCM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./MTCM)" />
							</l0:name>
							<arco-dd:isCharacteristicClassifiedBy>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Material'" />
            					</xsl:attribute>
							</arco-dd:isCharacteristicClassifiedBy>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
				<xsl:if test="not(starts-with(lower-case(normalize-space(./MTCF)), 'nr'))  and not(starts-with(lower-case(normalize-space(./MTCF)), 'n.r'))">
					<xsl:if test="./MTCF">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(./MTCF)))" />
		            		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./MTCF)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./MTCF)" />
							</l0:name>
							<arco-dd:isCharacteristicClassifiedBy>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Material'" />
            					</xsl:attribute>
							</arco-dd:isCharacteristicClassifiedBy>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
							<!-- technique of cultural property as an individual -->
			<xsl:for-each select="record/metadata/schede/*/MT/MTC/MTCT[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]"><!-- allow multiple values es: ICCD13661286 -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
          				<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space()))" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space()" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space()" />
					</l0:name>
					<arco-dd:isCharacteristicClassifiedBy>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Technique'" />
						</xsl:attribute>
					</arco-dd:isCharacteristicClassifiedBy>
				</rdf:Description>
			</xsl:for-each>
					<!-- materialOrTechnique of cultural property (OAC) as an individual -->
			<xsl:for-each select="record/metadata/schede/*/MT/MTC/MTCI[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]"><!-- allow multiple values es: ICCD11324966 -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
          					<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space()))" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space()" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space()" />
					</l0:name>
					<arco-dd:isCharacteristicClassifiedBy>
						<xsl:attribute name="rdf:resource">
          						<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MaterialOrTechnique'" />
          					</xsl:attribute>
					</arco-dd:isCharacteristicClassifiedBy>
				</rdf:Description>
			</xsl:for-each>
			
							<!-- garment colour (VeAC) as an individual -->
			<xsl:for-each select="record/metadata/schede/*/MT/MTC">
				<xsl:if test="not(starts-with(lower-case(normalize-space(./MTCC)), 'nr'))  and not(starts-with(lower-case(normalize-space(./MTCC)), 'n.r'))">
					<xsl:if test="./MTCC">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(./MTCC)))" />
		            		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./MTCC)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./MTCC)" />
							</l0:name>
							<arco-dd:isCharacteristicClassifiedBy>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Colour'" />
            					</xsl:attribute>
							</arco-dd:isCharacteristicClassifiedBy>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
					<!-- garment analysis (VeAC) as an individual -->
			<xsl:for-each select="record/metadata/schede/*/MT/MTC">
				<xsl:if test="not(starts-with(lower-case(normalize-space(./MTCA)), 'nr'))  and not(starts-with(lower-case(normalize-space(./MTCA)), 'n.r'))">
					<xsl:if test="./MTCA">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(./MTCA)))" />
		            		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./MTCA)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./MTCA)" />
							</l0:name>
							<arco-dd:isCharacteristicClassifiedBy>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="'https://w3id.org/arco/ontology/clothing-description/GarmentAnalysis'" />
            					</xsl:attribute>
							</arco-dd:isCharacteristicClassifiedBy>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			</xsl:if>
				<!-- materialOrTechnique of cultural property (previous versions) as an individual -->
			<xsl:for-each select="record/metadata/schede/*/MT/MTC">
				<xsl:if test="not(./*) and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI)" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
							</xsl:attribute>
						</rdf:type>
						<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
							</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
						</l0:name>
						<arco-dd:includesTechnicalCharacteristic>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
            				</xsl:attribute>
						</arco-dd:includesTechnicalCharacteristic>
							<!-- Mapping with the thesaurus of find materials -->
						<xsl:variable name="material-method-ra1">
							<xsl:if test="$sheetType='RA' and starts-with($sheetVersion, '3.00')">
								<xsl:value-of select="arco-fn:mtc-definition(normalize-space(.))" />
							</xsl:if>
						</xsl:variable>
						<xsl:variable name="material-method-ra2">
							<xsl:if test="$sheetType='RA' and starts-with($sheetVersion, '3.00')">
								<xsl:value-of select="arco-fn:mtc2-definition(normalize-space(.))" />
							</xsl:if>
						</xsl:variable>
						<xsl:if test="$material-method-ra1 != ''">
							<skos:relatedMatch>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="$material-method-ra1" />
								</xsl:attribute>
							</skos:relatedMatch>
						</xsl:if>
						<xsl:if test="$material-method-ra2 != ''">
							<skos:relatedMatch>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="$material-method-ra2" />
								</xsl:attribute>
							</skos:relatedMatch>
						</xsl:if>
						<arco-core:current>
							<xsl:value-of select="true()" />
						</arco-core:current>
					</rdf:Description>
					<!-- Technical detail as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
           					<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
       			   		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
						<arco-dd:isCharacteristicClassifiedBy>
							<xsl:attribute name="rdf:resource">
           						<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MaterialOrTechnique'" />
           					</xsl:attribute>
						</arco-dd:isCharacteristicClassifiedBy>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- material of cultural property (PST) -->
		<xsl:for-each select="record/metadata/schede/*/MT/MTW">
			<xsl:if test="(not(./MTWP) or ./MTWP='intero bene' or ./MTWP='integrale' or ./MTWP='tutta' or ./MTWP='totale') or (starts-with(lower-case(normalize-space(./MTWP)), 'nr')) or (starts-with(lower-case(normalize-space(./MTWP)), 'n.r')) or (starts-with(lower-case(normalize-space(./MTWP)), 'intero')) or (starts-with(lower-case(normalize-space(./MTWP)), 'intera')) or (starts-with(lower-case(normalize-space(./MTWP)), 'esemplar'))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
					</l0:name>
					<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
					<xsl:if test="./MTWS">
						<arco-core:note>
							<xsl:value-of select="./MTWS" />
						</arco-core:note>
					</xsl:if>
					<xsl:for-each select="./MTWC">
						<arco-dd:includesTechnicalCharacteristic>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
							</xsl:attribute>
						</arco-dd:includesTechnicalCharacteristic>
					</xsl:for-each>
				</rdf:Description>
			</xsl:if>
			<xsl:for-each select="./MTWC">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
          				<xsl:value-of select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(.)))" />
		           	</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(.)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(.)" />
					</l0:name>
					<arco-dd:isCharacteristicClassifiedBy>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Material'" />
            			</xsl:attribute>
					</arco-dd:isCharacteristicClassifiedBy>
				</rdf:Description>
			</xsl:for-each>
		</xsl:for-each>
			<!-- shape of cultural property as an individual -->
			<xsl:if
				test="record/metadata/schede/*/MT/FRM and not(record/metadata/schede/F/MT/FRM)">
				<xsl:if
					test="not(starts-with(lower-case(normalize-space(record/metadata/schede/*/MT/FRM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/MT/FRM)), 'n.r'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI)" />
            			</xsl:attribute>
            				<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
								</xsl:attribute>
							</rdf:type>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<rdfs:label xml:lang="it">
								<xsl:value-of
									select="concat('Stato tecnico del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of
									select="concat('Stato tecnico del bene culturale ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of
									select="concat('Technical status of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of
									select="concat('Technical status of cultural property ', $itemURI)" />
							</l0:name>
						<arco-dd:includesTechnicalCharacteristic>
							<xsl:attribute name="rdf:resource">
            				<xsl:value-of
								select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(record/metadata/schede/*/MT/FRM)))" />
            			</xsl:attribute>
						</arco-dd:includesTechnicalCharacteristic>

					</rdf:Description>
					<!-- Technical detail as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            			<xsl:value-of
							select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(record/metadata/schede/*/MT/FRM)))" />
            		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
							<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
						</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of
								select="normalize-space(record/metadata/schede/*/MT/FRM)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of
								select="normalize-space(record/metadata/schede/*/MT/FRM)" />
						</l0:name>
						<arco-dd:isCharacteristicClassifiedBy>
							<xsl:attribute name="rdf:resource">
            				<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/Shape'" />
            			</xsl:attribute>
						</arco-dd:isCharacteristicClassifiedBy>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- filigree of cultural property as an individual -->
			<xsl:if test="not(starts-with(lower-case(normalize-space(record/metadata/schede/*/MT/FIL)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/MT/FIL)), 'n.r'))">
				<xsl:if test="record/metadata/schede/*/MT/FIL">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Filigree/', arco-fn:urify(normalize-space(record/metadata/schede/*/MT/FIL)))" />	
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Filigree'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/MT/FIL)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/MT/FIL)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- file format of photograph (F) as an individual -->
			<xsl:if test="record/metadata/schede/F/MT/FVC/FVCN">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI)" />
            		</xsl:attribute>
            		<xsl:if test="record/metadata/schede/F/MT/FVC/FVCN">
            			<arco-core:note>
            				<xsl:value-of select="record/metadata/schede/F/MT/FVC/FVCN" />
            			</arco-core:note>
            		</xsl:if>
            		<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
            	</rdf:Description>
            </xsl:if>
			<xsl:if test="not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCF)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCF)), 'n.r'))">
				<xsl:if test="record/metadata/schede/F/MT/FVC/FVCF">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Format/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/FVC/FVCF)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Format'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/MT/FVC/FVCF)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/MT/FVC/FVCF)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- photo size of photograph (F) as an individual -->
			<xsl:if test="not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FRM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FRM)), 'n.r'))">
				<xsl:if test="record/metadata/schede/F/MT/FRM">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'TechnicalStatus/', $itemURI)" />
            			</xsl:attribute>
            				<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
								</xsl:attribute>
							</rdf:type>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<rdfs:label xml:lang="it">
								<xsl:value-of
									select="concat('Stato tecnico del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of
									select="concat('Stato tecnico del bene culturale ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of
									select="concat('Technical status of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of
									select="concat('Technical status of cultural property ', $itemURI)" />
							</l0:name>
						<arco-dd:includesTechnicalCharacteristic>
							<xsl:attribute name="rdf:resource">
            				<xsl:value-of
								select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/FRM)))" />
            			</xsl:attribute>
						</arco-dd:includesTechnicalCharacteristic>
					</rdf:Description>
					<!-- Technical detail as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            			<xsl:value-of
							select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/FRM)))" />
            		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
							<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
						</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of
								select="normalize-space(record/metadata/schede/F/MT/FRM)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of
								select="normalize-space(record/metadata/schede/F/MT/FRM)" />
						</l0:name>
						<arco-dd:isCharacteristicClassifiedBy>
							<xsl:attribute name="rdf:resource">
            				<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/PhotoSize'" />
            			</xsl:attribute>
						</arco-dd:isCharacteristicClassifiedBy>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- software of photograph (F) as an individual -->
			<xsl:if test="not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCP)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCP)), 'n.r'))">
				<xsl:if test="record/metadata/schede/F/MT/FVC/FVCP">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Software/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/FVC/FVCP)))" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Software'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of
								select="normalize-space(record/metadata/schede/F/MT/FVC/FVCP)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/MT/FVC/FVCP)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- storage method and colour depth of photograph (F) as an individual -->
			<xsl:if
				test="not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCC)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCC)), 'n.r'))">
				<xsl:if test="record/metadata/schede/F/MT/FVC/FVCC">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            			<xsl:value-of
							select="concat($NS, 'TechnicalStatus/', $itemURI)" />
            		</xsl:attribute>
						<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
								</xsl:attribute>
							</rdf:type>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<rdfs:label xml:lang="it">
								<xsl:value-of
									select="concat('Stato tecnico del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of
									select="concat('Stato tecnico del bene culturale ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of
									select="concat('Technical status of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of
									select="concat('Technical status of cultural property ', $itemURI)" />
							</l0:name>
						<arco-dd:includesTechnicalCharacteristic>
							<xsl:attribute name="rdf:resource">
            				<xsl:value-of
								select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/FVC/FVCC)))" />
            			</xsl:attribute>
						</arco-dd:includesTechnicalCharacteristic>

					</rdf:Description>
					<!-- Technical detail as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            			<xsl:value-of
							select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/FVC/FVCC)))" />
            		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
							<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
						</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of
								select="normalize-space(record/metadata/schede/F/MT/FVC/FVCC)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of
								select="normalize-space(record/metadata/schede/F/MT/FVC/FVCC)" />
						</l0:name>
						<arco-dd:isCharacteristicClassifiedBy>
							<xsl:attribute name="rdf:resource">
            				<xsl:value-of
								select="'https://w3id.org/arco/ontology/denotative-description/StorageMethodColourDepth'" />
            			</xsl:attribute>
						</arco-dd:isCharacteristicClassifiedBy>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- resolution of photograph (F) as an individual -->
			<xsl:if test="not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCU)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCU)), 'n.r'))">
				<xsl:if test="record/metadata/schede/F/MT/FVC/FVCU">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI)" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MeasurementCollection'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
						</l0:name>
						<arco-dd:hasMeasurement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-resolution')" />
							</xsl:attribute>
						</arco-dd:hasMeasurement>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about" select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-resolution')" />
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/Measurement" />
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Measurement of cultural property ', $itemURI, ': ', record/metadata/schede/F/MT/FVC/FVCU)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Measurement of cultural property ', $itemURI, ': ', record/metadata/schede/F/MT/FVC/FVCU)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Misura del bene ', $itemURI, ': ', record/metadata/schede/F/MT/FVC/FVCU)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Misura del bene ', $itemURI, ': ', record/metadata/schede/F/MT/FVC/FVCU)" />
						</l0:name>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource" select="concat('https://w3id.org/arco/ontology/denotative-description/', 'Resolution')" />
						</arco-core:hasType>
						<arco-dd:hasValue>
							<xsl:attribute name="rdf:resource" select="concat($NS, 'Value/', arco-fn:urify(record/metadata/schede/F/MT/FVC/FVCU))" />
						</arco-dd:hasValue>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about" select="concat($NS, 'Value/', arco-fn:urify(record/metadata/schede/F/MT/FVC/FVCU))" />
						<rdf:type rdf:resource="https://w3id.org/italia/onto/MU/Value" />
						<mu:value>
							<xsl:value-of select="record/metadata/schede/F/MT/FVC/FVCU" />
						</mu:value>
						<rdfs:label>
							<xsl:value-of select="record/metadata/schede/F/MT/FVC/FVCU" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="record/metadata/schede/F/MT/FVC/FVCU" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- pixel dimension of photograph (F) -->
			<xsl:if test="not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVC/FVCM)), 'n.r'))">
				<xsl:if test="record/metadata/schede/F/MT/FVC/FVCM">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI)" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MeasurementCollection'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
						</l0:name>
						<arco-dd:hasMeasurement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-pixel-dimension')" />
							</xsl:attribute>
						</arco-dd:hasMeasurement>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about" select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-pixel-dimension')" />
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/Measurement" />
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Measurement of cultural property ', $itemURI, ': ', record/metadata/schede/F/MT/FVC/FVCM)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Measurement of cultural property ', $itemURI, ': ', record/metadata/schede/F/MT/FVC/FVCM)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Misura del bene ', $itemURI, ': ', record/metadata/schede/F/MT/FVC/FVCM)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Misura del bene ', $itemURI, ': ', record/metadata/schede/F/MT/FVC/FVCM)" />
						</l0:name>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource" select="concat('https://w3id.org/arco/ontology/denotative-description/', 'PixelRevolution')" />
						</arco-core:hasType>
						<arco-dd:hasValue>
							<xsl:attribute name="rdf:resource" select="concat($NS, 'Value/', arco-fn:urify(record/metadata/schede/F/MT/FVC/FVCM))" />
						</arco-dd:hasValue>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about" select="concat($NS, 'Value/', arco-fn:urify(record/metadata/schede/F/MT/FVC/FVCM))" />
						<rdf:type rdf:resource="https://w3id.org/italia/onto/MU/Value" />
						<mu:value>
							<xsl:value-of select="record/metadata/schede/F/MT/FVC/FVCM" />
						</mu:value>
						<rdfs:label>
							<xsl:value-of select="record/metadata/schede/F/MT/FVC/FVCM" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="record/metadata/schede/F/MT/FVC/FVCM" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- storage medium of photograph (F) as an individual -->
			<xsl:if test="record/metadata/schede/F/MT/FVM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/FVM)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'StorageMedium/', $itemURI)" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/StorageMedium'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Supporto del bene ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Supporto del bene ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Storage medium of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Storage medium of cultural property ', $itemURI)" />
					</l0:name>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="concat($NS, 'StorageMediumType/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/FVM)))" />
            			</xsl:attribute>
					</arco-core:hasType>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'StorageMediumType/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/FVM)))" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/StorageMediumType'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/F/MT/FVM)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/F/MT/FVM)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- colour of photograph (F) as an individual -->
			<xsl:if
				test="record/metadata/schede/F/MT/MTX and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/MTX)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/MT/MTX)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of
						select="concat($NS, 'TechnicalStatus/', $itemURI)" />
            		</xsl:attribute>
            		<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of
									select="'https://w3id.org/arco/ontology/denotative-description/TechnicalStatus'" />
						</xsl:attribute>
					</rdf:type>
					<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Stato tecnico del bene culturale ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Technical status of cultural property ', $itemURI)" />
					</l0:name>
					<arco-dd:includesTechnicalCharacteristic>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of
							select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/MTX)))" />
            			</xsl:attribute>
					</arco-dd:includesTechnicalCharacteristic>

				</rdf:Description>
				<!-- Technical detail as an individual -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of
						select="concat($NS, 'TechnicalCharacteristic/', arco-fn:urify(normalize-space(record/metadata/schede/F/MT/MTX)))" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of
							select="'https://w3id.org/arco/ontology/denotative-description/TechnicalCharacteristic'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/F/MT/MTX)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/F/MT/MTX)" />
					</l0:name>
					<arco-dd:isCharacteristicClassifiedBy>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of
							select="'https://w3id.org/arco/ontology/denotative-description/PhotoColour'" />
            			</xsl:attribute>
					</arco-dd:isCharacteristicClassifiedBy>
				</rdf:Description>
			</xsl:if>	
			<!-- Geometry of cultural property as an individual for GE (version 4.00) -->
			<xsl:if test="record/metadata/schede/*/GE/*/*">
				<xsl:for-each select="record/metadata/schede/*/GE | record/metadata/schede/*/MT/MTA/MTAR | record/metadata/schede/*/MT/MTA/MTAX / record/metadata/schede/*/MT/MTA/MTAM">
					<xsl:variable name="geometry-position" select="position()" />
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Geometry'" />
            				</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Geometry ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Geometry ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Georeferenziazione ', position(), ' del bene culturale: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Georeferenziazione ', position(), ' del bene culturale: ', $itemURI)" />
						</l0:name>
						<arco-core:note><!-- context lost  -->
							<xsl:value-of select="normalize-space(string-join(./GEC/GECS, '; '))" />
						</arco-core:note>
						<xsl:if test="./GET and (not(starts-with(lower-case(normalize-space(./GET)), 'nr')) and not(starts-with(lower-case(normalize-space(./GET)), 'n.r')))">
							<clvapit:hasGeometryType>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
		                                <xsl:when test="./GET='georeferenziazione puntuale'">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Point'" />
										</xsl:when>
                    		            <xsl:when test="./GET='georeferenziazione areale'">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Polygon'" />
										</xsl:when>
        		                        <xsl:when test="./GET='georeferenziazione lineare'">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Line'" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'GeometryType/', arco-fn:urify(normalize-space(./GET)))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</clvapit:hasGeometryType>
						</xsl:if>
						<xsl:for-each select="./GEC">
							<xsl:if test="./GECX and (not(starts-with(lower-case(normalize-space(./GECX)), 'nr')) and not(starts-with(lower-case(normalize-space(./GECX)), 'n.r'))) or ./GECY and (not(starts-with(lower-case(normalize-space(./GECY)), 'nr')) and not(starts-with(lower-case(normalize-space(./GECY)), 'n.r'))) or ./GECZ">
								<arco-location:hasCoordinates>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Coordinates/', $itemURI, '-geometry-', $geometry-position, '-coordinates', '-', position())" />
									</xsl:attribute>
								</arco-location:hasCoordinates>
							</xsl:if>
						</xsl:for-each>
						<xsl:if test="./GEP and (not(starts-with(lower-case(normalize-space(./GEP)), 'nr')) and not(starts-with(lower-case(normalize-space(./GEP)), 'n.r')))">
							<arco-location:spacialReferenceSystem>
								<xsl:value-of select="normalize-space(./GEP)" />
							</arco-location:spacialReferenceSystem>
						</xsl:if>
						<xsl:if test="./GPT and (not(starts-with(lower-case(normalize-space(./GPT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPT)), 'n.r')))">
							<arco-location:hasGeometryTechnique>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'GeometryTechnique/', arco-fn:urify(normalize-space(./GPT)))" />
								</xsl:attribute>
							</arco-location:hasGeometryTechnique>
						</xsl:if>
						<xsl:if test="./GPM and (not(starts-with(lower-case(normalize-space(./GPM)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPM)), 'n.r')))">
							<arco-location:hasGeometryMethod>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'GeometryMethod/', arco-fn:urify(normalize-space(./GPM)))" />
            					</xsl:attribute>
							</arco-location:hasGeometryMethod>
						</xsl:if>
						<xsl:if test="./GPB/GPBB">
							<arco-location:hasBaseMap>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'BaseMap/', arco-fn:urify(normalize-space(./GPB/GPBB)))" />
            					</xsl:attribute>
							</arco-location:hasBaseMap>
						</xsl:if>
						<xsl:if test="./GEL and not(./GEL='.' or ./GEL='-' or ./GEL='/') and (not(starts-with(lower-case(normalize-space(./GEL)), 'nr')) and not(starts-with(lower-case(normalize-space(./GEL)), 'n.r')))">
							<arco-location:hasLocationType>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
	                					<xsl:when test="lower-case(normalize-space(./GEL))='localizzazione fisica'">
	                    					<xsl:value-of select="'https://w3id.org/arco/ontology/location/CurrentPhysicalLocation'" />
	                        			</xsl:when>
	                            		<xsl:when test="contains(normalize-space(lower-case(./GEL)), 'successiva') or contains(normalize-space(lower-case(./GEL)), 'successivo') or contains(normalize-space(lower-case(./GEL)), 'provenienza') or contains(normalize-space(lower-case(./GEL)), 'provanienza') or contains(normalize-space(lower-case(./GEL)), 'proenienza') or contains(normalize-space(lower-case(./GEL)), 'provenianza') or contains(normalize-space(lower-case(./GEL)), 'proivenienza')">
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/PreviousLocation'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./GEL))='di archivio'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/ArchivalLocation'" />
	    								</xsl:when>
	        							<xsl:when test="contains(normalize-space(lower-case(./GEL)), 'produzione') or contains(normalize-space(lower-case(./GEL)), 'fabbricazione') or contains(normalize-space(lower-case(./GEL)), 'esecuzione') ">
	            							<xsl:value-of select="'https://w3id.org/arco/ontology/location/ProductionRealizationLocation'" />
	                					</xsl:when>
	                    				<xsl:when test="contains(normalize-space(lower-case(./GEL)), 'reperimento') or contains(normalize-space(lower-case(./GEL)), 'eperimento') or contains(normalize-space(lower-case(./GEL)), 'reprimento')">
	                        				<xsl:value-of select="'https://w3id.org/arco/ontology/location/FindingLocation'" />
	                            		</xsl:when>
	                                	<xsl:when test="lower-case(normalize-space(./GEL))='luogo di deposito' or lower-case(normalize-space(./GEL))='deposito temporaneo' or lower-case(normalize-space(./GEL))='deposito'">
	                                    	<xsl:value-of select="'https://w3id.org/arco/ontology/location/StorageLocation'" />
										</xsl:when>
										<xsl:when test="contains(normalize-space(lower-case(./GEL)), 'esposizione') or contains(normalize-space(lower-case(./GEL)), 'espositiva') or contains(normalize-space(lower-case(./GEL)), 'espositivo')">
	    									<xsl:value-of select="'https://w3id.org/arco/ontology/location/ExhibitionLocation'" />
	        							</xsl:when>
	            						<xsl:when test="lower-case(normalize-space(./GEL))='luogo di rilevamento' or lower-case(normalize-space(./GEL))='di rilevamento' or lower-case(normalize-space(./GEL))='localizzazione di rilevamento'">
	                						<xsl:value-of select="'https://w3id.org/arco/ontology/location/ObservationLocation'" />
	                    				</xsl:when>
	                        			<xsl:when test="lower-case(normalize-space(./GEL))='area rappresentata'">
	                            			<xsl:value-of select="'https://w3id.org/arco/ontology/location/SubjectLocation'" />
	                                	</xsl:when>
	                                    <xsl:otherwise>
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/UndefinedLocation'" />
	                                	</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</arco-location:hasLocationType>
						</xsl:if>
					</rdf:Description>
					<!-- geometry type for GE as an individual -->
					<xsl:if test="./GET and not(./GET='.' or ./GET='-' or ./GET='/') and (not(starts-with(lower-case(normalize-space(./GET)), 'nr')) and not(starts-with(lower-case(normalize-space(./GET)), 'n.r')))">
						<xsl:choose>
							<xsl:when test="./GET='georeferenziazione puntuale'" />
							<xsl:when test="./GET='georeferenziazione areale'" />
							<xsl:when test="./GET='georeferenziazione lineare'" />
							<xsl:otherwise>
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'GeometryType/', arco-fn:urify(normalize-space(./GET)))" />
                                </xsl:attribute>
									<rdf:type rdf:resource="https://w3id.org/italia/onto/CLV/GeometryType" />
									<rdfs:label>
										<xsl:value-of select="normalize-space(./GET)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./GET)" />
									</l0:name>
								</rdf:Description>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:if>
					<!-- geometry coordinates for GE as an individual -->
					<xsl:for-each select="./GEC">
						<xsl:if test="./GECX and (not(starts-with(lower-case(normalize-space(./GECX)), 'nr')) and not(starts-with(lower-case(normalize-space(./GECX)), 'n.r'))) or ./GECY and (not(starts-with(lower-case(normalize-space(./GECY)), 'nr')) and not(starts-with(lower-case(normalize-space(./GECY)), 'n.r'))) or ./GECZ">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
            						<xsl:value-of select="concat($NS, 'Coordinates/', $itemURI, '-geometry-', $geometry-position, '-coordinates', '-', position())" />
            					</xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/Coordinates" />
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Coordinates ', position(), ' of cultural property: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Coordinates ', position(), ' of cultural property: ', $itemURI)" />
								</l0:name>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Coordinate ', position(), ' del bene culturale: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Coordinate ', position(), ' del bene culturale: ', $itemURI)" />
								</l0:name>
								<xsl:if test="./GECX and (not(starts-with(lower-case(normalize-space(./GECX)), 'nr')) and not(starts-with(lower-case(normalize-space(./GECX)), 'n.r')))">
									<arco-location:long>
										<xsl:value-of select="normalize-space(./GECX)" />
									</arco-location:long>
								</xsl:if>
								<xsl:if test="./GECY and (not(starts-with(lower-case(normalize-space(./GECY)), 'nr')) and not(starts-with(lower-case(normalize-space(./GECY)), 'n.r')))">
									<arco-location:lat>
										<xsl:value-of select="normalize-space(./GECY)" />
									</arco-location:lat>
								</xsl:if>
								<xsl:if test="./GECZ">
									<arco-location:hasAltitude>
										<xsl:attribute name="rdf:resource">
            								<xsl:value-of select="concat($NS, 'Altitude/', $itemURI, '-geometry-', $geometry-position, '-altitude')" />
            				</xsl:attribute>
									</arco-location:hasAltitude>
								</xsl:if>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>

					<!-- geometry technique for GE as an individual -->
					<xsl:if test="./GPT and (not(starts-with(lower-case(normalize-space(./GPT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPT)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'GeometryTechnique/', arco-fn:urify(normalize-space(./GPT)))" />
            		</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/GeometryTechnique" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GPT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GPT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- geometry method for GE as an individual -->
					<xsl:if test="./GPM and (not(starts-with(lower-case(normalize-space(./GPM)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPM)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'GeometryMethod/', arco-fn:urify(normalize-space(./GPM)))" />
            		</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/GeometryMethod" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GPM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GPM)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- geometry base map for GE as an individual -->
					<xsl:if test="./GPB">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'BaseMap/', arco-fn:urify(normalize-space(./GPB/GPBB)))" />
            				</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/BaseMap" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GPB/GPBB)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GPB/GPBB)" />
							</l0:name>
							<xsl:if test="./GPB/GPBT and (not(starts-with(lower-case(normalize-space(./GPB/GPBT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPB/GPBT)), 'n.r')))">
								<tiapit:date>
									<xsl:value-of select="normalize-space(./GPB/GPBT)" />
								</tiapit:date>
							</xsl:if>
							<xsl:if test="./GPB/GPBU and (not(starts-with(lower-case(normalize-space(./GPB/GPBU)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPB/GPBU)), 'n.r')))">
								<smapit:url>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="normalize-space(./GPB/GPBU)" />
									</xsl:attribute>
								</smapit:url>
							</xsl:if>
							<xsl:if test="./GPB/GPBO and (not(starts-with(lower-case(normalize-space(./GPB/GPBO)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPB/GPBO)), 'n.r')))">
								<arco-core:note>
									<xsl:value-of select="normalize-space(./GPB/GPBO)" />
								</arco-core:note>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
					<!-- altitude for GE as an individual -->
					<xsl:if test="./GEC/GECZ | ../MT/MTA/MTAR | ../MT/MTA/MTAX | ../MT/MTA/MTAM">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'Altitude/', $itemURI, '-geometry-', $geometry-position, '-altitude')" />
            				</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/Altitude" />
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Altitudine del bene culturale: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Altitudine del bene culturale: ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Altitude of cultural property: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Altitude of cultural property: ', $itemURI)" />
							</l0:name>
							<xsl:if test="./GEC/GECZ and (not(starts-with(lower-case(normalize-space(./GEC/GECZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./GEC/GECZ)), 'n.r')))">
								<arco-location:alt>
									<xsl:value-of select="normalize-space(./GEC/GECZ)" />
								</arco-location:alt>
							</xsl:if>
							<xsl:if test="../MT/MTA/MTAR and (not(starts-with(lower-case(normalize-space(../MT/MTA/MTAR)), 'nr')) and not(starts-with(lower-case(normalize-space(./MT/MTA/MTAR)), 'n.r')))">
								<arco-location:relativeAlt>
									<xsl:value-of select="../MT/MTA/MTAR" />
								</arco-location:relativeAlt>
							</xsl:if>
							<xsl:if test="../MT/MTA/MTAX and (not(starts-with(lower-case(normalize-space(./MT/MTA/MTAX)), 'nr')) and not(starts-with(lower-case(normalize-space(./MT/MTA/MTAX)), 'n.r')))">
								<arco-location:maxAlt>
									<xsl:value-of select="../MT/MTA/MTAX" />
								</arco-location:maxAlt>
							</xsl:if>
							<xsl:if test="../MT/MTA/MTAM and (not(starts-with(lower-case(normalize-space(./MT/MTA/MTAM)), 'nr')) and not(starts-with(lower-case(normalize-space(./MT/MTA/MTAM)), 'n.r')))">
								<arco-location:minAlt>
									<xsl:value-of select="../MT/MTA/MTAM" />
								</arco-location:minAlt>
							</xsl:if>
							<xsl:if test="../MT/MTA/MTAS">
								<arco-core:note>
									<xsl:value-of select="../MT/MTA/MTAS" />
								</arco-core:note>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- Geometry of cultural property as an individual for GP (Point) -->
			<xsl:for-each select="record/metadata/schede/*/GP">
				<xsl:variable name="geometry-position" select="position()" />
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-point-', position())" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Geometry'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Geometry (point) ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Geometry (point) ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Georeferenziazione (puntuale) ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Georeferenziazione (puntuale) ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<clvapit:hasGeometryType>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Point'" />
                        </xsl:attribute>
					</clvapit:hasGeometryType>
					<xsl:for-each select="./GPD/GPDP">
						<arco-location:hasCoordinates>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'Coordinates/', $itemURI, '-geometry-point-', $geometry-position, '-coordinates', '-', position())" />
            				</xsl:attribute>
						</arco-location:hasCoordinates>
					</xsl:for-each>
					<xsl:if test="./GPP and (not(starts-with(lower-case(normalize-space(./GPP)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPP)), 'n.r')))">
						<arco-location:spacialReferenceSystem>
							<xsl:value-of select="normalize-space(./GPP)" />
						</arco-location:spacialReferenceSystem>
					</xsl:if>
					<xsl:if test="./GPC/GPCT and (not(starts-with(lower-case(normalize-space(./GPC/GPCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPC/GPCT)), 'n.r')))">
						<arco-location:pointType>
							<xsl:value-of select="normalize-space(./GPC/GPCT)" />
						</arco-location:pointType>
					</xsl:if>
					<xsl:if test="./GPT and (not(starts-with(lower-case(normalize-space(./GPT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPT)), 'n.r')))">
						<arco-location:hasGeometryTechnique>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'GeometryTechnique/', arco-fn:urify(normalize-space(./GPT)))" />
            				</xsl:attribute>
						</arco-location:hasGeometryTechnique>
					</xsl:if>
					<xsl:if test="./GPM and (not(starts-with(lower-case(normalize-space(./GPM)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPM)), 'n.r')))">
						<arco-location:hasGeometryMethod>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'GeometryMethod/', arco-fn:urify(normalize-space(./GPM)))" />
            				</xsl:attribute>
						</arco-location:hasGeometryMethod>
					</xsl:if>
					<xsl:if test="./GPB">
						<arco-location:hasBaseMap>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'BaseMap/', arco-fn:urify(normalize-space(./GPB/GPBB)))" />
            				</xsl:attribute>
						</arco-location:hasBaseMap>
					</xsl:if>
					<!-- has referred laction type -->
					<xsl:if test="./GPL and not(./GPL='.' or ./GPL='-' or ./GPL='/') and (not(starts-with(lower-case(normalize-space(./GPL)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPL)), 'n.r')))">
						<arco-location:hasLocationType>
							<xsl:attribute name="rdf:resource">
									<xsl:choose>
	                					<xsl:when test="lower-case(normalize-space(./GPL))='localizzazione fisica'">
	                    					<xsl:value-of select="'https://w3id.org/arco/ontology/location/CurrentPhysicalLocation'" />
	                        			</xsl:when>
	                            		<xsl:when test="contains(normalize-space(lower-case(./GPL)), 'successiva') or contains(normalize-space(lower-case(./GPL)), 'successivo') or contains(normalize-space(lower-case(./GPL)), 'provenienza') or contains(normalize-space(lower-case(./GPL)), 'provanienza') or contains(normalize-space(lower-case(./GPL)), 'proenienza') or contains(normalize-space(lower-case(./GPL)), 'provenianza') or contains(normalize-space(lower-case(./GPL)), 'proivenienza')">
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/PreviousLocation'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./GPL))='di archivio'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/ArchivalLocation'" />
	    								</xsl:when>
	        							<xsl:when test="contains(normalize-space(lower-case(./GPL)), 'produzione') or contains(normalize-space(lower-case(./GPL)), 'fabbricazione') or contains(normalize-space(lower-case(./GPL)), 'esecuzione') ">
	            							<xsl:value-of select="'https://w3id.org/arco/ontology/location/ProductionRealizationLocation'" />
	                					</xsl:when>
	                    				<xsl:when test="contains(normalize-space(lower-case(./GPL)), 'reperimento') or contains(normalize-space(lower-case(./GPL)), 'eperimento') or contains(normalize-space(lower-case(./GPL)), 'reprimento')">
	                        				<xsl:value-of select="'https://w3id.org/arco/ontology/location/FindingLocation'" />
	                            		</xsl:when>
	                                	<xsl:when test="lower-case(normalize-space(./GPL))='luogo di deposito' or lower-case(normalize-space(./GPL))='deposito temporaneo' or lower-case(normalize-space(./GPL))='deposito'">
	                                    	<xsl:value-of select="'https://w3id.org/arco/ontology/location/StorageLocation'" />
										</xsl:when>
										<xsl:when test="contains(normalize-space(lower-case(./GPL)), 'esposizione') or contains(normalize-space(lower-case(./GPL)), 'espositiva') or contains(normalize-space(lower-case(./GPL)), 'espositivo')">
	    									<xsl:value-of select="'https://w3id.org/arco/ontology/location/ExhibitionLocation'" />
	        							</xsl:when>
	            						<xsl:when test="lower-case(normalize-space(./GPL))='luogo di rilevamento' or lower-case(normalize-space(./GPL))='di rilevamento' or lower-case(normalize-space(./GPL))='localizzazione di rilevamento'">
	                						<xsl:value-of select="'https://w3id.org/arco/ontology/location/ObservationLocation'" />
	                    				</xsl:when>
	                        			<xsl:when test="lower-case(normalize-space(./GPL))='area rappresentata'">
	                            			<xsl:value-of select="'https://w3id.org/arco/ontology/location/SubjectLocation'" />
	                                	</xsl:when>
	                                	<xsl:otherwise>
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/UndefinedLocation'" />
	                                	</xsl:otherwise>
									</xsl:choose>
							</xsl:attribute>
						</arco-location:hasLocationType>
					</xsl:if>
				</rdf:Description>
				<!-- geometry coordinates for GP as an individual -->
				<xsl:for-each select="./GPD/GPDP">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	            			<xsl:value-of select="concat($NS, 'Coordinates/', $itemURI, '-geometry-point-', $geometry-position, '-coordinates', '-', position())" />
	            		</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/Coordinates" />
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Coordinates ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Coordinates ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Coordinate ', position(), ' del bene culturale: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Coordinate ', position(), ' del bene culturale: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./GPDPX and (not(starts-with(lower-case(normalize-space(./GPDPX)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPDPX)), 'n.r')))">
							<arco-location:long>
								<xsl:value-of select="normalize-space(./GPDPX)" />
							</arco-location:long>
						</xsl:if>
						<xsl:if test="./GPDPY and (not(starts-with(lower-case(normalize-space(./GPDPY)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPDPY)), 'n.r')))">
							<arco-location:lat>
								<xsl:value-of select="normalize-space(./GPDPY)" />
							</arco-location:lat>
						</xsl:if>
						<xsl:if test="../../GPC/GPCL | ../../GPC/GPCI | ../../GPC/GPCS">
							<arco-location:hasAltitude>
								<xsl:attribute name="rdf:resource">
	            					<xsl:value-of select="concat($NS, 'Altitude/', $itemURI, '-geometry-point-', $geometry-position, '-altitude')" />
	            				</xsl:attribute>
							</arco-location:hasAltitude>
						</xsl:if>
					</rdf:Description>
				</xsl:for-each>
				<!-- geometry technique for GP as an individual -->
				<xsl:if test="./GPT and (not(starts-with(lower-case(normalize-space(./GPT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPT)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	            			<xsl:value-of select="concat($NS, 'GeometryTechnique/', arco-fn:urify(normalize-space(./GPT)))" />
	            		</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/GeometryTechnique" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./GPT)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./GPT)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- geometry method for GP as an individual -->
				<xsl:if test="./GPM and (not(starts-with(lower-case(normalize-space(./GPM)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPM)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	            			<xsl:value-of select="concat($NS, 'GeometryMethod/', arco-fn:urify(normalize-space(./GPM)))" />
	            		</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/GeometryMethod" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./GPM)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./GPM)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- geometry base map for GP as an individual -->
				<xsl:if test="./GPB">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'BaseMap/', arco-fn:urify(normalize-space(./GPB/GPBB)))" />
            			</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/BaseMap" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./GPB/GPBB)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./GPB/GPBB)" />
						</l0:name>
						<xsl:if test="./GPB/GPBT and (not(starts-with(lower-case(normalize-space(./GPB/GPBT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPB/GPBT)), 'n.r')))">
							<tiapit:date>
								<xsl:value-of select="normalize-space(./GPB/GPBT)" />
							</tiapit:date>
						</xsl:if>
						<xsl:if test="./GPB/GPBO">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./GPB/GPBO)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- altitude for GP as an individual -->
				<xsl:if test="./GPC/GPCL | ./GPC/GPCI | ./GPC/GPCS">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Altitude/', $itemURI, '-geometry-point-', $geometry-position, '-altitude')" />
            		</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/Altitude" />
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Altitudine del bene culturale: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Altitudine del bene culturale: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Altitude of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Altitude of cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./GPC/GPCL and (not(starts-with(lower-case(normalize-space(./GPC/GPCL)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPC/GPCL)), 'n.r')))">
							<arco-location:alt>
								<xsl:value-of select="normalize-space(./GPC/GPCL)" />
							</arco-location:alt>
						</xsl:if>
						<xsl:if test="./GPC/GPCS and (not(starts-with(lower-case(normalize-space(./GPC/GPCS)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPC/GPCS)), 'n.r')))">
							<arco-location:maxAlt>
								<xsl:value-of select="normalize-space(./GPC/GPCS)" />
							</arco-location:maxAlt>
						</xsl:if>
						<xsl:if test="./GPC/GPCI and (not(starts-with(lower-case(normalize-space(./GPC/GPCI)), 'nr')) and not(starts-with(lower-case(normalize-space(./GPC/GPCI)), 'n.r')))">
							<arco-location:minAlt>
								<xsl:value-of select="normalize-space(./GPC/GPCI)" />
							</arco-location:minAlt>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:if test="record/metadata/schede/harvesting/*[name()='geocoding' or name()='puntoPrincipale']/*">
				<xsl:variable name="xy" select="record/metadata/schede/harvesting/puntoPrincipale|record/metadata/schede/harvesting[not(puntoPrincipale)]/geocoding"/>
				<!-- Geometry of cultural property as an individual for geocoding|puntoPrincipale -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-point')" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Geometry'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Geometry (point) of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Geometry (point) of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Georeferenziazione (puntuale) del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Georeferenziazione (puntuale) del bene culturale: ', $itemURI)" />
					</l0:name>
					<clvapit:hasGeometryType>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Point'" />
                        </xsl:attribute>
					</clvapit:hasGeometryType>
					<!-- http://www.openlinksw.com/schemas/virtrdf#Geometry virtuoso datatype for geometry -->
					<!-- http://www.opengis.net/ont/geosparql#wktLiteral virtuoso datatype for geometry -->
					<clvapit:serialization rdf:datatype= "http://www.openlinksw.com/schemas/virtrdf#Geometry">
						<!-- xsl:text disable-output-escaping="yes">&lt;![CDATA[ &lt;http://www.opengis.net/def/crs/OGC/1.3/CRS84&gt; </xsl:text-->
						<xsl:text disable-output-escaping="yes">&lt;![CDATA[</xsl:text>
						<xsl:value-of select="normalize-space(concat('POINT(', $xy/x, ' ', $xy/y, ')'))" />
						<xsl:text disable-output-escaping="yes">]]&gt;</xsl:text>
					</clvapit:serialization>
					<clvapit:long>
						<xsl:value-of select="normalize-space($xy/x)" />
					</clvapit:long>
					<clvapit:lat>
						<xsl:value-of select="normalize-space($xy/y)" />
					</clvapit:lat>
				</rdf:Description>
			</xsl:if>
			<!-- Geometry for RA 2.00 -->
			<xsl:if test="record/metadata/schede/*/RP/LGI">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-point')" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Geometry'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Geometry (point) of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Geometry (point) of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Georeferenziazione (puntuale) del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Georeferenziazione (puntuale) del bene culturale: ', $itemURI)" />
					</l0:name>
					<clvapit:hasGeometryType>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Point'" />
                        </xsl:attribute>
					</clvapit:hasGeometryType>
					<arco-location:hasLocationType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/location/FindingLocation'" />
						</xsl:attribute>
					</arco-location:hasLocationType>
					<arco-location:hasBaseMap>
						<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="concat($NS, 'BaseMap/', $itemURI, '-geometry-point-base-map')" />
            				</xsl:attribute>
					</arco-location:hasBaseMap>
				</rdf:Description>
				<!-- geometry base map for LGI as an individual -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
	            			<xsl:value-of select="concat($NS, 'BaseMap/', $itemURI, '-geometry-point-base-map')" />
	            		</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/BaseMap" />
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Base cartografica del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of
							select="concat('Base cartografica del bene culturale: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Base map of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Base map of cultural property: ', $itemURI)" />
					</l0:name>
					<xsl:if test="record/metadata/schede/*/RP/LGI/LGIT or record/metadata/schede/*/RP/LGI/LGIN or record/metadata/schede/*/RP/LGI/LGIQ">
						<arco-core:description>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/RP/LGI/LGIT and record/metadata/schede/*/RP/LGI/LGIN and record/metadata/schede/*/RP/LGI/LGIQ">
									<xsl:value-of select="concat(normalize-space(record/metadata/schede/*/RP/LGI/LGIT), ' | ', normalize-space(record/metadata/schede/*/RP/LGI/LGIN), ' | ', normalize-space(record/metadata/schede/*/RP/LGI/LGIQ))" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/RP/LGI/LGIT and (record/metadata/schede/*/RP/LGI/LGIN or record/metadata/schede/*/RP/LGI/LGIQ)">
									<xsl:value-of select="concat(normalize-space(record/metadata/schede/*/RP/LGI/LGIT), ' | ', normalize-space(record/metadata/schede/*/RP/LGI/LGIN), normalize-space(record/metadata/schede/*/RP/LGI/LGIQ))" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/RP/LGI/LGIN and record/metadata/schede/*/RP/LGI/LGIQ">
									<xsl:value-of select="concat(normalize-space(record/metadata/schede/*/RP/LGI/LGIN), ' | ', normalize-space(record/metadata/schede/*/RP/LGI/LGIQ))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat(normalize-space(record/metadata/schede/*/RP/LGI/LGIT), normalize-space(record/metadata/schede/*/RP/LGI/LGIN), normalize-space(record/metadata/schede/*/RP/LGI/LGIQ))" />
								</xsl:otherwise>
							</xsl:choose>
						</arco-core:description>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/RP/LGI/LGIC">
						<arco-core:note>
							<xsl:value-of
								select="normalize-space(record/metadata/schede/*/RP/LGI/LGIC)" />
						</arco-core:note>
					</xsl:if>
				</rdf:Description>
			</xsl:if>
			<!-- Geometry for A 2.00 -->
			<xsl:if test="record/metadata/schede/*/CR">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
            			<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-point')" />
            		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
            				<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Geometry'" />
            			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Geometry (point) of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Geometry (point) of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Georeferenziazione (puntuale) del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Georeferenziazione (puntuale) del bene culturale: ', $itemURI)" />
					</l0:name>
					<clvapit:isGeometryFor>
						<xsl:attribute name="rdf:resource">
				           <xsl:value-of select="$culturalProperty" />
				        </xsl:attribute>
					</clvapit:isGeometryFor>
					<clvapit:hasGeometryType>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Point'" />
                        </xsl:attribute>
					</clvapit:hasGeometryType>
					<xsl:if test="record/metadata/schede/*/CR/CRD/CRDX and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CR/CRD/CRDX)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CR/CRD/CRDX)), 'n.r')))">
							<clvapit:long>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/CR/CRD/CRDX)" />
							</clvapit:long>
						</xsl:if>
						<xsl:if test="record/metadata/schede/*/CR/CRD/CRDY and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CR/CRD/CRDY)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CR/CRD/CRDY)), 'n.r')))">
							<clvapit:lat>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/CR/CRD/CRDY)" />
							</clvapit:lat>
						</xsl:if>
						<xsl:if test="record/metadata/schede/*/CR/CRD/CRDZ">
							<clvapit:alt>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/CR/CRD/CRDZ)" />
							</clvapit:alt>
						</xsl:if>
					<xsl:if test="record/metadata/schede/*/CR/CRD/CRDR and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CR/CRD/CRDR)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/CR/CRD/CRDR)), 'n.r')))">
						<arco-location:spacialReferenceSystem>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/CR/CRD/CRDR)" />
						</arco-location:spacialReferenceSystem>
					</xsl:if>
				</rdf:Description>
			</xsl:if>
			<!-- Geometry of cultural property as an individual for GL (Line) -->
			<xsl:if test="record/metadata/schede/*/GL/*/*">
				<xsl:for-each select="record/metadata/schede/*/GL">
					<xsl:variable name="geometry-position" select="position()" />
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-line-', position())" />
            		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Geometry'" />
            			</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Geometry (line) ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Geometry (line) ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Georeferenziazione (lineare) ', position(), ' del bene culturale: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Georeferenziazione (lineare) ', position(), ' del bene culturale: ', $itemURI)" />
						</l0:name>
						<clvapit:isGeometryFor>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$culturalProperty" />
				        </xsl:attribute>
						</clvapit:isGeometryFor>
						<clvapit:hasGeometryType>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Line'" />
                        </xsl:attribute>
						</clvapit:hasGeometryType>
						<xsl:for-each select="./GLD/GLDP">
							<arco-location:hasCoordinates>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'Coordinates/', $itemURI, '-geometry-line-', $geometry-position, '-coordinates', '-', position())" />
            				</xsl:attribute>
							</arco-location:hasCoordinates>
						</xsl:for-each>
						<xsl:if test="./GLP and (not(starts-with(lower-case(normalize-space(./GLP)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLP)), 'n.r')))">
							<arco-location:spacialReferenceSystem>
								<xsl:value-of select="normalize-space(./GLP)" />
							</arco-location:spacialReferenceSystem>
						</xsl:if>
						<xsl:if test="./GLT and (not(starts-with(lower-case(normalize-space(./GLT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLT)), 'n.r')))">
							<arco-location:hasGeometryTechnique>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'GeometryTechnique/', arco-fn:urify(normalize-space(./GLT)))" />
            				</xsl:attribute>
							</arco-location:hasGeometryTechnique>
						</xsl:if>
						<xsl:if test="./GLM and (not(starts-with(lower-case(normalize-space(./GLM)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLM)), 'n.r')))">
							<arco-location:hasGeometryMethod>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'GeometryMethod/', arco-fn:urify(normalize-space(./GLM)))" />
            				</xsl:attribute>
							</arco-location:hasGeometryMethod>
						</xsl:if>
						<xsl:if test="./GLB">
							<arco-location:hasBaseMap>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'BaseMap/', arco-fn:urify(normalize-space(./GLB/GLBB)))" />
            				</xsl:attribute>
							</arco-location:hasBaseMap>
						</xsl:if>
						<xsl:if test="./GLL and not(./GLL='.' or ./GLL='-' or ./GLL='/') and (not(starts-with(lower-case(normalize-space(./GLL)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLL)), 'n.r')))">
							<arco-location:hasLocationType>
								<xsl:attribute name="rdf:resource">
										<xsl:choose>
	                					<xsl:when test="lower-case(normalize-space(./GLL))='localizzazione fisica'">
	                    					<xsl:value-of select="'https://w3id.org/arco/ontology/location/CurrentPhysicalLocation'" />
	                        			</xsl:when>
	                            		<xsl:when test="contains(normalize-space(lower-case(./GLL)), 'successiva') or contains(normalize-space(lower-case(./GLL)), 'successivo') or contains(normalize-space(lower-case(./GLL)), 'provenienza') or contains(normalize-space(lower-case(./GLL)), 'provanienza') or contains(normalize-space(lower-case(./GLL)), 'proenienza') or contains(normalize-space(lower-case(./GLL)), 'provenianza') or contains(normalize-space(lower-case(./GLL)), 'proivenienza')">
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/PreviousLocation'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./GLL))='di archivio'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/ArchivalLocation'" />
	    								</xsl:when>
	        							<xsl:when test="contains(normalize-space(lower-case(./GLL)), 'produzione') or contains(normalize-space(lower-case(./GLL)), 'fabbricazione') or contains(normalize-space(lower-case(./GLL)), 'esecuzione') ">
	            							<xsl:value-of select="'https://w3id.org/arco/ontology/location/ProductionRealizationLocation'" />
	                					</xsl:when>
	                    				<xsl:when test="contains(normalize-space(lower-case(./GLL)), 'reperimento') or contains(normalize-space(lower-case(./GLL)), 'eperimento') or contains(normalize-space(lower-case(./GLL)), 'reprimento')">
	                        				<xsl:value-of select="'https://w3id.org/arco/ontology/location/FindingLocation'" />
	                            		</xsl:when>
	                                	<xsl:when test="lower-case(normalize-space(./GLL))='luogo di deposito' or lower-case(normalize-space(./GLL))='deposito temporaneo' or lower-case(normalize-space(./GLL))='deposito'">
	                                    	<xsl:value-of select="'https://w3id.org/arco/ontology/location/StorageLocation'" />
										</xsl:when>
										<xsl:when test="contains(normalize-space(lower-case(./GLL)), 'esposizione') or contains(normalize-space(lower-case(./GLL)), 'espositiva') or contains(normalize-space(lower-case(./GLL)), 'espositivo')">
	    									<xsl:value-of select="'https://w3id.org/arco/ontology/location/ExhibitionLocation'" />
	        							</xsl:when>
	            						<xsl:when test="lower-case(normalize-space(./GLL))='luogo di rilevamento' or lower-case(normalize-space(./GLL))='di rilevamento' or lower-case(normalize-space(./GLL))='localizzazione di rilevamento'">
	                						<xsl:value-of select="'https://w3id.org/arco/ontology/location/ObservationLocation'" />
	                    				</xsl:when>
	                        			<xsl:when test="lower-case(normalize-space(./GLL))='area rappresentata'">
	                            			<xsl:value-of select="'https://w3id.org/arco/ontology/location/SubjectLocation'" />
	                                	</xsl:when>
	                                	<xsl:otherwise>
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/UndefinedLocation'" />
	                                	</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</arco-location:hasLocationType>
						</xsl:if>
					</rdf:Description>
					<!-- geometry coordinates for GL as an individual -->
					<xsl:for-each select="./GLD/GLDP">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'Coordinates/', $itemURI, '-geometry-line-', $geometry-position, '-coordinates', '-', position())" />
	            		</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/Coordinates" />
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Coordinates ', position(), ' of cultural property: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Coordinates ', position(), ' of cultural property: ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Coordinate ', position(), ' del bene culturale: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Coordinate ', position(), ' del bene culturale: ', $itemURI)" />
							</l0:name>
							<xsl:if test="./GLDPX and (not(starts-with(lower-case(normalize-space(./GLDPX)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLDPX)), 'n.r')))">
								<arco-location:long>
									<xsl:value-of select="normalize-space(./GLDPX)" />
								</arco-location:long>
							</xsl:if>
							<xsl:if test="./GLDPY and (not(starts-with(lower-case(normalize-space(./GLDPY)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLDPY)), 'n.r')))">
								<arco-location:lat>
									<xsl:value-of select="normalize-space(./GLDPY)" />
								</arco-location:lat>
							</xsl:if>
							<xsl:if test="../../GLQ/GLQI | ../../GLQ/GLQS">
								<arco-location:hasAltitude>
									<xsl:attribute name="rdf:resource">
	            						<xsl:value-of select="concat($NS, 'Altitude/', $itemURI, '-geometry-line-', $geometry-position, '-altitude')" />
	            				</xsl:attribute>
								</arco-location:hasAltitude>
							</xsl:if>
						</rdf:Description>
					</xsl:for-each>
					<!-- geometry technique for GL as an individual -->
					<xsl:if test="./GLT">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'GeometryTechnique/', arco-fn:urify(normalize-space(./GLT)))" />
	            		</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/GeometryTechnique" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GLT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GLT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- geometry method for GL as an individual -->
					<xsl:if test="./GLM and (not(starts-with(lower-case(normalize-space(./GLM)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLM)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'GeometryMethod/', arco-fn:urify(normalize-space(./GLM)))" />
	            		</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/GeometryMethod" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GLM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GLM)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- geometry base map for GL as an individual -->
					<xsl:if test="./GLB and (not(starts-with(lower-case(normalize-space(./GLB)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLB)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
      	      				<xsl:value-of select="concat($NS, 'BaseMap/', arco-fn:urify(normalize-space(./GLB/GLBB)))" />
        	    			</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/BaseMap" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GLB/GLBB)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GLB/GLBB)" />
							</l0:name>
							<xsl:if test="./GLB/GLBT and (not(starts-with(lower-case(normalize-space(./GLB/GLBT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLB/GLBT)), 'n.r')))">
								<tiapit:date>
									<xsl:value-of select="normalize-space(./GLB/GLBT)" />
								</tiapit:date>
							</xsl:if>
							<xsl:if test="./GLB/GLBO">
								<arco-core:note>
									<xsl:value-of select="normalize-space(./GLB/GLBO)" />
								</arco-core:note>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
					<!-- altitude for GL as an individual -->
					<xsl:if test="./GLQ/GLQI | ./GLQ/GLQS">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'Altitude/', $itemURI, '-geometry-line-', $geometry-position, '-altitude')" />
	            		</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/Altitude" />
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Altitudine del bene culturale: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Altitudine del bene culturale: ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Altitude of cultural property: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Altitude of cultural property: ', $itemURI)" />
							</l0:name>
							<xsl:if test="./GLQ/GLQS and (not(starts-with(lower-case(normalize-space(./GLQ/GLQS)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLQ/GLQS)), 'n.r')))">
								<arco-location:maxAlt>
									<xsl:value-of select="normalize-space(./GLQ/GLQS)" />
								</arco-location:maxAlt>
							</xsl:if>
							<xsl:if test="./GLQ/GLQI and (not(starts-with(lower-case(normalize-space(./GLQ/GLQI)), 'nr')) and not(starts-with(lower-case(normalize-space(./GLQ/GLQI)), 'n.r')))">
								<arco-location:minAlt>
									<xsl:value-of select="normalize-space(./GLQ/GLQI)" />
								</arco-location:minAlt>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- Geometry of cultural property as an individual for GA (Area) -->
			<xsl:if test="record/metadata/schede/*/GA/*/*">
				<xsl:variable name="geometry-position" select="position()" />
				<xsl:for-each select="record/metadata/schede/*/GA">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            				<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-polygon-', position())" />
            			</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Geometry'" />
	            			</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Geometry (area) ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Geometry (area) ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Georeferenziazione (areale) ', position(), ' del bene culturale: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Georeferenziazione (areale) ', position(), ' del bene culturale: ', $itemURI)" />
						</l0:name>
						<clvapit:isGeometryFor>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$culturalProperty" />
				        	</xsl:attribute>
						</clvapit:isGeometryFor>
						<clvapit:hasGeometryType>
							<xsl:attribute name="rdf:resource">
                        	    <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Polygon'" />
                        	</xsl:attribute>
						</clvapit:hasGeometryType>
						<xsl:for-each select="./GAD/GADP">
							<arco-location:hasCoordinates>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'Coordinates/', $itemURI, '-geometry-polygon-', $geometry-position, '-coordinates', '-', position())" />
            					</xsl:attribute>
							</arco-location:hasCoordinates>
						</xsl:for-each>
						<xsl:if test="./GAP and (not(starts-with(lower-case(normalize-space(./GAP)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAP)), 'n.r')))">
							<arco-location:spacialReferenceSystem>
								<xsl:value-of select="normalize-space(./GAP)" />
							</arco-location:spacialReferenceSystem>
						</xsl:if>
						<xsl:if test="./GAT and (not(starts-with(lower-case(normalize-space(./GAT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAT)), 'n.r')))">
							<arco-location:hasGeometryTechnique>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'GeometryTechnique/', arco-fn:urify(normalize-space(./GAT)))" />
            					</xsl:attribute>
							</arco-location:hasGeometryTechnique>
						</xsl:if>
						<xsl:if test="./GAM and (not(starts-with(lower-case(normalize-space(./GAM)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAM)), 'n.r')))">
							<arco-location:hasGeometryMethod>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'GeometryMethod/', arco-fn:urify(normalize-space(./GAM)))" />
            					</xsl:attribute>
							</arco-location:hasGeometryMethod>
						</xsl:if>
						<xsl:if test="./GAB">
							<arco-location:hasBaseMap>
								<xsl:attribute name="rdf:resource">
            						<xsl:value-of select="concat($NS, 'BaseMap/', arco-fn:urify(normalize-space(./GAB/GABB)))" />
            					</xsl:attribute>
							</arco-location:hasBaseMap>
						</xsl:if>
						<xsl:if test="./GAL and not(./GAL='.' or ./GAL='-' or ./GAL='/') and (not(starts-with(lower-case(normalize-space(./GAL)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAL)), 'n.r')))">
							<arco-location:hasLocationType>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
	                					<xsl:when test="lower-case(normalize-space(./GAL))='localizzazione fisica'">
	                    					<xsl:value-of select="'https://w3id.org/arco/ontology/location/CurrentPhysicalLocation'" />
	                        			</xsl:when>
	                            		<xsl:when test="contains(normalize-space(lower-case(./GAL)), 'successiva') or contains(normalize-space(lower-case(./GAL)), 'successivo') or contains(normalize-space(lower-case(./GAL)), 'provenienza') or contains(normalize-space(lower-case(./GAL)), 'provanienza') or contains(normalize-space(lower-case(./GAL)), 'proenienza') or contains(normalize-space(lower-case(./GAL)), 'provenianza') or contains(normalize-space(lower-case(./GAL)), 'proivenienza')">
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/PreviousLocation'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./GAL))='di archivio'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/ArchivalLocation'" />
	    								</xsl:when>
	        							<xsl:when test="contains(normalize-space(lower-case(./GAL)), 'produzione') or contains(normalize-space(lower-case(./GAL)), 'fabbricazione') or contains(normalize-space(lower-case(./GAL)), 'esecuzione') ">
	            							<xsl:value-of select="'https://w3id.org/arco/ontology/location/ProductionRealizationLocation'" />
	                					</xsl:when>
	                    				<xsl:when test="contains(normalize-space(lower-case(./GAL)), 'reperimento') or contains(normalize-space(lower-case(./GAL)), 'eperimento') or contains(normalize-space(lower-case(./GAL)), 'reprimento')">
	                        				<xsl:value-of select="'https://w3id.org/arco/ontology/location/FindingLocation'" />
	                            		</xsl:when>
	                                	<xsl:when test="lower-case(normalize-space(./GAL))='luogo di deposito' or lower-case(normalize-space(./GAL))='deposito temporaneo' or lower-case(normalize-space(./GAL))='deposito'">
	                                    	<xsl:value-of select="'https://w3id.org/arco/ontology/location/StorageLocation'" />
										</xsl:when>
										<xsl:when test="contains(normalize-space(lower-case(./GAL)), 'esposizione') or contains(normalize-space(lower-case(./GAL)), 'espositiva') or contains(normalize-space(lower-case(./GAL)), 'espositivo')">
	    									<xsl:value-of select="'https://w3id.org/arco/ontology/location/ExhibitionLocation'" />
	        							</xsl:when>
	            						<xsl:when test="lower-case(normalize-space(./GAL))='luogo di rilevamento' or lower-case(normalize-space(./GAL))='di rilevamento' or lower-case(normalize-space(./GAL))='localizzazione di rilevamento'">
	                						<xsl:value-of select="'https://w3id.org/arco/ontology/location/ObservationLocation'" />
	                    				</xsl:when>
	                        			<xsl:when test="lower-case(normalize-space(./GAL))='area rappresentata'">
	                            			<xsl:value-of select="'https://w3id.org/arco/ontology/location/SubjectLocation'" />
	                                	</xsl:when>
	                                	<xsl:otherwise>
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/UndefinedLocation'" />
	                                	</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</arco-location:hasLocationType>
						</xsl:if>
					</rdf:Description>
						<!-- geometry coordinates for GL as an individual -->
					<xsl:for-each select="./GAD/GADP">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'Coordinates/', $itemURI, '-geometry-polygon-', $geometry-position, '-coordinates', '-', position())" />
	            			</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/Coordinates" />
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Coordinates ', position(), ' of cultural property: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Coordinates ', position(), ' of cultural property: ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Coordinate ', position(), ' del bene culturale: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Coordinate ', position(), ' del bene culturale: ', $itemURI)" />
							</l0:name>
							<xsl:if test="./GADPX and (not(starts-with(lower-case(normalize-space(./GADPX)), 'nr')) and not(starts-with(lower-case(normalize-space(./GADPX)), 'n.r')))">
								<arco-location:long>
									<xsl:value-of select="normalize-space(./GADPX)" />
								</arco-location:long>
							</xsl:if>
							<xsl:if test="./GADPY and (not(starts-with(lower-case(normalize-space(./GADPY)), 'nr')) and not(starts-with(lower-case(normalize-space(./GADPY)), 'n.r')))">
								<arco-location:lat>
									<xsl:value-of select="normalize-space(./GADPY)" />
								</arco-location:lat>
							</xsl:if>
							<xsl:if test="../../GAQ/GAQI | ../../GAQ/GAQS">
								<arco-location:hasAltitude>
									<xsl:attribute name="rdf:resource">
	           							<xsl:value-of select="concat($NS, 'Altitude/', $itemURI, '-geometry-polygon-', $geometry-position, '-altitude')" />
	            					</xsl:attribute>
								</arco-location:hasAltitude>
							</xsl:if>
						</rdf:Description>
					</xsl:for-each>
						<!-- geometry technique for GA as an individual -->
					<xsl:if test="./GAT and (not(starts-with(lower-case(normalize-space(./GAT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAT)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'GeometryTechnique/', arco-fn:urify(normalize-space(./GAT)))" />
	            			</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/GeometryTechnique" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GAT)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GAT)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
						<!-- geometry method for GA as an individual -->
					<xsl:if test="./GAM and (not(starts-with(lower-case(normalize-space(./GAM)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAM)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
	            				<xsl:value-of select="concat($NS, 'GeometryMethod/', arco-fn:urify(normalize-space(./GAM)))" />
	            			</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/GeometryMethod" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GAM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GAM)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
						<!-- geometry base map for GA as an individual -->
					<xsl:if test="./GAB">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
    	        				<xsl:value-of select="concat($NS, 'BaseMap/', arco-fn:urify(normalize-space(./GAB/GABB)))" />
        	    			</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/BaseMap" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./GAB/GABB)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./GAB/GABB)" />
							</l0:name>
							<xsl:if test="./GAB/GABT and (not(starts-with(lower-case(normalize-space(./GAB/GABT)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAB/GABT)), 'n.r')))">
								<tiapit:date>
									<xsl:value-of select="normalize-space(./GAB/GABT)" />
								</tiapit:date>
							</xsl:if>
							<xsl:if test="./GAB/GABO">
								<arco-core:note>
									<xsl:value-of select="normalize-space(./GAB/GABO)" />
								</arco-core:note>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
					<!-- altitude for GA as an individual -->
					<xsl:if test="./GAQ/GAQI | ./GAQ/GAQS">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
            					<xsl:value-of select="concat($NS, 'Altitude/', $itemURI, '-geometry-polygon-', $geometry-position, '-altitude')" />
	            			</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/Altitude" />
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Altitudine del bene culturale: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Altitudine del bene culturale: ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Altitude of cultural property: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Altitude of cultural property: ', $itemURI)" />
							</l0:name>
							<xsl:if test="./GAQ/GAQS and (not(starts-with(lower-case(normalize-space(./GAQ/GAQS)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAQ/GAQS)), 'n.r')))">
								<arco-location:maxAlt>
									<xsl:value-of select="normalize-space(./GAQ/GAQS)" />
								</arco-location:maxAlt>
							</xsl:if>
							<xsl:if test="./GAQ/GAQI and (not(starts-with(lower-case(normalize-space(./GAQ/GAQI)), 'nr')) and not(starts-with(lower-case(normalize-space(./GAQ/GAQI)), 'n.r')))">
								<arco-location:minAlt>
									<xsl:value-of select="normalize-space(./GAQ/GAQI)" />
								</arco-location:minAlt>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- Name in time for 4.00 -->
			<xsl:if test="not($sheetType='MODI') and not($sheetType='SCAN')">
			<xsl:for-each select="record/metadata/schede/*/OG/OGD">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(./OGDN)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(./OGDN)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(./OGDN)" />
					</l0:name>
					<xsl:if test="./OGDR and (not(starts-with(lower-case(normalize-space(./OGDR)), 'nr')) and not(starts-with(lower-case(normalize-space(./OGDR)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
				        		<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(./OGDR))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./OGDS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./OGDS)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./OGDT and not(starts-with(lower-case(normalize-space(./OGDT)), 'nr')) and not(starts-with(lower-case(normalize-space(./OGDT)), 'n.r')) and not(contains(normalize-space(lower-case(./OGDT)), 'attuale')) and not(contains(normalize-space(lower-case(./OGDT)), 'corrente'))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="contains(normalize-space(lower-case(./OGDT)), 'attribuita')">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AssignedDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGDT))='altra lingua'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AlternativeDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGDT))='consuetudinaria'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CustomaryDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGDT))='dialettale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DialectalDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGDT))='gergale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SlangDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGDT))='idiomatica'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/IdiomaticDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGDT))='locale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LocalDesignation'" />
									</xsl:when>
									<xsl:when test="contains(normalize-space(lower-case(./OGDT)), 'originaria')"> 
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/OriginalDesignation'" />
									</xsl:when>
									<xsl:when test="contains(normalize-space(lower-case(./OGDT)), 'storica')"> 
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/HistoricalDesignation'" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AlternativeDesignation'" />
									</xsl:otherwise>
								</xsl:choose>
	                		</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./OGDT and not(starts-with(lower-case(normalize-space(./OGDT)), 'nr')) and not(starts-with(lower-case(normalize-space(./OGDT)), 'n.r')) and not(contains(normalize-space(lower-case(./OGDT)), 'attuale')) and not(contains(normalize-space(lower-case(./OGDT)), 'corrente'))">
						<xsl:choose>
							<xsl:when test="contains(normalize-space(lower-case(./OGDT)), 'attribuita')" />
							<xsl:when test="lower-case(normalize-space(./OGDT))='altra lingua'" />
							<xsl:when test="lower-case(normalize-space(./OGDT))='consuetudinaria'" />
							<xsl:when test="lower-case(normalize-space(./OGDT))='dialettale'" />
							<xsl:when test="lower-case(normalize-space(./OGDT))='gergale'" />
							<xsl:when test="lower-case(normalize-space(./OGDT))='idiomatica'" />
							<xsl:when test="lower-case(normalize-space(./OGDT))='locale'" />
							<xsl:when test="contains(normalize-space(lower-case(./OGDT)), 'originaria')" /> 
							<xsl:when test="contains(normalize-space(lower-case(./OGDT)), 'storica')" /> 
							<xsl:otherwise>
								<arco-core:note>
									<xsl:value-of select="concat('Specifiche della denominazione alternativa:', normalize-space(./OGDT))" />
								</arco-core:note>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:if>
					<xsl:if test="contains(normalize-space(lower-case(./OGDT)), 'attuale') or contains(normalize-space(lower-case(./OGDT)), 'corrente')">
						<arco-core:current>
							<xsl:value-of select="true()" />
						</arco-core:current>
					</xsl:if>
				</rdf:Description> 
				<!-- time interval as an individual -->
				<xsl:if test="./OGDR and (not(starts-with(lower-case(normalize-space(./OGDR)), 'nr')) and not(starts-with(lower-case(normalize-space(./OGDR)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
					    	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(./OGDR))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
					        	<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
		    			    </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./OGDR)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./OGDR)" />
						</l0:name>
						<arco-arco:startTime>
							<xsl:value-of select="normalize-space(./OGDR)" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="normalize-space(./OGDR)" />
						</arco-arco:endTime>
					</rdf:Description>	
				</xsl:if>
			</xsl:for-each>
			<!-- Name in time for < 4.00 -->
			<xsl:for-each select="record/metadata/schede/*/OG/OGT/OGTN">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />   
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(.)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(.)" />
					</l0:name>
					<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:for-each>
			</xsl:if>
			<!-- Name in time for MODI and SCAN -->
			<xsl:if test="($sheetType='MODI') or ($sheetType='SCAN')">
				<xsl:for-each select="record/metadata/schede/*/OG/OGN">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            	            <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />  
                	    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
						<arco-core:current>
							<xsl:value-of select="true()" />
						</arco-core:current>
					</rdf:Description> 
				</xsl:for-each>
			</xsl:if>
			<xsl:for-each select="record/metadata/schede/*/OG/OGA">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(string-join(./OGAD,'-'))))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(string-join(./OGAD,', '))" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(string-join(./OGAD,', '))" />
					</l0:name>
					<arco-core:current>
						<xsl:value-of select="false()" />
					</arco-core:current>
					<xsl:if test="./OGAG and (not(starts-with(lower-case(normalize-space(./OGAG)), 'nr')) and not(starts-with(lower-case(normalize-space(./OGAG)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="contains(normalize-space(lower-case(./OGAG)), 'attribuita')">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AssignedDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAG))='altra lingua'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AlternativeDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAG))='consuetudinaria'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CustomaryDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAG))='dialettale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DialectalDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAG))='gergale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SlangDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAG))='idiomatica'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/IdiomaticDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAG))='locale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LocalDesignation'" />
									</xsl:when>
									<xsl:when test="contains(normalize-space(lower-case(./OGAG)), 'originaria')"> 
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/OriginalDesignation'" />
									</xsl:when>
									<xsl:when test="contains(normalize-space(lower-case(./OGAG)), 'storica')"> 
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/HistoricalDesignation'" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AlternativeDesignation'" />
									</xsl:otherwise>
								</xsl:choose>
	                		</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./OGAS and (not(starts-with(lower-case(normalize-space(./OGAS)), 'nr')) and not(starts-with(lower-case(normalize-space(./OGAS)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="contains(normalize-space(lower-case(./OGAS)), 'attribuita')">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AssignedDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAS))='altra lingua'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AlternativeDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAS))='consuetudinaria'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CustomaryDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAS))='dialettale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DialectalDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAS))='gergale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SlangDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAS))='idiomatica'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/IdiomaticDesignation'" />
									</xsl:when>
									<xsl:when test="lower-case(normalize-space(./OGAS))='locale'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/LocalDesignation'" />
									</xsl:when>
									<xsl:when test="contains(normalize-space(lower-case(./OGAS)), 'originaria')"> 
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/OriginalDesignation'" />
									</xsl:when>
									<xsl:when test="contains(normalize-space(lower-case(./OGAS)), 'storica')"> 
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/HistoricalDesignation'" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AlternativeDesignation'" />
									</xsl:otherwise>
								</xsl:choose>
	                		</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="./OGAG and not(starts-with(lower-case(normalize-space(./OGAG)), 'nr')) and not(starts-with(lower-case(normalize-space(./OGAG)), 'n.r')) and not(contains(normalize-space(lower-case(./OGAG)), 'attuale')) and not(contains(normalize-space(lower-case(./OGAG)), 'corrente'))">
						<xsl:choose>
							<xsl:when test="contains(normalize-space(lower-case(./OGAG)), 'attribuita')" />
							<xsl:when test="lower-case(normalize-space(./OGAG))='altra lingua'" />
							<xsl:when test="lower-case(normalize-space(./OGAG))='consuetudinaria'" />
							<xsl:when test="lower-case(normalize-space(./OGAG))='dialettale'" />
							<xsl:when test="lower-case(normalize-space(./OGAG))='gergale'" />
							<xsl:when test="lower-case(normalize-space(./OGAG))='idiomatica'" />
							<xsl:when test="lower-case(normalize-space(./OGAG))='locale'" />
							<xsl:when test="contains(normalize-space(lower-case(./OGAG)), 'originaria')" /> 
							<xsl:when test="contains(normalize-space(lower-case(./OGAG)), 'storica')" /> 
							<xsl:otherwise>
								<arco-core:note>
									<xsl:value-of select="concat('Specifiche della denominazione alternativa:', normalize-space(./OGAG))" />
								</arco-core:note>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:if>
				</rdf:Description> 
			</xsl:for-each>
			<!-- Name in time for NU (OGTO) -->
			<xsl:if test="record/metadata/schede/NU/OG/OGT/OGTO">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/NU/OG/OGT/OGTO)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTO)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTO)" />
					</l0:name>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/OriginalDesignation'" />
						</xsl:attribute>
					</arco-core:hasType>
					<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:if>
			<!-- Name in time for VeAC (OGTS) -->
			<xsl:if test="record/metadata/schede/VeAC/OG/OGT/OGTS">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(rrecord/metadata/schede/VeAC/OG/OGT/OGTS)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/VeAC/OG/OGT/OGTS)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/VeAC/OG/OGT/OGTS)" />
					</l0:name>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/HistoricalDesignation'" />
						</xsl:attribute>
					</arco-core:hasType>
					<arco-core:current>
						<xsl:value-of select="false()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:if>
			<!-- Name in time for A 2.00 -->
			<xsl:if test="($sheetType='A' or $sheetType='PG') and ($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')">
				<xsl:if test="record/metadata/schede/*/OG/OGT/OGTD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            	            <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTD)))" />
                	    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTD)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGT/OGTD)" />
						</l0:name>
						<arco-core:current>
							<xsl:value-of select="true()" />
						</arco-core:current>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- Name in time for MA e CA -->
			<xsl:for-each select="record/metadata/schede/*/OG/OGT/OGTU">
				<xsl:if test="not($sheetType='FF')">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat('https://w3id.org/arco/resource/DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space()))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space()" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space()" />
					</l0:name>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/HistoricalDesignation'" />
						</xsl:attribute>
					</arco-core:hasType>
					<arco-core:current>
						<xsl:value-of select="false()" />
					</arco-core:current>
				</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- Name in time for SI -->	
			<xsl:if test="record/metadata/schede/SI/OG/OGT/OGTY">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                       	<xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTY)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/SI/OG/OGT/OGTY)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/SI/OG/OGT/OGTY)" />
					</l0:name>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/HistoricalDesignation'" />
						</xsl:attribute>
					</arco-core:hasType>
					<arco-core:current>
						<xsl:value-of select="false()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:if>		
			<!-- Name in time BNB -->
			<xsl:if test="record/metadata/schede/BNB/OG/OGT/OGTD and starts-with(lower-case(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTD)), 'erbario')">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTE)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/BNB/OG/OGT/OGTE)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/BNB/OG/OGT/OGTE)" />
					</l0:name>
					<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/BNB/OG/OGT/OGTD and starts-with(lower-case(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTD)), 'collezione')">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DesignationInTime/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/BNB/OG/OGT/OGTC)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DesignationInTime'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/BNB/OG/OGT/OGTC)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/BNB/OG/OGT/OGTC)" />
					</l0:name>
					<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:if>
			<!-- functional purpose for CA and MA -->
			<xsl:if test="record/metadata/schede/*/OG/OGT/OGTF and ($sheetType='CA' or $sheetType='MA')">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
	                            <xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGT/OGTF)))" />
	                     </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of
							select="'https://w3id.org/arco/ontology/context-description/UseFunction'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/*/OG/OGT/OGTF)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/*/OG/OGT/OGTF)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- Name in time - Time interval - rules for previous model <xsl:if test="record/metadata/schede/*/OG/OGD/OGDR"> 
				<rdf:Description> <xsl:attribute name="rdf:about"> <xsl:value-of select="concat($NS,'TimeInterval/', 
				arco-fn:urify(record/metadata/schede/*/OG/OGD/OGDR))" /> </xsl:attribute> 
				<rdf:type> <xsl:attribute name="rdf:resource"> <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" 
				/> </xsl:attribute> </rdf:type> <rdfs:label> <xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGD/OGDR)" 
				/> </rdfs:label> <arco-arco:startTime> <xsl:value-of select="record/metadata/schede/*/OG/OGD/OGDR" 
				/> </arco-arco:startTime> </rdf:Description> </xsl:if> -->

			<!-- We add the scope of protection as an individual. The scope of protection 
				is associated with a Cultural Property by the property arco-dd:hasMibactScopeOfProtection. 
				ALERT: this part has been removed in version 0.2 as the Mibact Scope of Protection 
				has been defined within the ontologies. -->
			<!-- xsl:if test="record/metadata/schede/*/OG/AMB"> <rdf:Description> 
				<xsl:attribute name="rdf:about"> <xsl:value-of select="concat($NS,'MibactScopeOfProtection/', 
				arco-fn:urify(normalize-space(record/metadata/schede/*/OG/AMB)))" /> </xsl:attribute> 
				<rdf:type> <xsl:attribute name="rdf:resource"> <xsl:value-of select="'https://w3id.org/arco/cpdescription/MibactScopeOfProtection'" 
				/> </xsl:attribute> </rdf:type> <rdfs:label> <xsl:value-of select="normalize-space(record/metadata/schede/*/OG/AMB)" 
				/> </rdfs:label> </rdf:Description> </xsl:if -->
			<!-- We add the category as an individual. The category is associated 
				with a Cultural Property by the property arco-dd:hasCategory. -->
			<!-- Cultural property category -->
			<xsl:for-each select="record/metadata/schede/*/OG/CTG">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of
						select="concat($NS,'CulturalPropertyCategory/', arco-fn:urify(normalize-space()))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of
							select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCategory'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space()" />
					</rdfs:label>
					<!-- xsl:variable name="skos-term"> <xsl:choose> <xsl:when test="$sheetType='BDM' 
						and starts-with($sheetVersion, '4')"> <xsl:value-of select="arco-fn:bdm-definition(normalize-space(record/metadata/schede/*/OG/CTG))" 
						/> </xsl:when> </xsl:choose> </xsl:variable> <xsl:if test="$skos-term != 
						''"> <skos:closeMatch> <xsl:attribute name="rdf:resource"> <xsl:value-of 
						select="$skos-term" /> </xsl:attribute> </skos:closeMatch> </xsl:if -->
				</rdf:Description>
			</xsl:for-each>
			<xsl:if test="record/metadata/schede/*/CT/CTG">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of
						select="concat('https://w3id.org/arco/resource/CulturalPropertyCategory/', arco-fn:urify(normalize-space(record/metadata/schede/*/CT/CTG)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of
							select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCategory'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/*/CT/CTG)" />
					</rdfs:label>
					<!-- xsl:variable name="skos-term"> <xsl:choose> <xsl:when test="$sheetType='BDM' 
						and starts-with($sheetVersion, '4')"> <xsl:value-of select="arco-fn:bdm-definition(normalize-space(record/metadata/schede/*/OG/CTG))" 
						/> </xsl:when> </xsl:choose> </xsl:variable> <xsl:if test="$skos-term != 
						''"> <skos:closeMatch> <xsl:attribute name="rdf:resource"> <xsl:value-of 
						select="$skos-term" /> </xsl:attribute> </skos:closeMatch> </xsl:if -->
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/RA/OG/CLS">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of
						select="concat($NS,'CulturalPropertyCategory/', arco-fn:urify(normalize-space(record/metadata/schede/RA/OG/CLS)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of
							select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCategory'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/RA/OG/CLS)" />
					</rdfs:label>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/FF/OG/OGT/OGTO">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'SortingCriterion/', arco-fn:urify(normalize-space(record/metadata/schede/FF/OG/OGT/OGTO)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/SortingCriterion'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/FF/OG/OGT/OGTO)" />
					</rdfs:label>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/MA/OG/OGT/OGTC">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of
						select="concat($NS,'CulturalPropertyCategory/', arco-fn:urify(normalize-space(record/metadata/schede/MA/OG/OGT/OGTC)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCategory'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/MA/OG/OGT/OGTC)" />
					</rdfs:label>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/CA/OG/OGT/OGTC">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of
						select="concat($NS,'CulturalPropertyCategory/', arco-fn:urify(normalize-space(record/metadata/schede/CA/OG/OGT/OGTC)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of
							select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCategory'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/CA/OG/OGT/OGTC)" />
					</rdfs:label>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/VeAC/OG/OGT/OGTC">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of
						select="concat($NS,'CulturalPropertyCategory/', arco-fn:urify(normalize-space(record/metadata/schede/VeAC/OG/OGT/OGTC)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of
							select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCategory'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/VeAC/OG/OGT/OGTC)" />
					</rdfs:label>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/AT/OG/OGT/OGTP">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of
						select="concat($NS,'CulturalPropertyCategory/', arco-fn:urify(normalize-space(record/metadata/schede/AT/OG/OGT/OGTP)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of
							select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCategory'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/AT/OG/OGT/OGTP)" />
					</rdfs:label>
				</rdf:Description>
			</xsl:if>
			<xsl:for-each select="record/metadata/schede/BDM/OG/OGT">
				<xsl:if test="./OGTG">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
            	            <xsl:choose>
								<xsl:when test="./OGTE">
									<xsl:value-of select="concat($NS,'CulturalPropertyCategory/', arco-fn:urify(normalize-space(./OGTG)), '-', arco-fn:urify(normalize-space(./OGTE)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS,'CulturalPropertyCategory/', arco-fn:urify(normalize-space(./OGTG)))" />
								</xsl:otherwise>
							</xsl:choose>
        	            </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                    	        <xsl:value-of select="'https://w3id.org/arco/ontology/arco/CulturalPropertyCategory'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./OGTE">
									<xsl:value-of select="concat(normalize-space(./OGTG), '. ', normalize-space(./OGTE))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(./OGTG)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- detection method -->
			<xsl:for-each select="record/metadata/schede/*/OG/OGM"><!-- allow multiple values es: ICCD13661286 -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DetectionMethod/', arco-fn:urify(.))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DetectionMethod'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space()" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space()" />
					</l0:name>
				</rdf:Description>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/CD/OGM"><!-- allow multiple values es: ICCD13661286 -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS,'DetectionMethod/', arco-fn:urify(.))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/DetectionMethod'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space()" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space()" />
					</l0:name>
				</rdf:Description>
			</xsl:for-each>
			<!-- detection method for SI -->
			<xsl:if test="record/metadata/schede/SI/OG/OGT/OGTA">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of
						select="concat($NS,'DetectionMethod/', arco-fn:urify(normalize-space(record/metadata/schede/SI/OG/OGT/OGTA)))" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of
							select="'https://w3id.org/arco/ontology/context-description/DetectionMethod'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/SI/OG/OGT/OGTA)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of
							select="normalize-space(record/metadata/schede/SI/OG/OGT/OGTA)" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- main discipline (PST) as an individual -->
			<xsl:for-each select="record/metadata/schede/*/CT/CTP[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'SubjectDiscipline/', arco-fn:urify(normalize-space(.)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'http://dati.beniculturali.it/cis/SubjectDiscipline'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(.)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(.)" />
					</l0:name>
				</rdf:Description>
			</xsl:for-each>
			<!-- alternative discipline (PST) as an individual -->
			<xsl:for-each select="record/metadata/schede/*/CT/CTA[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'SubjectDiscipline/', arco-fn:urify(normalize-space(.)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'http://dati.beniculturali.it/cis/SubjectDiscipline'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(.)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(.)" />
					</l0:name>
				</rdf:Description>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/OG/CTA[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'SubjectDiscipline/', arco-fn:urify(normalize-space(.)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'http://dati.beniculturali.it/cis/SubjectDiscipline'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(.)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(.)" />
					</l0:name>
				</rdf:Description>
			</xsl:for-each>
			<!-- archaeological material (TMA) -->
			<xsl:for-each select="record/metadata/schede/TMA/MA">
				<xsl:choose>
					<xsl:when test="./MAD">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ArchaeologicalMaterial/', $itemURI, '-', position(), arco-fn:urify(normalize-space(./MAD/MADD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/arco/ArchaeologicalMaterial'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./MAD/MADD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./MAD/MADD)" />
							</l0:name>
							<xsl:if test="./MAC/MACC">
								<arco-arco:hasArchaeologicalMaterialCategory>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'ArchaeologicalMaterialCategory/', arco-fn:urify(normalize-space(./MAC/MACC)))" />
									</xsl:attribute>
								</arco-arco:hasArchaeologicalMaterialCategory>
							</xsl:if>
							<xsl:if test="./MAD/MADQ">
								<arco-arco:numberOfComponents>
									<xsl:value-of select="normalize-space(./MAD/MADQ)" />
								</arco-arco:numberOfComponents>
							</xsl:if>
							<xsl:if test="./MAD/MADI">
								<arco-lite:currentInventoryNumber>
									<xsl:value-of select="normalize-space(./MAD/MADI)" />
								</arco-lite:currentInventoryNumber>
							</xsl:if>
							<xsl:if test="./MAD/MADN">
								<arco-core:note>
									<xsl:value-of select="normalize-space(./MAD/MADN)" />
								</arco-core:note>
							</xsl:if>
						</rdf:Description>
					</xsl:when>
					<xsl:otherwise>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:choose>
									<xsl:when test="./MAC/MACD">
										<xsl:value-of select="concat($NS, 'ArchaeologicalMaterial/', $itemURI, '-', position(), arco-fn:urify(normalize-space(./MAC/MACC)), arco-fn:urify(normalize-space(./MAC/MACD)))" />
									</xsl:when>
									<xsl:when test="./MAC/MACL">
										<xsl:value-of select="concat($NS, 'ArchaeologicalMaterial/', $itemURI, '-', position(), arco-fn:urify(normalize-space(./MAC/MACL)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'ArchaeologicalMaterial/', $itemURI, '-', position(), arco-fn:urify(normalize-space(./MAC/MACC)))" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/arco/ArchaeologicalMaterial'" />
								</xsl:attribute>
							</rdf:type>
							<xsl:choose>
								<xsl:when test="./MAC/MACD">
									<rdfs:label>
										<xsl:value-of select="concat(normalize-space(./MAC/MACC), ' - ', normalize-space(./MAC/MACD))" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="concat(normalize-space(./MAC/MACC), ' - ', normalize-space(./MAC/MACD))" />
									</l0:name>
								</xsl:when>
								<xsl:when test="./MAC/MACL">
									<rdfs:label>
										<xsl:value-of select="normalize-space(./MAC/MACL)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select=" normalize-space(./MAC/MACL)" />
									</l0:name>
								</xsl:when>
								<xsl:otherwise>
									<rdfs:label>
										<xsl:value-of select="normalize-space(./MAC/MACC)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select=" normalize-space(./MAC/MACC)" />
									</l0:name>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:if test="./MAS">
								<arco-core:specifications>
									<xsl:value-of select="normalize-space(./MAS)" />
								</arco-core:specifications>
							</xsl:if>
							<xsl:if test="./MAC/MACC">
								<arco-arco:hasArchaeologicalMaterialCategory>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'ArchaeologicalMaterialCategory/', arco-fn:urify(normalize-space(./MAC/MACC)))" />
									</xsl:attribute>
								</arco-arco:hasArchaeologicalMaterialCategory>
							</xsl:if>
							<xsl:if test="./MAC/MACP">
								<xsl:variable name="macp" select="./MAC/MACP" />
								<xsl:variable name="novirgola" select="translate($macp, ',', '_')" />
								<xsl:variable name="reper" select="translate($novirgola, '/ ', ',')" />
								<xsl:variable name="repersplit" select="arco-fn:split($reper)" />
								<xsl:for-each select="$repersplit">
									<arco-cd:hasReferenceCatalogue>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'ReferenceCatalogue/', arco-fn:urify(.))" />
										</xsl:attribute>
									</arco-cd:hasReferenceCatalogue>
								</xsl:for-each>
							</xsl:if>
							<xsl:if test="./MAC/MACQ">
								<arco-arco:numberOfComponents>
									<xsl:value-of select="normalize-space(./MAC/MACQ)" />
								</arco-arco:numberOfComponents>
							</xsl:if>
						</rdf:Description>
						<!-- reference catalogue as an individual -->
						<xsl:if test="./MAC/MACP">
							<xsl:variable name="macp" select="./MAC/MACP" />
							<xsl:variable name="novirgola" select="translate($macp, ',', '_')" />
							<xsl:variable name="reper" select="translate($novirgola, '/ ', ',')" />
							<xsl:variable name="repersplit" select="arco-fn:split($reper)" />
							<xsl:for-each select="$repersplit">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'ReferenceCatalogue/', arco-fn:urify(.))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
				        		    		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ReferenceCatalogue'" />
				            			</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="$repersplit" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="$repersplit" />
									</l0:name>
								</rdf:Description>
							</xsl:for-each>
						</xsl:if>
					</xsl:otherwise>
				</xsl:choose>			
				<!-- archaeological material category as an individual -->
				<xsl:if test="./MAC/MACC">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'ArchaeologicalMaterialCategory/', arco-fn:urify(normalize-space(./MAC/MACC)))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/arco/ArchaeologicalMaterialCategory" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./MAC/MACC)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./MAC/MACC)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/DA/MTP">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ArchaeologicalMaterial/', $itemURI, '-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/arco/ArchaeologicalMaterial'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Materiale archeologico ', position(), ' del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Materiale archeologico ', position(), ' del bene culturale ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Archaeological material ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Archaeological material ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<xsl:if test="./MTPD">
						<arco-core:description>
							<xsl:value-of select="normalize-space(string-join(./MTPD,' ; '))" />
						</arco-core:description>
					</xsl:if>
					<xsl:if test="./MTPS">
						<arco-arco:archaeologicalMaterialDensity>
							<xsl:value-of select="normalize-space(./MTPS)" />
						</arco-arco:archaeologicalMaterialDensity>
					</xsl:if>
					<xsl:if test="./MTPE">
						<arco-lite:hasRealizationDate>
							<xsl:attribute name="rdf:resource">
				            	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(./MTPE))" />
							</xsl:attribute>
						</arco-lite:hasRealizationDate>
					</xsl:if>
				</rdf:Description>
				<xsl:if test="./MTPE">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(./MTPE))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
		    	    			<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="./MTPE" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="./MTPE" />
						</l0:name>
						<arco-arco:startTime>
							<xsl:value-of select="./MTPE" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="./MTPE" />
						</arco-arco:endTime>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- position on ground level -->
			<xsl:if test="record/metadata/schede/*/DA/PLT">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'PositionOnGroundLevel/', $itemURI)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
	    	    			<xsl:value-of select="'https://w3id.org/arco/ontology/construction-description/PositionOnGroundLevel'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Posizione rispetto al livello del terreno del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Posizione rispetto al livello del terreno del bene culturale: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Position on ground level of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Position on ground level of cultural property: ', $itemURI)" />
					</l0:name>
					<xsl:if test="record/metadata/schede/*/DA/PLT/PLTD">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
	    	    				<xsl:value-of 	select="concat($NS, 'PositionOnGroundLevelType/', arco-fn:urify(normalize-space(record/metadata/schede/*/DA/PLT/PLTD)))" />
							</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/DA/PLT/PLTA">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
				            	<xsl:value-of	select="concat($NS, 'TimeInterval/', arco-fn:urify(record/metadata/schede/*/DA/PLT/PLTA))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
				</rdf:Description>
				<xsl:if test="record/metadata/schede/*/DA/PLT/PLTD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of 	select="concat($NS, 'PositionOnGroundLevelType/', arco-fn:urify(normalize-space(record/metadata/schede/*/DA/PLT/PLTD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	    	    				<xsl:value-of select="'https://w3id.org/arco/ontology/construction-description/PositionOnGroundLevelType'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="record/metadata/schede/*/DA/PLT/PLTD" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="record/metadata/schede/*/DA/PLT/PLTD" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/DA/PLT/PLTA">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(record/metadata/schede/*/DA/PLT/PLTA))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	    		    			<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="record/metadata/schede/*/DA/PLT/PLTA" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="record/metadata/schede/*/DA/PLT/PLTA" />
						</l0:name>
						<arco-arco:startTime>
							<xsl:value-of select="record/metadata/schede/*/DA/PLT/PLTA" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="record/metadata/schede/*/DA/PLT/PLTA" />
						</arco-arco:endTime>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- fruition (VeAC) as an individual -->
			<xsl:if test="record/metadata/schede/*/AU/FRU">
				<xsl:for-each select="record/metadata/schede/*/AU/FRU">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Use/', $itemURI, '-clothing-use-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Fruizione ', position(), ' del bene: ', $itemURI)" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Fruition ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Fruizione ', position(), ' del bene: ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Fruition ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./FRUD and (not(starts-with(lower-case(normalize-space(./FRUD)), 'nr')) and not(starts-with(lower-case(normalize-space(./FRUD)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./FRUD)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, position(), '-user')" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
						<xsl:if test="./FRUC and (not(starts-with(lower-case(normalize-space(./FRUC)), 'nr')) and not(starts-with(lower-case(normalize-space(./FRUC)), 'n.r')))">
							<arco-cd:hasCircumstance>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./FRUC)))" />
								</xsl:attribute>
							</arco-cd:hasCircumstance>
						</xsl:if>
						<xsl:if test="./FRUF and (not(starts-with(lower-case(normalize-space(./FRUF)), 'nr')) and not(starts-with(lower-case(normalize-space(./FRUF)), 'n.r')))">
							<arco-core:informationSource>
								<xsl:value-of select="./FRUF" />
							</arco-core:informationSource>
						</xsl:if>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, position(), '-user')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Utente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./FRUN))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('User ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./FRUN))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Utente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(./FRUN))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('User ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(./FRUN))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/User')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FRUN))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/User')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Utente'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'User'" />
						</rdfs:label>
					</rdf:Description>
					<!-- agent as an indiviual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	            			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FRUN))" />
	            		</xsl:attribute>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(./FRUN)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(./FRUN)" />
						</l0:name>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
					</rdf:Description>
					<!-- Time interval as an individual -->
					<xsl:if test="./FRUD and (not(starts-with(lower-case(normalize-space(./FRUD)), 'nr')) and not(starts-with(lower-case(normalize-space(./FRUD)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./FRUD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./FRUD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./FRUD)" />
							</l0:name>
							<tiapit:startTime>
								<xsl:value-of select="normalize-space(./FRUD)" />
							</tiapit:startTime>
							<tiapit:endTime>
								<xsl:value-of select="normalize-space(./FRUD)" />
							</tiapit:endTime>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./FRUN and (not(starts-with(lower-case(normalize-space(./FRUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./FRUN)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./FRUN))" />
                			</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./FRUN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./FRUN)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./FRUC and (not(starts-with(lower-case(normalize-space(./FRUC)), 'nr')) and not(starts-with(lower-case(normalize-space(./FRUC)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                				<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./FRUC)))" />
                			</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Circumstance'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./FRUC)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./FRUC)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- Alternative Identifier as an individual (AC/ACC) -->
			<xsl:if test="record/metadata/schede/*/*/ACC">
				<xsl:for-each select="record/metadata/schede/*/*/ACC">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        	<xsl:choose>
								<xsl:when test="./*">
									<xsl:value-of select="concat($NS, 'Identifier/', $itemURI, arco-fn:arcofy(./ACCC))" />
								</xsl:when>
								<xsl:otherwise> 
									<xsl:value-of select="concat($NS, 'Identifier/', $itemURI, arco-fn:arcofy(.))" />
								</xsl:otherwise>
							</xsl:choose>
                    	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./*">
									<xsl:value-of select="normalize-space(./ACCC)" />
								</xsl:when>
								<xsl:otherwise> 
									<xsl:value-of select="normalize-space(.)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name >
							<xsl:choose>
								<xsl:when test="./*">
									<xsl:value-of select="normalize-space(./ACCC)" />
								</xsl:when>
								<xsl:otherwise> 
									<xsl:value-of select="normalize-space(.)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<arco-core:identifier>
							<xsl:choose>
								<xsl:when test="./*">
									<xsl:value-of select="normalize-space(./ACCC)" />
								</xsl:when>
								<xsl:otherwise> 
									<xsl:value-of select="normalize-space(.)" />
								</xsl:otherwise>
							</xsl:choose>
						</arco-core:identifier>
						<xsl:if test="./ACCS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./ACCS)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./ACCP and (not(starts-with(lower-case(normalize-space(./ACCP)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACCP)), 'n.r')))">
							<arco-catalogue:referenceProject>
								<xsl:value-of select="normalize-space(./ACCP)" />
							</arco-catalogue:referenceProject>
						</xsl:if>
						<xsl:if test="./ACCW and (not(starts-with(lower-case(normalize-space(./ACCW)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACCW)), 'n.r')))">
							<smapit:URL>
								<xsl:attribute name="rdf:resource">
								<xsl:value-of select="./ACCW" />
							</xsl:attribute>
							</smapit:URL>
						</xsl:if>
						<xsl:if test="./ACCE and (not(starts-with(lower-case(normalize-space(./ACCE)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACCE)), 'n.r')))">
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ACCE))" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</xsl:if>
					</rdf:Description>
					<!-- Organization as an individual -->
					<xsl:if test="./ACCE and (not(starts-with(lower-case(normalize-space(./ACCE)), 'nr')) and not(starts-with(lower-case(normalize-space(./ACCE)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./ACCE))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./ACCE)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./ACCE)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- Access profile as an individual -->
			<xsl:if test="record/metadata/schede/*/AD/ADS">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'AccessProfile/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/AD/ADS/ADSP)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/AccessProfile'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Profilo d''accesso ai dati della scheda catalografica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/AD/ADS/ADSP))" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Profilo d''accesso alla scheda catalografica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/AD/ADS/ADSP))" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Access profile to catalogue record of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/AD/ADS/ADSP))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Access profile to catalogue record of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/AD/ADS/ADSP))" />
					</l0:name>
					<arco-catalogue:hasPrivacyLevel>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/AD/ADS/ADSP='1'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MinimumPrivacy'" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/AD/ADS/ADSP='2'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MediumPrivacy'" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/AD/ADS/ADSP='3'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MaximumPrivacy'" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'PrivacyLevel/', arco-fn:urify(normalize-space(record/metadata/schede/*/AD/ADS/ADSP)))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
					</arco-catalogue:hasPrivacyLevel>
					<xsl:if test="record/metadata/schede/*/AD/ADS/ADSM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AD/ADS/ADSM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AD/ADS/ADSM)), 'n.r')))">
						<arco-catalogue:hasPrivacyReason>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'PrivacyReason/', arco-fn:urify(normalize-space(record/metadata/schede/*/AD/ADS/ADSM)))" />
							</xsl:attribute>
						</arco-catalogue:hasPrivacyReason>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/AD/ADS/ADSD and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AD/ADS/ADSD)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AD/ADS/ADSD)), 'n.r')))">
						<arco-cd:expiryDate>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/AD/ADS/ADSD)" />
						</arco-cd:expiryDate>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/AD/ADS/ADSN and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AD/ADS/ADSN)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AD/ADS/ADSN)), 'n.r')))">
						<arco-core:note>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/AD/ADS/ADSN)" />
						</arco-core:note>
					</xsl:if>
				</rdf:Description>
				<!-- privacy reason as an individuals -->
				<xsl:if test="record/metadata/schede/*/AD/ADS/ADSM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AD/ADS/ADSM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/AD/ADS/ADSM)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'PrivacyReason/', arco-fn:urify(normalize-space(record/metadata/schede/*/AD/ADS/ADSM)))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/PrivacyReason'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/AD/ADS/ADSM)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/AD/ADS/ADSM)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/AD/ADP">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'AccessProfile/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/AD/ADP)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/AccessProfile'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Profilo d''accesso ai dati della scheda catalografica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/AD/ADP))" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Profilo d''accesso alla scheda catalografica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/AD/ADP))" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Access profile to catalogue record of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/AD/ADP))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Access profile to catalogue record of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/AD/ADP))" />
					</l0:name>
					<arco-catalogue:hasPrivacyLevel>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/AD/ADP='1'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MinimumPrivacy'" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/AD/ADP='2'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MediumPrivacy'" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/AD/ADP='3'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MaximumPrivacy'" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'PrivacyLevel/', arco-fn:urify(normalize-space(record/metadata/schede/*/AD/ADP)))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
					</arco-catalogue:hasPrivacyLevel>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/CM/ADP">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'AccessProfile/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/CM/ADP)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/AccessProfile'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Profilo d''accesso ai dati della scheda catalografica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/CM/ADP))" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Profilo d''accesso alla scheda catalografica del bene culturale ', $itemURI, ': ', normalize-space(record/metadata/schede/*/CM/ADP))" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Access profile to catalogue record of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/CM/ADP))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Access profile to catalogue record of cultural property ', $itemURI, ': ', normalize-space(record/metadata/schede/*/CM/ADP))" />
					</l0:name>
					<arco-catalogue:hasPrivacyLevel>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/CM/ADP='1'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MinimumPrivacy'" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/CM/ADP='2'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MediumPrivacy'" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/CM/ADP='3'">
									<xsl:value-of select="'https://w3id.org/arco/ontology/catalogue/MaximumPrivacy'" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'PrivacyLevel/', arco-fn:urify(normalize-space(record/metadata/schede/*/CM/ADP)))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
					</arco-catalogue:hasPrivacyLevel>
				</rdf:Description>
			</xsl:if>
			<!-- authorship attribution as an individual -->
			<xsl:if test="not ($sheetType='F' and ($sheetVersion='3.00' or $sheetVersion='3.00_ICCD0' or $sheetVersion='2.00' or $sheetVersion='2.00_ICCD0' or $sheetVersion='1.00' or $sheetVersion='1.00_ICCD0'))">
				<!-- We add the cultural scope attribution as an individual. -->
				<xsl:for-each select="record/metadata/schede/*/AU/ATB">
					<xsl:if test="(not(starts-with(lower-case(normalize-space(./ATBD)), 'nr')) and not(starts-with(lower-case(normalize-space(./ATBD)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                	        <xsl:value-of select="concat($NS, 'Responsibility/', $itemURI, '-cultural-scope-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ambito culturale del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Ambito culturale del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Cultural scope of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Cultural scope of cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./ATBD and not(lower-case(normalize-space(./ATBD))='nr' or lower-case(normalize-space(./ATBD))='n.r.' or lower-case(normalize-space(./ATBD))='nr (recupero pregresso)')">
							<arco-cd:hasCulturalScope>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="concat($NS, 'CulturalScope/', arco-fn:urify(normalize-space(./ATBD)))" />
								</xsl:attribute>
							</arco-cd:hasCulturalScope>
						</xsl:if>
						<xsl:if test="./ATBR and (not(starts-with(lower-case(normalize-space(./ATBR)), 'nr')) and not(starts-with(lower-case(normalize-space(./ATBR)), 'n.r')))">
							<arco-cd:hasInterventionRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./ATBR)))" />
								</xsl:attribute>
							</arco-cd:hasInterventionRole>
						</xsl:if>
						<xsl:if test="./ATBS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./ATBS)" />
							</arco-core:note>
						</xsl:if>
						<xsl:for-each select="./ATBM[not(lower-case(normalize-space())='nr' or lower-case(normalize-space())='nr (recupero pregresso)' or lower-case(normalize-space())='n.r.')]"><!-- allow multiple values es: ICCD11268160 -->
							<arco-core:informationSource>
								<xsl:value-of select="normalize-space()" />
							</arco-core:informationSource>
						</xsl:for-each>
						<xsl:if test="contains((./ATBD), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
					</rdf:Description>
					<!-- We add the cultural scope attribution role as an individual. -->
					<xsl:if test="./ATBR and (not(starts-with(lower-case(normalize-space(./ATBR)), 'nr')) and not(starts-with(lower-case(normalize-space(./ATBR)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                	            <xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./ATBR)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ATBR)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ATBR)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- We add the cultural scope as an individual. -->
					<xsl:if test="./ATBD and not(lower-case(normalize-space(./ATBD))='nr' or lower-case(normalize-space(./ATBD))='n.r.' or lower-case(normalize-space(./ATBD))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                        	    <xsl:value-of select="concat($NS, 'CulturalScope/', arco-fn:urify(normalize-space(./ATBD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
        	                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CulturalScope'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:choose>
									<xsl:when test="contains((./ATBD), '(?)')">
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(substring-before(./ATBD,'('))" />
										</xsl:call-template>
									</xsl:when>
									<xsl:when test="contains((./ATBD), '?')">
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(substring-before(./ATBD,'?'))" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./ATBD)" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name>
								<xsl:choose>
									<xsl:when test="contains((./ATBD), '(?)')">
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(substring-before(./ATBD,'('))" />
										</xsl:call-template>
									</xsl:when>
									<xsl:when test="contains((./ATBD), '?')">
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(substring-before(./ATBD,'?'))" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./ATBD)" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
						</rdf:Description>
					</xsl:if>
					</xsl:if>
				</xsl:for-each>
				<xsl:if test="$sheetType='SCAN'">
					<xsl:for-each select="record/metadata/schede/*/DT/ATB">
						<xsl:if test="(not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
        		        	        <xsl:value-of select="concat($NS, 'Responsibility/', $itemURI, '-cultural-scope-', position())" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
        		                    	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Ambito culturale del bene: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Ambito culturale del bene: ', $itemURI)" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Cultural scope of cultural property: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Cultural scope of cultural property: ', $itemURI)" />
								</l0:name>
								<arco-cd:hasCulturalScope>
									<xsl:attribute name="rdf:resource">
                       		        	<xsl:value-of select="concat($NS, 'CulturalScope/', arco-fn:urify(normalize-space(.)))" />
									</xsl:attribute>
								</arco-cd:hasCulturalScope>
							</rdf:Description>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                        		    <xsl:value-of select="concat($NS, 'CulturalScope/', arco-fn:urify(normalize-space(.)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
        		                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CulturalScope'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:choose>
										<xsl:when test="contains((.), '(?)')">
											<xsl:call-template name="CamelCase">
												<xsl:with-param name="text" select="normalize-space(substring-before(.,'('))" />
											</xsl:call-template>
										</xsl:when>
										<xsl:when test="contains((.), '?')">
											<xsl:call-template name="CamelCase">
												<xsl:with-param name="text" select="normalize-space(substring-before(.,'?'))" />
											</xsl:call-template>
										</xsl:when>
										<xsl:otherwise>
											<xsl:call-template name="CamelCase">
												<xsl:with-param name="text" select="normalize-space(.)" />
											</xsl:call-template>
										</xsl:otherwise>
									</xsl:choose>
								</rdfs:label>
								<l0:name>
									<xsl:choose>
										<xsl:when test="contains((.), '(?)')">
											<xsl:call-template name="CamelCase">
												<xsl:with-param name="text" select="normalize-space(substring-before(.,'('))" />
											</xsl:call-template>
										</xsl:when>
										<xsl:when test="contains((.), '?')">
											<xsl:call-template name="CamelCase">
												<xsl:with-param name="text" select="normalize-space(substring-before(.,'?'))" />
											</xsl:call-template>
										</xsl:when>
										<xsl:otherwise>
											<xsl:call-template name="CamelCase">
												<xsl:with-param name="text" select="normalize-space(.)" />
											</xsl:call-template>
										</xsl:otherwise>
									</xsl:choose>
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
				<!-- AU/AUT -->
				<xsl:for-each select="record/metadata/schede/*/*/AUT">
					<xsl:variable name="aut-position">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<xsl:if test="./AUTN and (not(starts-with(lower-case(normalize-space(./AUTN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./AUTN)), '-')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
        	            	   	<xsl:value-of select="concat($NS, 'PreferredResponsibility/', $itemURI, '-', position())" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
        	            	       	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Responsabilità preferita, maggiormente accreditata o convincente sul bene: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Responsabilità preferita, maggiormente accreditata o convincente sul bene: ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Preferred responsibility on cultural property: ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Preferred responsibility on cultural property: ', $itemURI)" />
							</l0:name>
							<arco-cd:mainResponsibility>
								<xsl:value-of select="true()" />
							</arco-cd:mainResponsibility>
							<arco-cd:hasAgentWithResponsibility>
								<xsl:attribute name="rdf:resource">
                            		<xsl:variable name="author">
										<xsl:choose>
											<xsl:when test="./AUTS and (not(starts-with(lower-case(normalize-space(./AUTS)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTS)), 'n.r')))">
												<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUTN, '-', ./AUTS)))" />
											</xsl:when>
											<xsl:when test="./AUTA and (not(starts-with(lower-case(normalize-space(./AUTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTA)), 'n.r')))">
												<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUTN, '-', ./AUTA)))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUTN))" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:variable>
									<xsl:value-of select="$author" />     
								</xsl:attribute>
							</arco-cd:hasAgentWithResponsibility>
							<xsl:if test="contains((./AUTN), '?')">
								<arco-cd:uncertainData>
									<xsl:value-of select="true()" />
								</arco-cd:uncertainData>
							</xsl:if>
							<xsl:if test="./AUTR and not(lower-case(normalize-space(./AUTR))='nr' or lower-case(normalize-space(./AUTR))='nr (recupero pregresso)' or lower-case(normalize-space(./AUTR))='n.r.' or lower-case(normalize-space(./AUTR))='nr [non rilevabile]' or lower-case(normalize-space(./AUTR))='n.r. (non rilevabile)')">
								<arco-cd:hasInterventionRole>
									<xsl:attribute name="rdf:resource">
                           				<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./AUTR)))" />
									</xsl:attribute>
								</arco-cd:hasInterventionRole>
							</xsl:if>
							<xsl:if test="./AUTY and (not(starts-with(lower-case(normalize-space(./AUTY)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTY)), 'n.r')))">
								<arco-core:specifications>
									<xsl:value-of select="normalize-space(./AUTY)" />
								</arco-core:specifications>
							</xsl:if>
							<xsl:if test="./AUTZ">
								<arco-core:note>
									<xsl:value-of select="normalize-space(./AUTZ)" />
								</arco-core:note>
							</xsl:if>
							<xsl:for-each select="./AUTM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]"><!-- allow multiple values es: ICCD13074493 -->
								<arco-core:informationSource>
									<xsl:value-of select="normalize-space()" />
								</arco-core:informationSource>
							</xsl:for-each>
						</rdf:Description>
						<xsl:if test="./AUTR and not(lower-case(normalize-space(./AUTR))='nr' or lower-case(normalize-space(./AUTR))='nr (recupero pregresso)' or lower-case(normalize-space(./AUTR))='n.r.' or lower-case(normalize-space(./AUTR))='nr [non rilevabile]' or lower-case(normalize-space(./AUTR))='n.r. (non rilevabile)')">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./AUTR)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./AUTR)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./AUTR)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<xsl:variable name="author">
							<xsl:choose>
								<xsl:when test="./AUTS and (not(starts-with(lower-case(normalize-space(./AUTS)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTS)), 'n.r')))">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUTN, '-', ./AUTS)))" />
								</xsl:when>
								<xsl:when test="./AUTA and (not(starts-with(lower-case(normalize-space(./AUTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTA)), 'n.r')))">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUTN, '-', ./AUTA)))" />
								</xsl:when>
								 <xsl:when test="./AUTB and (not(starts-with(lower-case(normalize-space(./AUTB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTB)), 'n.r')))">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUTN, '-', ./AUTB)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUTN))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<xsl:variable name="authorProvo">
							<xsl:choose>
								<xsl:when test="./AUTA and (not(starts-with(lower-case(normalize-space(./AUTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTA)), 'n.r')))">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUTN, '-', ./AUTA)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUTN))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                        	<xsl:value-of select="$author" />
                      		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
										<xsl:when test="lower-case(normalize-space(./AUTP))='p'">
											<xsl:value-of select="'https://w3id.org/italia/onto/CPV/Person'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./AUTP))='e'">
											<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
										</xsl:when>
										<xsl:when test="./AUTN">
											<xsl:value-of select="'https://w3id.org/italia/onto/CPV/Person'" />
										</xsl:when>
										<xsl:when test="./AUTB">
											<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:choose>
									<xsl:when test="./AUTS and (not(starts-with(lower-case(normalize-space(./AUTS)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTS)), 'n.r')))">
										<xsl:value-of select="concat(arco-fn:name-cleaner(./AUTN), ' (', normalize-space(./AUTS), ')')" />
									</xsl:when>
									<xsl:when test="./AUTA and (not(starts-with(lower-case(normalize-space(./AUTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTA)), 'n.r')))">
										<xsl:value-of select="concat(arco-fn:name-cleaner(./AUTN), ' (', normalize-space(./AUTA), ')')" />
									</xsl:when>
									<xsl:when test="./AUTB and (not(starts-with(lower-case(normalize-space(./AUTB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTB)), 'n.r')))">
										<xsl:value-of select="concat(arco-fn:name-cleaner(./AUTN), ' (', normalize-space(./AUTB), ')')" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="arco-fn:name-cleaner(./AUTN)" />
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name>
								<xsl:choose>
									<xsl:when test="./AUTS and (not(starts-with(lower-case(normalize-space(./AUTS)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTS)), 'n.r')))">
										<xsl:value-of select="concat(arco-fn:name-cleaner(./AUTN), ' (', normalize-space(./AUTS), ')')" />
									</xsl:when>
									<xsl:when test="./AUTA and (not(starts-with(lower-case(normalize-space(./AUTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTA)), 'n.r')))">
										<xsl:value-of select="concat(arco-fn:name-cleaner(./AUTN), ' (', normalize-space(./AUTA), ')')" />
									</xsl:when>
									<xsl:when test="./AUTB and (not(starts-with(lower-case(normalize-space(./AUTB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTB)), 'n.r')))">
										<xsl:value-of select="concat(arco-fn:name-cleaner(./AUTN), ' (', normalize-space(./AUTB), ')')" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="arco-fn:name-cleaner(./AUTN)" />
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
							<xsl:if test="./AUTA and (not(starts-with(lower-case(normalize-space(./AUTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTA)), 'n.r')))">
							<owl:sameAs>
								<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUTN))" />
								</xsl:attribute>
							</owl:sameAs>
							</xsl:if>
							<xsl:if test="./AUTA and (not(starts-with(lower-case(normalize-space(./AUTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTA)), 'n.r')))">
								<arco-cd:agentDate>
									<xsl:value-of select="normalize-space(./AUTA)" />
								</arco-cd:agentDate>
							</xsl:if>
							<xsl:if test="./AUTE and (not(starts-with(lower-case(normalize-space(./AUTE)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTE)), 'n.r')))">
								<arco-cd:hasProfession>
									<xsl:attribute name="rdf:resource">
		            					<xsl:value-of select="concat($NS, 'Profession/', arco-fn:urify(normalize-space(./AUTE)))" />
									</xsl:attribute>
								</arco-cd:hasProfession>
							</xsl:if>
							<xsl:if test="./AUTC">
								<arco-cd:hasCulturalContext>
									<xsl:attribute name="rdf:resource">
                           				<xsl:value-of select="concat($NS, 'CulturalContext/', arco-fn:urify(normalize-space(./AUTC)))" />
									</xsl:attribute>
								</arco-cd:hasCulturalContext>
							</xsl:if>
							<xsl:if test="./AUTH and (not(starts-with(lower-case(normalize-space(./AUTH)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTH)), 'n.r')))">
								<arco-lite:localIdentifier>
   			            			<xsl:value-of select="./AUTH" />
								</arco-lite:localIdentifier>
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AuthorIdentifier/', $itemURI, arco-fn:arcofy(./AUTH))" />
									</xsl:attribute>
								</arco-core:hasIdentifier>
							</xsl:if>
							<xsl:if test="./AUTK and (not(starts-with(lower-case(normalize-space(./AUTK)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTK)), 'n.r')))">
								<arco-lite:ICCDIdentifier>
   			            			<xsl:value-of select="./AUTK" />
								</arco-lite:ICCDIdentifier>
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AuthorIdentifier/', $itemURI, arco-fn:arcofy(./AUTK))" />
									</xsl:attribute>
								</arco-core:hasIdentifier>
							</xsl:if>
							<xsl:if test="./NCUN and (not(starts-with(lower-case(normalize-space(./NCUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NCUN)), 'n.r')))">
								<arco-lite:ICCDIdentifier>
   			            			<xsl:value-of select="./NCUN" />
								</arco-lite:ICCDIdentifier>
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AuthorIdentifier/', $itemURI, arco-fn:arcofy(./NCUN))" />
									</xsl:attribute>
								</arco-core:hasIdentifier>
							</xsl:if>
							<xsl:if test="./NUCN and (not(starts-with(lower-case(normalize-space(./NUCN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NUCN)), 'n.r')))">
								<arco-lite:ICCDIdentifier>
   			            			<xsl:value-of select="./NUCN" />
								</arco-lite:ICCDIdentifier>
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AuthorIdentifier/', $itemURI, arco-fn:arcofy(./NUCN))" />
									</xsl:attribute>
								</arco-core:hasIdentifier>
							</xsl:if>
						</rdf:Description>
						<!-- local identifier -->
						<xsl:if test="./AUTK">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AuthorIdentifier/', arco-fn:arcofy(./AUTK))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            		    </xsl:attribute>
								</rdf:type>
								<arco-core:hasType>
									<xsl:attribute name="rdf:resource">
					    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
						    	    </xsl:attribute>
								</arco-core:hasType>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./AUTK)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./AUTK)" />
								</l0:name>
								<arco-core:identifier>
									<xsl:value-of select="normalize-space(./AUTK)" />
								</arco-core:identifier>
								<arco-core:current>
									<xsl:value-of select="true()" />
								</arco-core:current>
								<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
							</rdf:Description>
						</xsl:if>
						<xsl:if test="./NCUN">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AuthorIdentifier/', arco-fn:arcofy(./NCUN))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            		    </xsl:attribute>
								</rdf:type>
								<arco-core:hasType>
									<xsl:attribute name="rdf:resource">
					    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
						    	    </xsl:attribute>
								</arco-core:hasType>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./NCUN)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./NCUN)" />
								</l0:name>
								<arco-core:identifier>
									<xsl:value-of select="normalize-space(./NCUN)" />
								</arco-core:identifier>
								<arco-core:current>
									<xsl:value-of select="true()" />
								</arco-core:current>
								<arco-core:issuedBy>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
									</xsl:attribute>
								</arco-core:issuedBy>
							</rdf:Description>
						</xsl:if>
						<xsl:if test="./NUCN">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AuthorIdentifier/', arco-fn:arcofy(./NUCN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
						<xsl:if test="./AUTH">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AuthorIdentifier/', arco-fn:arcofy(./AUTH))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            		    </xsl:attribute>
								</rdf:type>
								<arco-core:hasType>
									<xsl:attribute name="rdf:resource">
					    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
						    	    </xsl:attribute>
								</arco-core:hasType>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./AUTH)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./AUTH)" />
								</l0:name>
								<arco-core:identifier>
									<xsl:value-of select="normalize-space(./AUTH)" />
								</arco-core:identifier>
								<arco-core:current>
									<xsl:value-of select="true()" />
								</arco-core:current>
							</rdf:Description>
						</xsl:if>
						<!-- profession -->
						<xsl:if test="./AUTE and (not(starts-with(lower-case(normalize-space(./AUTE)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTE)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	            					<xsl:value-of select="concat($NS, 'Profession/', arco-fn:urify(normalize-space(./AUTE)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	            						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Profession'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./AUTE)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./AUTE)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<!-- cultural context -->
						<xsl:if test="./AUTC">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	            					<xsl:value-of select="concat($NS, 'CulturalContext/', arco-fn:urify(normalize-space(./AUTC)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	            						<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CulturalContext'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./AUTC)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./AUTC)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<!-- AU/AAU -->
			<xsl:for-each select="record/metadata/schede/*/AU/AAU">
				<xsl:if test="./AAUN and (not(starts-with(lower-case(normalize-space(./AAUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AAUN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./AAUN)), '-')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        	<xsl:value-of select="concat($NS, 'PreferredResponsibility/', $itemURI, '-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabilità preferita, maggiormente accreditata o convincente sul bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Responsabilità preferita, maggiormente accreditata o convincente sul bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Preferred responsibility on cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Preferred responsibility on cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:mainResponsibility>
							<xsl:value-of select="true()" />
						</arco-cd:mainResponsibility>
						<xsl:if test="./AAUN and (not(starts-with(lower-case(normalize-space(./AAUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AAUN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./AAUN)), '-')))">
							<arco-cd:hasAgentWithResponsibility>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AAUN))" />
								</xsl:attribute>
							</arco-cd:hasAgentWithResponsibility>
						</xsl:if>
						<xsl:if test="contains((./AUUN), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
						<xsl:if test="./AAUR and not(lower-case(normalize-space(./AAUR))='nr' or lower-case(normalize-space(./AAUR))='nr (recupero pregresso)' or lower-case(normalize-space(./AAUR))='n.r.' or lower-case(normalize-space(./AAUR))='nr [non rilevabile]' or lower-case(normalize-space(./AAUR))='n.r. (non rilevabile)')">
							<arco-cd:hasInterventionRole>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of
									select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./AAUR)))" />
                           </xsl:attribute>
							</arco-cd:hasInterventionRole>
						</xsl:if>
					</rdf:Description>
					<xsl:if test="./AAUR and not(lower-case(normalize-space(./AAUR))='nr' or lower-case(normalize-space(./AAUR))='nr (recupero pregresso)' or lower-case(normalize-space(./AAUR))='n.r.' or lower-case(normalize-space(./AAUR))='nr [non rilevabile]' or lower-case(normalize-space(./AAUR))='n.r. (non rilevabile)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                            	<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./AAUR)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./AAUR)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./AAUR)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./AAUN and (not(starts-with(lower-case(normalize-space(./AAUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AAUN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./AAUN)), '-')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                        		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AAUN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                            	</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./AAUN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./AAUN)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- AU/AUF (F version 2.00, 3.00 and BDM) -->
			<xsl:for-each select="record/metadata/schede/*/AU/AUF">
				<xsl:variable name="aut-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<xsl:variable name="author">
					<xsl:choose>
						<xsl:when test="$sheetType='F' and (./AUFN and ./AUFS and not(starts-with(lower-case(normalize-space(./AUFS)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFS)), 'n.r')))">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUFN, '-', ./AUFS)))" />
						</xsl:when>
						<xsl:when test="$sheetType='F' and (./AUFB and ./AUFS and (not(starts-with(lower-case(normalize-space(./AUFS)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFS)), 'n.r'))))">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUFB, '-', ./AUFS)))" />
						</xsl:when>
						<xsl:when test="./AUFB">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUFB))" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUFN))" />
						</xsl:otherwise>
			        </xsl:choose>
				</xsl:variable>
				<xsl:if test="./AUFN and not(starts-with(lower-case(normalize-space(./AUFN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./AUFN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./AUFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFN)), 'nr'))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'PreferredResponsibility/', $itemURI, '-photographer-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabilità preferita, maggiormente accreditata o convincente sul bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Responsabilità preferita, maggiormente accreditata o convincente sul bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Preferred responsibility on cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Preferred responsibility on cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./AUFK">
							<arco-core:specifications>
								<xsl:value-of select="./AUFK" />
							</arco-core:specifications>
						</xsl:if>
						<xsl:if test="(./AUFN and not(starts-with(lower-case(normalize-space(./AUFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFN)), 'n.r'))) 
						or (./AUFB and not(starts-with(lower-case(normalize-space(./AUFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFB)), 'n.r')))">
							<arco-cd:hasAgentWithResponsibility>
								<xsl:attribute name="rdf:resource">
	    	                        <xsl:value-of select="$author" />
                            	</xsl:attribute>
							</arco-cd:hasAgentWithResponsibility>
						</xsl:if>
						<xsl:for-each select="./AUFM[not(lower-case(normalize-space())='nr' or lower-case(normalize-space())='nr (recupero pregresso)' or lower-case(normalize-space())='n.r.')]">
							<arco-core:informationSource>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="(normalize-space())" />
                            	</xsl:attribute>
							</arco-core:informationSource>
						</xsl:for-each>
						<xsl:if test="contains((./AUFN), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
						<xsl:if test="contains((./AUFB), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
						<xsl:if test="./AUFR and not(lower-case(normalize-space(./AUFR))='nr' or lower-case(normalize-space(./AUFR))='nr (recupero pregresso)' or lower-case(normalize-space(./AUFR))='n.r.' or lower-case(normalize-space(./AUFR))='nr [non rilevabile]' or lower-case(normalize-space(./AUFR))='n.r. (non rilevabile)')">
							<arco-cd:hasInterventionRole>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./AUFR)))" />
								</xsl:attribute>
							</arco-cd:hasInterventionRole>
						</xsl:if>
					</rdf:Description>
					<xsl:if test="./AUFR and not(lower-case(normalize-space(./AUFR))='nr' or lower-case(normalize-space(./AUFR))='nr (recupero pregresso)' or lower-case(normalize-space(./AUFR))='n.r.' or lower-case(normalize-space(./AUFR))='nr [non rilevabile]' or lower-case(normalize-space(./AUFR))='n.r. (non rilevabile)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                            	<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./AUFR)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./AUFR)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./AUFR)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="(./AUFN and (not(starts-with(lower-case(normalize-space(./AUFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFN)), 'n.r')))) or (./AUFB and (not(starts-with(lower-case(normalize-space(./AUFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFB)), 'n.r'))))">
						<xsl:if test="$author != ''">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	                        		<xsl:value-of select="$author" />	                          
	                        	</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:choose>
	                                    	<xsl:when test="./AUFN">
	                                        	<xsl:value-of select="'https://w3id.org/italia/onto/CPV/Person'" />
											</xsl:when>
											<xsl:when test="./AUFB">
												<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:choose>
										<xsl:when test="./AUFN">
											<xsl:choose>
												<xsl:when test="$sheetType='F' and (./AUFS)">
													<xsl:value-of select="concat(arco-fn:name-cleaner(./AUFN), ' (', normalize-space(./AUFS), ')')" />
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select="arco-fn:name-cleaner(./AUFN)" />
												</xsl:otherwise>
											</xsl:choose>
										</xsl:when>
										<xsl:when test="./AUFB">
											<xsl:choose>
												<xsl:when test="$sheetType='F' and (./AUFS)">
													<xsl:call-template name="CamelCase">
														<xsl:with-param name="text" select="concat(normalize-space(./AUFB), ' (', normalize-space(./AUFS), ')')" />
													</xsl:call-template>
												</xsl:when>
												<xsl:otherwise>
													<xsl:call-template name="CamelCase">
														<xsl:with-param name="text" select="normalize-space(./AUFB)" />
													</xsl:call-template>
												</xsl:otherwise>
											</xsl:choose>
										</xsl:when>
									</xsl:choose>
								</rdfs:label>
								<l0:name>
									<xsl:choose>
										<xsl:when test="./AUFN">
											<xsl:choose>
												<xsl:when test="$sheetType='F' and (./AUFS)">
													<xsl:value-of select="concat(arco-fn:name-cleaner(./AUFN), ' (', normalize-space(./AUFS), ')')" />
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select="arco-fn:name-cleaner(./AUFN)" />
												</xsl:otherwise>
											</xsl:choose>
										</xsl:when>
										<xsl:when test="./AUFB">
											<xsl:choose>
												<xsl:when test="$sheetType='F' and (./AUFS)">
													<xsl:call-template name="CamelCase">
														<xsl:with-param name="text" select="concat(normalize-space(./AUFB), ' (', normalize-space(./AUFS), ')')" />
													</xsl:call-template>
												</xsl:when>
												<xsl:otherwise>
													<xsl:call-template name="CamelCase">
														<xsl:with-param name="text" select="normalize-space(./AUFB)" />
													</xsl:call-template>
												</xsl:otherwise>
											</xsl:choose>
										</xsl:when>
									</xsl:choose>
								</l0:name>
								<xsl:if test="./AUFA and not(starts-with(lower-case(normalize-space(./AUFA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFA)), 'n.r'))">
									<arco-cd:agentDate>
										<xsl:value-of select="normalize-space(./AUFA)" />
									</arco-cd:agentDate>
								</xsl:if>
								<xsl:if test="./AUFH and (not(starts-with(lower-case(normalize-space(./AUFH)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUFH)), 'n.r')))">
									<arco-lite:localIdentifier>
   			            			<xsl:value-of select="./AUFH" />
								</arco-lite:localIdentifier>
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AuthorIdentifier/', $itemURI, arco-fn:arcofy(./AUFH))" />
									</xsl:attribute>
								</arco-core:hasIdentifier>
								</xsl:if>
								<xsl:if test="./NCUN and (not(starts-with(lower-case(normalize-space(./NCUN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NCUN)), 'n.r')))">
								<arco-lite:ICCDIdentifier>
   			            			<xsl:value-of select="./NCUN" />
								</arco-lite:ICCDIdentifier>
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AuthorIdentifier/', $itemURI, arco-fn:arcofy(./NCUN))" />
									</xsl:attribute>
								</arco-core:hasIdentifier>
								</xsl:if>
								<xsl:if test="./NUCN and (not(starts-with(lower-case(normalize-space(./NUCN)), 'nr')) and not(starts-with(lower-case(normalize-space(./NUCN)), 'n.r')))">
									<arco-lite:ICCDIdentifier>
   			            			<xsl:value-of select="./NUCN" />
									</arco-lite:ICCDIdentifier>
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AuthorIdentifier/', $itemURI, arco-fn:arcofy(./NUCN))" />
									</xsl:attribute>
								</arco-core:hasIdentifier>
								</xsl:if>
								<xsl:if test="$sheetType='BDM' and (./AUFS)">
									<arco-cd:hasProfession>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Profession/', arco-fn:urify(normalize-space(./AUFS)))" />
										</xsl:attribute>
									</arco-cd:hasProfession>
								</xsl:if>
							</rdf:Description>
								<!-- documentation identifier -->
					<xsl:if test="./NCUN">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AuthorIdentifier/', arco-fn:arcofy(./NCUN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./NCUN)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./NUCN">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AuthorIdentifier/', arco-fn:arcofy(./NUCN))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./NUCN)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
							<arco-core:issuedBy>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/resource/Agent/050ae5d29fc291b682bcf51f1250ca75'" />
								</xsl:attribute>
							</arco-core:issuedBy>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./AUFH">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AuthorIdentifier/', arco-fn:arcofy(./AUFH))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			            	    </xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
				    	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
					    	    </xsl:attribute>
							</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./AUFH)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./AUFH)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(./AUFH)" />
							</arco-core:identifier>
							<arco-core:current>
								<xsl:value-of select="true()" />
							</arco-core:current>
						</rdf:Description>
					</xsl:if>
						</xsl:if>
					</xsl:if>
					<xsl:if test="./AUFS and $sheetType='BDM'">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Profession/', arco-fn:urify(normalize-space(./AUFS)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Profession'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./AUFS)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./AUFS)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- AU/AFB (F version 2.00, 3.00) -->
			<xsl:for-each select="record/metadata/schede/*/AU/AFB">
				<xsl:if test="(not(starts-with(lower-case(normalize-space(./AFBD)), 'nr')) and not(starts-with(lower-case(normalize-space(./AFBD)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        	<xsl:value-of select="concat($NS, 'Responsibility/', $itemURI, '-cultural-scope-', position())" />
                    </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                     	       <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
                     	   </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ambito culturale del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Ambito culturale del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Cultural scope of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Cultural scope of cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./AFBD and not(lower-case(normalize-space(./AFBD))='nr' or lower-case(normalize-space(./AFBD))='n.r.' or lower-case(normalize-space(./AFBD))='nr (recupero pregresso)')">
							<arco-cd:hasCulturalScope>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="concat($NS, 'CulturalScope/', arco-fn:urify(normalize-space(./AFBD)))" />
                            	</xsl:attribute>
							</arco-cd:hasCulturalScope>
						</xsl:if>
						<xsl:if test="contains((./AFBD), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
						<xsl:for-each select="./AFBM[not(lower-case(normalize-space())='nr' or lower-case(normalize-space())='nr (recupero pregresso)' or lower-case(normalize-space())='n.r.')]">
							<arco-core:informationSource>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="(normalize-space())" />
                            	</xsl:attribute>
							</arco-core:informationSource>
						</xsl:for-each>
						<xsl:if test="contains((./AFBD), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
					</rdf:Description>
					<!-- We add the cultural scope as an individual. -->
					<xsl:if test="./AFBD and not(lower-case(normalize-space(./AFBD))='nr' or lower-case(normalize-space(./AFBD))='n.r.' or lower-case(normalize-space(./AFBD))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                            	<xsl:value-of select="concat($NS, 'CulturalScope/', arco-fn:urify(normalize-space(./AFBD)))" />
                        	</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CulturalScope'" />
                            	</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:choose>
									<xsl:when test="contains((./AFBD), '(?)')">
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text"
												select="normalize-space(substring-before(./AFBD,'('))" />
										</xsl:call-template>
									</xsl:when>
									<xsl:when test="contains((./AFBD), '?')">
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text"
												select="normalize-space(substring-before(./AFBD,'?'))" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text"
												select="normalize-space(./AFBD)" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</rdfs:label>
							<l0:name>
								<xsl:choose>
									<xsl:when test="contains((./AFBD), '(?)')">
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text"
												select="normalize-space(substring-before(./AFBD,'('))" />
										</xsl:call-template>
									</xsl:when>
									<xsl:when test="contains((./AFBD), '?')">
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text"
												select="normalize-space(substring-before(./AFBD,'?'))" />
										</xsl:call-template>
									</xsl:when>
									<xsl:otherwise>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text"
												select="normalize-space(./AFBD)" />
										</xsl:call-template>
									</xsl:otherwise>
								</xsl:choose>
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- AU/AAF (F version 2.00, 3.00) -->
			<xsl:for-each select="record/metadata/schede/*/AU/AAF">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
        					<xsl:value-of select="concat($NS, 'AlternativeResponsibility/', $itemURI, '-', position())" />
        				</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabilità superata, alternativa o tradizionale di autore del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Responsabilità superata, alternativa o tradizionale di autore del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Alternative responsibility on cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Alternative responsibility on cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:hasAgentWithResponsibility>
							<xsl:attribute name="rdf:resource">
        	                	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
            	            </xsl:attribute>
						</arco-cd:hasAgentWithResponsibility>
						<xsl:if test="contains((./AAF), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                    	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
					</rdf:Description>
			</xsl:for-each>
			<!-- AU/AUI -->
			<xsl:for-each select="record/metadata/schede/*/AU/AUI">
				<xsl:variable name="aut-position">
					<xsl:value-of select="position()" />
				</xsl:variable>
				<xsl:if test="(not(starts-with(lower-case(normalize-space(./AUIN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUIN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./AUIN)), '-')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                    	   	<xsl:value-of select="concat($NS, 'PreferredResponsibility/', $itemURI, '-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
        	                   	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabilità preferita, maggiormente accreditata o convincente sul bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Responsabilità preferita, maggiormente accreditata o convincente sul bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Preferred responsibility on cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Preferred responsibility on cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:mainResponsibility>
							<xsl:value-of select="true()" />
						</arco-cd:mainResponsibility>
						<arco-cd:hasAgentWithResponsibility>
							<xsl:attribute name="rdf:resource">
                           		<xsl:variable name="author">
									<xsl:choose>
										<xsl:when test="./AUIA and (not(starts-with(lower-case(normalize-space(./AUIA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUIA)), 'n.r')))">
											<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUIN, '-', ./AUIA)))" />
										</xsl:when>
										<xsl:when test="./AUIB and (not(starts-with(lower-case(normalize-space(./AUIB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUIB)), 'n.r')))">
											<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUIB))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUIN))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:variable>
								<xsl:value-of select="$author" />     
							</xsl:attribute>
						</arco-cd:hasAgentWithResponsibility>
						<xsl:if test="contains((./AUIN), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
						<xsl:if test="./AUIR and not(lower-case(normalize-space(./AUIR))='nr' or lower-case(normalize-space(./AUIR))='nr (recupero pregresso)' or lower-case(normalize-space(./AUIR))='n.r.' or lower-case(normalize-space(./AUIR))='nr [non rilevabile]' or lower-case(normalize-space(./AUIR))='n.r. (non rilevabile)')">
							<arco-cd:hasInterventionRole>
								<xsl:attribute name="rdf:resource">
                           			<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./AUIR)))" />
								</xsl:attribute>
							</arco-cd:hasInterventionRole>
						</xsl:if>
						<xsl:if test="./AUIX and (not(starts-with(lower-case(normalize-space(./AUIX)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUIX)), 'n.r')))">
							<arco-core:specifications>
								<xsl:value-of select="normalize-space(./AUIX)" />
							</arco-core:specifications>
						</xsl:if>
						<xsl:for-each select="./AUIM[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]"><!-- allow multiple values es: ICCD13074493 -->
							<arco-core:informationSource>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="(normalize-space())" />
                            	</xsl:attribute>
							</arco-core:informationSource>
						</xsl:for-each>
					</rdf:Description>
					<xsl:if test="./AUIR and not(lower-case(normalize-space(./AUIR))='nr' or lower-case(normalize-space(./AUIR))='nr (recupero pregresso)' or lower-case(normalize-space(./AUIR))='n.r.' or lower-case(normalize-space(./AUIR))='nr [non rilevabile]' or lower-case(normalize-space(./AUIR))='n.r. (non rilevabile)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space(./AUIR)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./AUIR)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./AUIR)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<xsl:variable name="author">
						<xsl:choose>
							<xsl:when test="./AUIA and (not(starts-with(lower-case(normalize-space(./AUIA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUIA)), 'n.r')))">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./AUIN, '-', ./AUIA)))" />
							</xsl:when>
							 <xsl:when test="./AUIB and (not(starts-with(lower-case(normalize-space(./AUIB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUIB)), 'n.r')))">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUIB))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUIN))" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                    	   	<xsl:value-of select="$author" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="./AUIB">
										<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./AUIB">
									<xsl:value-of select="normalize-space(./AUIB)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="arco-fn:name-cleaner(./AUTN)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./AUIB">
									<xsl:value-of select="normalize-space(./AUIB)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="arco-fn:name-cleaner(./AUTN)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./AUIA and (not(starts-with(lower-case(normalize-space(./AUIA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUIA)), 'n.r')))">
							<arco-cd:agentDate>
								<xsl:value-of select="normalize-space(./AUIA)" />
							</arco-cd:agentDate>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!--alternative authorship -->
			<xsl:for-each select="record/metadata/schede/*/AU/AAT">
				<xsl:if test="not(record/metadata/schede/*/AU/AAT/*)">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
        					<xsl:value-of select="concat($NS, 'AlternativeResponsibility/', $itemURI, '-', position())" />
        				</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/AlternativeResponsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabilità superata, alternativa o tradizionale di autore sul bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Responsabilità superata, alternativa o tradizionale di autore sul bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Alternative responsibility on cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Alternative responsibility on cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:hasAgentWithResponsibility>
							<xsl:attribute name="rdf:resource">
        	                	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
            	            </xsl:attribute>
						</arco-cd:hasAgentWithResponsibility>
						<xsl:if test="contains((.), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                    	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="./AATN and (not(starts-with(lower-case(normalize-space(./AATN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AATN)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
        					<xsl:value-of select="concat($NS, 'AlternativeResponsibility/', $itemURI, '-', position())" />
        				</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabilità superata, alternativa o tradizionale di autore sul bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Responsabilità superata, alternativa o tradizionale di autore sul bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Alternative responsibility on cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Alternative responsibility on cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:hasAgentWithResponsibility>
							<xsl:attribute name="rdf:resource">
        	                	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AATN))" />
            	            </xsl:attribute>
						</arco-cd:hasAgentWithResponsibility>
						<xsl:if test="contains((./AATN), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
						<xsl:if test="./AATY">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./AATY)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./AATM and (not(starts-with(lower-case(normalize-space(./AATM)), 'nr')) and not(starts-with(lower-case(normalize-space(./AATM)), 'n.r')))">
							<arco-core:informationSource>
								<xsl:value-of select="normalize-space(./AATM)" />
							</arco-core:informationSource>
						</xsl:if>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AATN))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./AATN">
									<xsl:value-of select="arco-fn:name-cleaner(./AATN)" />
								</xsl:when>
								<xsl:when test="../AAF/AAFN">
									<xsl:value-of select="arco-fn:name-cleaner(../AAF/AAFN)" />
								</xsl:when>
								<xsl:when test="../AAF/AAFB">
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(../AAF/AAFB)" />
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(.)" />
									</xsl:call-template>
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./AATN">
									<xsl:value-of select="arco-fn:name-cleaner(./AATN)" />
								</xsl:when>
								<xsl:when test="../AAF/AAFN">
									<xsl:value-of select="arco-fn:name-cleaner(../AAF/AAFN)" />
								</xsl:when>
								<xsl:when test="../AAF/AAFB">
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(../AAF/AAFB)" />
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(.)" />
									</xsl:call-template>
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./AATA">
							<arco-cd:agentDate>
								<xsl:value-of select="normalize-space(./AATA)" />
							</arco-cd:agentDate>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/AU/AAF">
				<xsl:if test="(./AAFN and (not(starts-with(lower-case(normalize-space(./AAFN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AAFN)), 'n.r')))) or
					(./AAFB and (not(starts-with(lower-case(normalize-space(./AAFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AAFB)), 'n.r'))))">
					<xsl:variable name="author">
						<xsl:choose>
							<xsl:when test="./AAFN">
								<xsl:value-of select="./AAFN" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="./AAFB" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AlternativeResponsibility/', $itemURI, '-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Responsabilità superata, alternativa o tradizionale sul bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Responsabilità superata, alternativa o tradizionale sul bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Alternative responsibility on cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Alternative responsibility on cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:hasAgentWithResponsibility>
							<xsl:attribute name="rdf:resource">
        	                	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy($author))" />
            	            </xsl:attribute>
						</arco-cd:hasAgentWithResponsibility>
						<xsl:if test="contains((./AAFN), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
						<xsl:if test="contains((./AAFB), '?')">
							<arco-cd:uncertainData>
								<xsl:value-of select="true()" />
							</arco-cd:uncertainData>
						</xsl:if>
						<xsl:if test="./AAFM and (not(starts-with(lower-case(normalize-space(./AAFM)), 'nr')) and not(starts-with(lower-case(normalize-space(./AAFM)), 'n.r')))">
							<arco-core:informationSource>
								<xsl:value-of select="normalize-space(./AAFM)" />
							</arco-core:informationSource>
						</xsl:if>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                        	<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy($author))" />
                    	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="normalize-space(./AAFN)">
									<xsl:value-of select="arco-fn:name-cleaner(./AAFN)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./AAFB)" />
									</xsl:call-template>
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="normalize-space(./AAFN)">
									<xsl:value-of select="arco-fn:name-cleaner(./AAFN)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./AAFB)" />
									</xsl:call-template>
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>			
			<!-- responsibility for cultural property (F and FF) -->
			<xsl:for-each select="record/metadata/schede/*/PD/PDF">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Responsibility/', $itemURI, '-', position())" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Responsibility'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Responsabilità ', position(), ' relativamente al bene fotografico: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Responsabilità ', position(), ' relativamente al bene fotografico: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Responsibility ', position(), ' for photographic heritage: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Responsibility ', position(), ' for photographic heritage: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./PDFS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./PDFS)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./PDFK and not($sheetType='FF')">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./PDFK)" />
						</arco-core:note>
					</xsl:if>
					<arco-cd:hasAgentWithResponsibility>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="./PDFN and ./PDFA">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./PDFN, '-', ./PDFA)))" />
								</xsl:when>
								<xsl:when test="./PDFN">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./PDFN))" />
								</xsl:when>
								<xsl:when test="./PDFB and not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0') and ./PDFA">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./PDFB, '-', ./PDFA)))" />
								</xsl:when>
								<xsl:when test="./PDFB and not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0')">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./PDFB))" />
								</xsl:when>
							</xsl:choose>
						</xsl:attribute>
					</arco-cd:hasAgentWithResponsibility>
					<xsl:for-each select="./PDFR[not(lower-case(normalize-space())='nr' or lower-case(normalize-space())='nr (recupero pregresso)' or lower-case(normalize-space())='n.r.' or lower-case(normalize-space())='n.r. [non rilevabile]' or lower-case(normalize-space())='n.r. (non rilevabile)')]">
						<arco-cd:hasInterventionRole>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space()))" />
                           </xsl:attribute>
						</arco-cd:hasInterventionRole>
					</xsl:for-each>
					<xsl:for-each select="./PDFM[not(lower-case(normalize-space())='nr' or lower-case(normalize-space())='nr (recupero pregresso)' or lower-case(normalize-space())='n.r.' or lower-case(normalize-space())='n.r. [non rilevabile]' or lower-case(normalize-space())='n.r. (non rilevabile)')]"><!-- allow multiple values es: ICCD13074493 -->
						<arco-core:informationSource>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="normalize-space()" />
                            </xsl:attribute>
						</arco-core:informationSource>
					</xsl:for-each>
				</rdf:Description>
				<xsl:if test="./PDFL and (not(starts-with(lower-case(normalize-space(./PDFL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PDFL)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'GeographicalFeature/', arco-fn:arcofy(normalize-space(./PDFL)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'http://dati.beniculturali.it/cis/GeographicalFeature'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./PDFL)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./PDFL)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="./PDFC and not(lower-case(normalize-space(./PDFC))='nr' or lower-case(normalize-space(./PDFC))='nr (recupero pregresso)' or lower-case(normalize-space(./PDFC))='n.r.' or lower-case(normalize-space(./PDFC))='n.r. [non rilevabile]')">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                             <xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./PDFC)))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Circumstance'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./PDFC)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./PDFC)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:for-each select="./PDFR[not(lower-case(normalize-space())='nr' or lower-case(normalize-space())='nr (recupero pregresso)' or lower-case(normalize-space())='n.r.' or lower-case(normalize-space())='n.r. [non rilevabile]')]">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/', arco-fn:urify(normalize-space()))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								 <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space()" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space()" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<!-- agent with responsibility -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:choose>
							<xsl:when test="./PDFN and ./PDFA">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./PDFN, '-', ./PDFA)))" />
							</xsl:when>
							<xsl:when test="./PDFN">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./PDFN))" />
							</xsl:when>
							<xsl:when test="./PDFB and not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0') and ./PDFA">
								<xsl:value-of	select="concat($NS, 'Agent/', arco-fn:arcofy(concat(./PDFB, '-', ./PDFA)))" />
							</xsl:when>
							<xsl:when test="./PDFB and not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0')">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./PDFB))" />
							</xsl:when>
						</xsl:choose>
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="lower-case(normalize-space(./PDFP))='p'">
									<xsl:value-of select="'https://w3id.org/italia/onto/CPV/Person'" />
								</xsl:when>
								<xsl:when test="lower-case(normalize-space(./PDFP))='e'">
									<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
								</xsl:when>
								<xsl:when test="./PDFN and not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0')">
									<xsl:value-of select="'https://w3id.org/italia/onto/CPV/Person'" />
								</xsl:when>
								<xsl:when test="./PDFB and not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0')">
									<xsl:value-of select="'https://w3id.org/italia/onto/COV/Organization'" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:choose>
							<xsl:when test="./PDFN">
								<xsl:value-of select="arco-fn:name-cleaner(./PDFN)" />
							</xsl:when>
							<xsl:when test="./PDFB and not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0')">
								<xsl:value-of select="normalize-space(./PDFB)" />
							</xsl:when>
						</xsl:choose>
					</rdfs:label>
					<l0:name>
						<xsl:choose>
							<xsl:when test="./PDFN">
								<xsl:value-of select="arco-fn:name-cleaner(./PDFN)" />
							</xsl:when>
							<xsl:when test="./PDFB and not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0')">
								<xsl:value-of select="normalize-space(./PDFB)" />
							</xsl:when>
						</xsl:choose>
					</l0:name>
					<xsl:if test="./PDFA">
						<arco-cd:agentDate>
							<xsl:value-of select="normalize-space(./PDFA)" />
						</arco-cd:agentDate>
					</xsl:if>
					<xsl:if test="./PDFH and (not(starts-with(lower-case(normalize-space(./PDFH)), 'nr')) and not(starts-with(lower-case(normalize-space(./PDFH)), 'n.r')))">
						<arco-lite:localIdentifier>
   							<xsl:value-of select="./PDFH" />
						</arco-lite:localIdentifier>
						<arco-core:hasIdentifier>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AuthorIdentifier/', $itemURI, arco-fn:arcofy(./PDFH))" />
							</xsl:attribute>
						</arco-core:hasIdentifier>
					</xsl:if>
					<xsl:if test="./PDFB and $sheetVersion='4.00_ICCD0' and (not(starts-with(lower-case(normalize-space(./PDFB)), 'nr')) and not(starts-with(lower-case(normalize-space(./PDFB)), 'n.r')))">
						<arco-cd:historicalBiographicalInformation>
							<xsl:value-of select="normalize-space(./PDFB)" />
						</arco-cd:historicalBiographicalInformation>
					</xsl:if>
				</rdf:Description>
				<xsl:if test="./PDFH">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AuthorIdentifier/', arco-fn:arcofy(./PDFH))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
			           	    </xsl:attribute>
						</rdf:type>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
				   	            <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				    	    </xsl:attribute>
						</arco-core:hasType>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./PDFH)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./PDFH)" />
						</l0:name>
						<arco-core:identifier>
							<xsl:value-of select="normalize-space(./PDFH)" />
						</arco-core:identifier>
						<arco-core:current>
							<xsl:value-of select="true()" />
						</arco-core:current>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- inventory as an individual -->
			<xsl:for-each select="record/metadata/schede/*/UB/INP">
				<xsl:if test="./*">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
		            		<xsl:value-of select="concat($NS, 'InventorySistuation/', $itemURI, '-current')" />
		            	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InventorySituation'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Situazione inventariale del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Situazione inventariale del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Inventory situation of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Inventory situation of cultural property: ', $itemURI)" />
						</l0:name>
						<arco-core:current>
            				<xsl:value-of select="true()" />
          	  			</arco-core:current>
						<xsl:if test="./INPV and (not(starts-with(lower-case(normalize-space(./INPV)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPV)), 'n.r')))">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./INPV)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./INPR and (not(starts-with(lower-case(normalize-space(./INPR)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPR)), 'n.r')))">
							<arco-cd:insertionDate>
								<xsl:value-of select="normalize-space(./INPR)" />
							</arco-cd:insertionDate>
						</xsl:if>
						<xsl:if test="./INPD and (not(starts-with(lower-case(normalize-space(./INPD)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPD)), 'n.r')))">
							<arco-core:description>
								<xsl:value-of select="normalize-space(./INPD)" />
							</arco-core:description>
						</xsl:if>
						<xsl:if test="./INPP and (not(starts-with(lower-case(normalize-space(./INPP)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPP)), 'n.r')))">
							<arco-cd:provenance>
								<xsl:value-of select="normalize-space(./INPP)" />
							</arco-cd:provenance>
						</xsl:if>
						<xsl:if test="./INPM and (not(starts-with(lower-case(normalize-space(./INPM)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPM)), 'n.r')))">
							<arco-cd:methodOfInsertion>
								<xsl:value-of select="normalize-space(./INPM)" />
							</arco-cd:methodOfInsertion>
						</xsl:if>
						<xsl:if test="./INPO and (not(starts-with(lower-case(normalize-space(./INPO)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPO)), 'n.r')))">
							<arco-cd:relevantLegalAct>
								<xsl:value-of select="normalize-space(./INPO)" />
							</arco-cd:relevantLegalAct>
						</xsl:if>
						<xsl:if test="./INPZ and (not(starts-with(lower-case(normalize-space(./INPZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPZ)), 'n.r')))">
							<arco-cd:hasSECCategory>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'SECCategory/', arco-fn:urify(normalize-space(./INPZ)))" />
                        		</xsl:attribute>
							</arco-cd:hasSECCategory>
						</xsl:if>
						<xsl:if test="./INPU and (not(starts-with(lower-case(normalize-space(./INPU)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPU)), 'n.r')))">
							<arco-cd:RCSReason>
								<xsl:value-of select="normalize-space(./INPU)" />
							</arco-cd:RCSReason>
						</xsl:if>
						<xsl:if test="./INPC and (not(starts-with(lower-case(normalize-space(./INPC)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPC)), 'n.r')))">
						<arco-cd:inventoryNumber>
								<xsl:value-of select="normalize-space(./INPC)" />
						</arco-cd:inventoryNumber>
						</xsl:if>
						<!-- responsible of inventory identifier -->
						<xsl:if test="./INPE and (not(starts-with(lower-case(normalize-space(./INPE)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPE)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-inventory-number-responsible')" />
                        		</xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-lite:hasResponsibleAgent>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./INPE))" />
                        		</xsl:attribute>
							</arco-lite:hasResponsibleAgent>
						</xsl:if>
					</rdf:Description>
					<!-- SECCategory -->
					<xsl:if test="./INPZ and (not(starts-with(lower-case(normalize-space(./INPZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPZ)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'SECCategory/', arco-fn:urify(normalize-space(./INPZ)))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/SECCategory'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./INPZ)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./INPZ)" />
							</l0:name>
							<xsl:if test="./INPS and (not(starts-with(lower-case(normalize-space(./INPS)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPS)), 'n.r')))">
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
                            			<xsl:value-of select="concat($NS, 'SECIdentifier/', arco-fn:arcofy(./INPS))" />
                        			</xsl:attribute>
								</arco-core:hasIdentifier>
								<arco-lite:nationalIdentifier>
									<xsl:value-of select="normalize-space(./INPS)" />
								</arco-lite:nationalIdentifier>
							</xsl:if>
						</rdf:Description>
						<!-- Sec identifier -->
						<xsl:if test="./INPS and (not(starts-with(lower-case(normalize-space(./INPS)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPS)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                        <xsl:value-of select="concat($NS, 'SECIdentifier/', arco-fn:arcofy(./INPS))" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
		            	                <xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                	        </xsl:attribute>
								</rdf:type>
								<arco-core:hasType>
									<xsl:attribute name="rdf:resource">
		            	                <xsl:value-of select="'https://w3id.org/arco/ontology/core/NationalIdentifier'" />
		                	        </xsl:attribute>
								</arco-core:hasType>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./INPS)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./INPS)" />
								</l0:name>
								<arco-core:identifier>
									<xsl:value-of select="normalize-space(./INPS)" />
								</arco-core:identifier>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
					<!-- agent role for responsible of inventory identifier -->
					<xsl:if test="./INPE and (not(starts-with(lower-case(normalize-space(./INPE)), 'nr')) and not(starts-with(lower-case(normalize-space(./INPE)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-inventory-number-responsible')" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Responsabile del numero di inventario del bene ', $itemURI, ': ', normalize-space(./INPE))" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Responsible for inventory number of cultural property ', $itemURI, ': ', normalize-space(./INPE))" />
							</rdfs:label>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
		                        </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./INPE))" />
		                        </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Responsabile'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Responsible agent'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./INPE))" />
		                    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
		                        </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(./INPE)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(./INPE)" />
							</l0:name>
							<arco-core:isAgentOf>
								<xsl:attribute name="rdf:resource">
		                            <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-inventory-number-responsible')" />
		                        </xsl:attribute>
							</arco-core:isAgentOf>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/UB/INV">
				<xsl:if test="./*">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
		            		<xsl:value-of select="concat($NS, 'InventorySituation/', $itemURI, '-', position())" />
		            	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/InventorySituation'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Situazione inventariale del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Situazione inventariale del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Inventory situation of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Inventory situation of cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./INVS and not($sheetVersion='2.00' or $sheetVersion='2.00_ICCD0')">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./INVS)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./INVN and (not(starts-with(lower-case(normalize-space(./INVN)), 'nr')) and not(starts-with(lower-case(normalize-space(./INVN)), 'n.r')))">
							<arco-cd:inventoryNumber>
								<xsl:value-of select="normalize-space(./INVN)" />
							</arco-cd:inventoryNumber>
						</xsl:if>
						<xsl:if test="./INVD and (not(starts-with(lower-case(normalize-space(./INVD)), 'nr')) and not(starts-with(lower-case(normalize-space(./INVD)), 'n.r')))">
							<arco-cd:insertionDate>
									<xsl:value-of select="normalize-space(./INVD)" />
							</arco-cd:insertionDate>
						</xsl:if>
						<!-- inventory -->
						<xsl:if test="./INVA and (not(starts-with(lower-case(normalize-space(./INVA)), 'nr')) and not(starts-with(lower-case(normalize-space(./INVA)), 'n.r')))">
							<arco-cd:hasInventory>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'Inventory/', arco-fn:urify(normalize-space(./INVA)))" />
                        		</xsl:attribute>
							</arco-cd:hasInventory>
						</xsl:if>
					</rdf:Description>
					<xsl:if test="./INVA and (not(starts-with(lower-case(normalize-space(./INVA)), 'nr')) and not(starts-with(lower-case(normalize-space(./INVA)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
		    	        		<xsl:value-of select="concat($NS, 'Inventory/', arco-fn:urify(normalize-space(./INVA)))" />
		        	    	</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Inventory'" />
	                        	</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./INVA)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./INVA)" />
							</l0:name>
							<xsl:if test="./INVC and (not(starts-with(lower-case(normalize-space(./INVC)), 'nr')) and not(starts-with(lower-case(normalize-space(./INVC)), 'n.r')))">
								<arco-cd:inventoryLocation>
									<xsl:value-of select="normalize-space(./INVC)" />
								</arco-cd:inventoryLocation>
							</xsl:if>		
						</rdf:Description>
					</xsl:if>				
				</xsl:if>
			</xsl:for-each>
			<!-- Estimate for version UB/COL/COLV -->
			<xsl:for-each select="record/metadata/schede/*/UB/COL">
				<xsl:if test="./COLV and (not(starts-with(lower-case(normalize-space(./COLV)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLV)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Estimate/', $itemURI, '-', position())" />
	    	             </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                    	        	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Estimate'" />
                        	</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Stima del bene ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Estimate of cultural property ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Stima del bene ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Estimate of cultural property ', $itemURI)" />
						</rdfs:label>
						<arco-cd:estimatedValue>
							<xsl:value-of select="normalize-space(./COLV)" />
						</arco-cd:estimatedValue>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:if test="record/metadata/schede/*/UB/INP/INPA  and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/INP/INPA)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/INP/INPA)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Estimate/', $itemURI)" />
	                 </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Estimate'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Stima del bene ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Estimate of cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Stima del bene ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Estimate of cultural property ', $itemURI)" />
					</rdfs:label>
					<arco-cd:estimatedValue>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/INP/INPA)" />
					</arco-cd:estimatedValue>
					<arco-core:informationSource>
						<xsl:value-of select="'inventario patrimoniale'" />
					</arco-core:informationSource>
					<arco-core:current>
            			<xsl:value-of select="true()" />
            		</arco-core:current>
				</rdf:Description>
			</xsl:if>			
			<!-- Estimate for version 1.00 and 2.00 -->
			<xsl:if test="$sheetVersion='1.00' or $sheetVersion='1.00_ICCD0' or $sheetVersion='2.00' or $sheetVersion='2.00_ICCD0'">
				<xsl:for-each select="record/metadata/schede/*/UB/INV/INVS">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Estimate/', $itemURI, '-', position())" />
	            	     </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Estimate'" />
	                        </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Stima ', position(), ' del bene ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Estimate ', position(), ' of cultural property ', $itemURI)" />
						</l0:name>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Stima ', position(), ' del bene ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Estimate ', position(), ' of cultural property ', $itemURI)" />
						</rdfs:label>
						<arco-core:informationSource>
							<xsl:value-of select="'inventario-patrimoniale'" />
						</arco-core:informationSource>
						<arco-cd:estimatedValue>
							<xsl:value-of select="normalize-space(.)" />
						</arco-cd:estimatedValue>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<xsl:for-each select="record/metadata/schede/*/UB/STI">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Estimate/', $itemURI, '-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Estimate'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Stima del bene ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
							<xsl:value-of select="concat('Estimate ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
							<xsl:value-of select="concat('Stima ', position(), ' del bene ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Estimate ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<xsl:if test="./STIS">
						<arco-cd:estimatedValue>
							<xsl:value-of select="normalize-space(./STIS)" />
						</arco-cd:estimatedValue>
					</xsl:if>
					<xsl:if test="./STID">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./STID)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./STIM">
						<arco-core:informationSource>
							<xsl:value-of select="normalize-space(./STIM)" />
						</arco-core:informationSource>
					</xsl:if>
					<xsl:if test="./STIR">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./STIR)" />
						</arco-core:note>
					</xsl:if>
				</rdf:Description>
				<!-- Time interval as an individual -->
				<xsl:if test="./STID">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./STID)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./STID)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./STID)" />
						</l0:name>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./STID)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./STID)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- commission as an individual -->
			<xsl:for-each select="record/metadata/schede/*/AU/CMM">
				<xsl:variable name="parentPosition">
					<xsl:value-of select="position()" />
				</xsl:variable>	
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'Commission/', $itemURI, '-', position())" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Commission'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Committenza ', position(), ' del bene ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Commission ', position(), ' of cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Committenza ', position(), ' del bene ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Commission ', position(), ' of cultural property ', $itemURI)" />
					</rdfs:label>
					<xsl:for-each select="./CMMN">
						<xsl:if test=".">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, $parentPosition, '-committent-', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
					</xsl:for-each>
					<xsl:for-each select="./CMME">
						<xsl:if test=".">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
                                	<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, $parentPosition, '-sponsor-', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:if>
					</xsl:for-each>
					<xsl:if test="./CMMC and (not(starts-with(lower-case(normalize-space(./CMMC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CMMC)), 'n.r')))">
						<arco-cd:hasCircumstance>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./CMMC)))" />
                            </xsl:attribute>
						</arco-cd:hasCircumstance>
					</xsl:if>
					<xsl:if test="./CMMD and (not(starts-with(lower-case(normalize-space(./CMMD)), 'nr')) and not(starts-with(lower-case(normalize-space(./CMMD)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./CMMD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./CMMY">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./CMMY)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./CMMF">
						<arco-core:informationSource>
							<xsl:value-of select="normalize-space(./CMMF)" />
						</arco-core:informationSource>
					</xsl:if>
				</rdf:Description>
				<!-- Time interval as an individual -->
				<xsl:if test="./CMMD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./CMMD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./CMMD)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./CMMD)" />
						</l0:name>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(./CMMD)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(./CMMD)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- agentrole -->
				<xsl:for-each select="./CMMN">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, $parentPosition, '-committent-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Committente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Committent ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Committente ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Committent ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/Committent')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/Committent')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Committente'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Committent'" />
						</rdfs:label>
					</rdf:Description>
					<!-- agent as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
						<xsl:if test="../CMMD and (not(starts-with(lower-case(normalize-space(../CMMD)), 'nr')) and not(starts-with(lower-case(normalize-space(../CMMD)), 'n.r')))">
						<arco-cd:agentDate>
							<xsl:value-of select="normalize-space(../CMMD)" />
						</arco-cd:agentDate>
					</xsl:if>
					</rdf:Description>
				</xsl:for-each>
				<xsl:if	test="./CMMC and (not(starts-with(lower-case(normalize-space(./CMMC)), 'nr')) and not(starts-with(lower-case(normalize-space(./CMMC)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(./CMMC)))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Circumstance'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./CMMC)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./CMMC)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- sponsor -->
				<xsl:for-each select="./CMME">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, $parentPosition, '-sponsor-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Sponsor ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Sponsor ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Sponsor ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Sponsor ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/Sponsor')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/Sponsor')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Sponsor'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Sponsor'" />
						</rdfs:label>
					</rdf:Description>
					<!-- agent as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
			</xsl:for-each>
			<!-- intervention (*/RST) -->
			<xsl:for-each select="record/metadata/schede/*/*/RST">
				<xsl:if test="not($sheetType='A' or $sheetType='PG')">
				<xsl:if test="./*">
				<rdf:Description>
					<xsl:choose>
						<xsl:when test="contains(normalize-space(lower-case(./RSTI)), 'restaur') or contains(normalize-space(lower-case(./RSTI)), 'conservativi') or contains(normalize-space(lower-case(./RSTI)), 'conservative') or contains(normalize-space(lower-case(./RSTI)), 'conservativa') or contains(normalize-space(lower-case(./RSTI)), 'conservativo') or contains(normalize-space(lower-case(./RSTI)), 'consolidamento') or contains(normalize-space(lower-case(./RSTI)), 'controllo microclimatico') or contains(normalize-space(lower-case(./RSTI)), 'trattamento biocida-disinfestazione') or contains(normalize-space(lower-case(./RSTI)), 'rimozione di elementi non originali') or contains(normalize-space(lower-case(./RSTI)), 'pulitura meccanica') or contains(normalize-space(lower-case(./RSTI)), 'pulitura chimica') or contains(normalize-space(lower-case(./RSTI)), 'protezione finale') or contains(normalize-space(lower-case(./RSTI)), 'riadesione parti') or contains(normalize-space(lower-case(./RSTI)), 'trattamento parti metalliche')">
							<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'ConservationIntervention/', $itemURI, '-conservation-intervention-', position())" />
								</xsl:attribute>
						</xsl:when>
						<xsl:otherwise>
							<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Intervention/', $itemURI, '-intervention-', position())" />
								</xsl:attribute>
						</xsl:otherwise>
					</xsl:choose>
					<rdf:type>
						<xsl:choose>
							<xsl:when test="contains(normalize-space(lower-case(./RSTI)), 'restaur') or contains(normalize-space(lower-case(./RSTI)), 'conservativi') or contains(normalize-space(lower-case(./RSTI)), 'conservative') or contains(normalize-space(lower-case(./RSTI)), 'conservativa') or contains(normalize-space(lower-case(./RSTI)), 'conservativo') or contains(normalize-space(lower-case(./RSTI)), 'consolidamento') or contains(normalize-space(lower-case(./RSTI)), 'controllo microclimatico') or contains(normalize-space(lower-case(./RSTI)), 'trattamento biocida-disinfestazione') or contains(normalize-space(lower-case(./RSTI)), 'rimozione di elementi non originali') or contains(normalize-space(lower-case(./RSTI)), 'pulitura meccanica') or contains(normalize-space(lower-case(./RSTI)), 'pulitura chimica') or contains(normalize-space(lower-case(./RSTI)), 'protezione finale') or contains(normalize-space(lower-case(./RSTI)), 'riadesione parti') or contains(normalize-space(lower-case(./RSTI)), 'trattamento parti metalliche')">
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ConservationIntervention'" />
								</xsl:attribute>
							</xsl:when>
							<xsl:otherwise>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Intervention'" />
								</xsl:attribute>
							</xsl:otherwise>
						</xsl:choose>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:choose>
							<xsl:when test="contains(normalize-space(lower-case(./RSTI)), 'consolidamento') or contains(normalize-space(lower-case(./RSTI)), 'controllo microclimatico') or contains(normalize-space(lower-case(./RSTI)), 'trattamento biocida-disinfestazione') or contains(normalize-space(lower-case(./RSTI)), 'rimozione di elementi non originali') or contains(normalize-space(lower-case(./RSTI)), 'pulitura meccanica') or contains(normalize-space(lower-case(./RSTI)), 'pulitura chimica') or contains(normalize-space(lower-case(./RSTI)), 'protezione finale') or contains(normalize-space(lower-case(./RSTI)), 'riadesione parti') or contains(normalize-space(lower-case(./RSTI)), 'trattamento parti metalliche')">
								<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI, ': conservation intervention')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<rdfs:label xml:lang="it">
						<xsl:choose>
							<xsl:when test="contains(normalize-space(lower-case(./RSTI)), 'consolidamento') or contains(normalize-space(lower-case(./RSTI)), 'controllo microclimatico') or contains(normalize-space(lower-case(./RSTI)), 'trattamento biocida-disinfestazione') or contains(normalize-space(lower-case(./RSTI)), 'rimozione di elementi non originali') or contains(normalize-space(lower-case(./RSTI)), 'pulitura meccanica') or contains(normalize-space(lower-case(./RSTI)), 'pulitura chimica') or contains(normalize-space(lower-case(./RSTI)), 'protezione finale') or contains(normalize-space(lower-case(./RSTI)), 'riadesione parti') or contains(normalize-space(lower-case(./RSTI)), 'trattamento parti metalliche')">
								<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI, ': intervento conservativo')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:choose>
							<xsl:when test="contains(normalize-space(lower-case(./RSTI)), 'consolidamento') or contains(normalize-space(lower-case(./RSTI)), 'controllo microclimatico') or contains(normalize-space(lower-case(./RSTI)), 'trattamento biocida-disinfestazione') or contains(normalize-space(lower-case(./RSTI)), 'rimozione di elementi non originali') or contains(normalize-space(lower-case(./RSTI)), 'pulitura meccanica') or contains(normalize-space(lower-case(./RSTI)), 'pulitura chimica') or contains(normalize-space(lower-case(./RSTI)), 'protezione finale') or contains(normalize-space(lower-case(./RSTI)), 'riadesione parti') or contains(normalize-space(lower-case(./RSTI)), 'trattamento parti metalliche')">
								<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI, ': conservation intervention')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:choose>
							<xsl:when test="contains(normalize-space(lower-case(./RSTI)), 'consolidamento') or contains(normalize-space(lower-case(./RSTI)), 'controllo microclimatico') or contains(normalize-space(lower-case(./RSTI)), 'trattamento biocida-disinfestazione') or contains(normalize-space(lower-case(./RSTI)), 'rimozione di elementi non originali') or contains(normalize-space(lower-case(./RSTI)), 'pulitura meccanica') or contains(normalize-space(lower-case(./RSTI)), 'pulitura chimica') or contains(normalize-space(lower-case(./RSTI)), 'protezione finale') or contains(normalize-space(lower-case(./RSTI)), 'riadesione parti') or contains(normalize-space(lower-case(./RSTI)), 'trattamento parti metalliche')">
								<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI, ': intervento conservativo')" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<xsl:if test="./RSTO">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./RSTO)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./RSTS">
						<arco-cd:framework>
							<xsl:value-of select="normalize-space(./RSTS)" />
						</arco-cd:framework>
					</xsl:if>
					<xsl:if test="./RSTT">
						<arco-core:description>
							<xsl:value-of select="concat('Intervento su ', normalize-space(./RST))" />
						</arco-core:description>
					</xsl:if>
					<xsl:if test="./RSTM">
						<arco-core:note>
							<xsl:value-of select="concat('Intervento su ', normalize-space(./RSTM))" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./RSTD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                	               	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RSTD)))" />
                           	</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
						<xsl:if test="./RSTI and (not(starts-with(lower-case(normalize-space(./RSTI)), 'nr')) and not(starts-with(lower-case(normalize-space(./RSTI)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'InterventionType/', arco-fn:urify(normalize-space(./RSTI)))" />
							</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<xsl:for-each select="./RSTE">
						<arco-lite:hasResponsibleAgent>
							<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	               			</xsl:attribute>
						</arco-lite:hasResponsibleAgent>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-conservation-intervention-', position(), '-activity-responsible')" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:for-each>
					<xsl:for-each select="./RSTR">
						<arco-lite:hasSponsor>
							<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	               			</xsl:attribute>
						</arco-lite:hasSponsor>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-conservation-intervention-', position(), '-activity-sponsor')" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:for-each>
					<xsl:for-each select="./RSTN">
						<arco-lite:hasOperator>
							<xsl:attribute name="rdf:resource">
	                			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	               			</xsl:attribute>
						</arco-lite:hasOperator>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-conservation-intervention-', position(), '-activity-operator')" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:for-each>
				</rdf:Description>
				<!-- intervention type as an individual -->
				<xsl:if test="./RSTI and (not(starts-with(lower-case(normalize-space(./RSTI)), 'nr')) and not(starts-with(lower-case(normalize-space(./RSTI)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'InterventionType/', arco-fn:urify(normalize-space(./RSTI)))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/InterventionType" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./RSTI)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./RSTI)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Time Interval for intervention as an individual -->
				<xsl:if test="./RSTD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RSTD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<tiapit:time>
							<xsl:value-of select="normalize-space(./RSTD)" />
						</tiapit:time>
					</rdf:Description>
				</xsl:if>
				<!-- activiy responsible as an individual -->
				<xsl:for-each select="./RSTE">
					<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-conservation-intervention-', position(), '-activity-responsible')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Responsabile dell&quot;intervento di conservazione ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Responsabile dell&quot;intervento di conservazione ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Responsible of conservation intervention ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Responsible of conservation intervention ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/ResponsibleAgent')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Responsabile dell''attività'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Responsible agent'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                	    </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
					            </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
				<!-- activiy sponsor as an individual -->
				<xsl:for-each select="./RSTR">
					<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-conservation-intervention-', position(), '-activity-sponsor')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Sponsor dell&quot;intervento di conservazione ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Sponsor dell&quot;intervento di conservazione ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Sponsor of conservation intervention ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Sponsor of conservation intervention ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/Sponsor')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Sponsor')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Sponsor'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Sponsor'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
			        	    	</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
				<!-- activiy operator as an individual -->
				<xsl:for-each select="./RSTN">
					<xsl:if test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-conservation-intervention-', position(), '-activity-operator')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Operatore dell&quot;intervento di conservazione ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Operatore dell&quot;intervento di conservazione ', position(), ' del bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Operator of conservation intervention ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Operator of conservation intervention ', position(), ' of cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Role/Operator')" />
								</xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- role of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Operator')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Operatore'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Operatore'" />
							</rdfs:label>
						</rdf:Description>
						<!-- agent of activity responsible as an individual -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	            	        </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
					            </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			</xsl:if>
			</xsl:for-each>
			<!-- intervention (RS/RST for A and PG) -->
			<xsl:for-each select="record/metadata/schede/*/RS/RST">
				<xsl:if test="$sheetType='A' or $sheetType='PG'">
				<xsl:if test="./*">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ConservationIntervention/', $itemURI, '-conservation-intervention-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ConservationIntervention'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Conservation intervention ', position(), ' on cultural property ', $itemURI)" />
					</rdfs:label>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Intervento conservativo ', position(), ' sul bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Conservation intervention ', position(), ' on cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Intervento conservativo ', position(), ' sul bene culturale ', $itemURI)" />
					</l0:name>
					<xsl:for-each select="./RSTT">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'InterventionType/', arco-fn:urify(normalize-space(.)))" />
							</xsl:attribute>
						</arco-core:hasType>
					</xsl:for-each>
					<xsl:if test="./RSTI or ./RSTF and (not(starts-with(lower-case(normalize-space(./RSTI)), 'nr')) and not(starts-with(lower-case(normalize-space(./RSTI)), 'n.r')) and not(starts-with(lower-case(normalize-space(./RSTF)), 'nr')) and not(starts-with(lower-case(normalize-space(./RSTF)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                        		<xsl:choose>
                        			<xsl:when test="./RSTI and ./RSTF">
               	        				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RSTI)), '-', arco-fn:urify(normalize-space(./RSTF)))" />
                        			</xsl:when>
                        			<xsl:when test="./RSTI">
        	               				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RSTI)))" />
                        			</xsl:when>
                        			<xsl:when test="./RSTF">
        	               				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RSTF)))" />
                        			</xsl:when>
                       			</xsl:choose>
                       		</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
				</rdf:Description>
				<!-- time interval for intervention as an individual -->
				<xsl:if test="./RSTI or ./RSTF and (not(starts-with(lower-case(normalize-space(./RSTI)), 'nr')) and not(starts-with(lower-case(normalize-space(./RSTI)), 'n.r')) and not(starts-with(lower-case(normalize-space(./RSTF)), 'nr')) and not(starts-with(lower-case(normalize-space(./RSTF)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                    	    <xsl:choose>
                        		<xsl:when test="./RSTI and ./RSTF">
                		        	<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RSTI)), '-', arco-fn:urify(normalize-space(./RSTF)))" />
                        		</xsl:when>
                        		<xsl:when test="./RSTI">
            	            		<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RSTI)))" />
                        		</xsl:when>
                        		<xsl:when test="./RSTF">
    	                    		<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RSTF)))" />
                        		</xsl:when>
                        	</xsl:choose>
                    	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                           		<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                        	</xsl:attribute>
						</rdf:type>
						<arco-arco:startTime>
							<xsl:value-of select="normalize-space(./RSTI)" />
						</arco-arco:startTime>
						<arco-arco:endTime>
							<xsl:value-of select="normalize-space(./RSTF)" />
						</arco-arco:endTime>
					</rdf:Description>
				</xsl:if>
				<!-- intervention type as an individual -->
				<xsl:for-each select="./RSTT">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'InterventionType/', arco-fn:urify(normalize-space(.)))" />
						</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/InterventionType" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- intervention (RO/RIS) -->
			<xsl:for-each select="record/metadata/schede/*/RO/RIS">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Intervention/', $itemURI, 'intervention-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Intervention'" />
			            </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI, ': conservation intervention')" />
					</rdfs:label>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI, ': intervento conservativo')" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI, ': conservation intervention')" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI, ': intervento conservativo')" />
					</l0:name>
					<xsl:if test="./RISD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RISD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./RIST and (not(starts-with(lower-case(normalize-space(./RIST)), 'nr')) and not(starts-with(lower-case(normalize-space(./RIST)), 'n.r')))">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'InterventionType/', arco-fn:urify(normalize-space(./RIST)))" />
							</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
				</rdf:Description>
				<!-- intervention type as an individual -->
				<xsl:if test="./RIST and (not(starts-with(lower-case(normalize-space(./RIST)), 'nr')) and not(starts-with(lower-case(normalize-space(./RIST)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'InterventionType/', arco-fn:urify(normalize-space(./RIST)))" />
	           			</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/InterventionType" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./RIST)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./RIST)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Time Interval for intervention as an individual -->
				<xsl:if test="./RISD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RISD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<tiapit:time>
							<xsl:value-of select="normalize-space(./RISD)" />
						</tiapit:time>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			<xsl:if test="record/metadata/schede/*/MT/RST">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Intervention/', $itemURI, 'intervention-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Intervention'" />
			            </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI)" />
					</rdfs:label>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI)" />
					</l0:name>
					<arco-core:description>
						<xsl:value-of select="record/metadata/schede/*/MT/RST" />
					</arco-core:description>
				</rdf:Description>
			</xsl:if>
			<xsl:for-each select="record/metadata/schede/VeAC/CO/RIA">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Intervention/', $itemURI, 'intervention-ria-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Intervention'" />
			            </xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI)" />
					</rdfs:label>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Intervention ', position(), ' on cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Intervento ', position(), ' sul bene culturale ', $itemURI)" />
					</l0:name>
					<xsl:if test="./RIAM">
						<arco-core:description>
							<xsl:value-of select="./RIAM" />
						</arco-core:description>
					</xsl:if>
					<xsl:if test="./RIAD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RIAD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
				</rdf:Description>
				<!-- Time Interval for intervention as an individual -->
				<xsl:if test="./RIAD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./RIAD)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<tiapit:time>
							<xsl:value-of select="normalize-space(./RIAD)" />
						</tiapit:time>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<!-- conservation status -->
			<xsl:for-each select="record/metadata/schede/*/CO/STC">
				<xsl:if test="./*">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'ConservationStatus/', $itemURI, '-conservation-status-', position())" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/ConservationStatus'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Stato di conservazione ', position(), ' del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Stato di conservazione ', position(), ' del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Conservation status ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Conservation status ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./STCC and not(lower-case(normalize-space(./STCC))='nr' or lower-case(normalize-space(./STCC))='n.r.' or lower-case(normalize-space(./STCC))='nr (recupero pregresso)')">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
                                <xsl:choose>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='ottimo' or lower-case(normalize-space(./STCC))='ottima' or lower-case(normalize-space(./STCC))='eccellente'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/ExcellentConservationStatus'" />
									</xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='buono' or lower-case(normalize-space(./STCC))='buonoe' or lower-case(normalize-space(./STCC))='buona'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/GoodConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='mediocre'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MediocreConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='discreto' or lower-case(normalize-space(./STCC))='discreta' or lower-case(normalize-space(./STCC))='sufficiente'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/DecentConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='cattivo' or lower-case(normalize-space(./STCC))='cattiva'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/BadConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='pessimo' or lower-case(normalize-space(./STCC))='pessima' or lower-case(normalize-space(./STCC))='pessomo' or lower-case(normalize-space(./STCC))='immediato pericolo'">
                                    	<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/VeryBadConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='dato non disponibile'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/UnavailableConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="./STCC">
                                        <xsl:value-of select="concat($NS, 'ConservationStatusType/', arco-fn:urify(normalize-space(./STCC)))" />
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:attribute>
							</arco-core:hasType>
						</xsl:if>
						<xsl:if test="./STCL and not(lower-case(normalize-space(./STCL))='nr' or lower-case(normalize-space(./STCL))='n.r.' or lower-case(normalize-space(./STCL))='nr (recupero pregresso)')">
							<arco-dd:hasLegibility>
								<xsl:attribute name="rdf:resource">
                                <xsl:choose>
                                    <xsl:when test="lower-case(normalize-space(./STCL))='buono' or lower-case(normalize-space(./STCL))='buona'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/GoodLegibility'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCL))='totale'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/CompleteLegibility'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCL))='discreto' or lower-case(normalize-space(./STCL))='discreta'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/DecentLegibility'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCL))='ridotto' or lower-case(normalize-space(./STCL))='ridotta'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/LoweredLegibility'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCL))='assente'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/ImpossibleLegibility'" />
                                    </xsl:when>
                                    <xsl:when test="./STCL">
                                        <xsl:value-of select="concat($NS, 'Legibility/', arco-fn:urify(normalize-space(./STCL)))" />
                                    </xsl:when>
                                </xsl:choose>
                            </xsl:attribute>
							</arco-dd:hasLegibility>
						</xsl:if>
						<xsl:if test="./STCS">
							<arco-core:specifications>
								<xsl:value-of select="normalize-space(./STCS)" />
							</arco-core:specifications>
						</xsl:if>
						<xsl:if test="./STCE">
							<arco-core:specifications>
								<xsl:value-of select="normalize-space(./STCE)" />
							</arco-core:specifications>
						</xsl:if>
						<xsl:if test="./STCO">
							<arco-core:specifications>
								<xsl:value-of select="normalize-space(./STCO)" />
							</arco-core:specifications>
						</xsl:if>
						<xsl:if test="./STCN">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./STCN)" />
							</arco-core:note>
						</xsl:if>
						<xsl:if test="./STCD">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./STCD)))" />
								</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./STCM and (not(starts-with(lower-case(normalize-space(./STCM)), 'nr')) and not(starts-with(lower-case(normalize-space(./STCM)), 'n.r')))">
							<arco-dd:hasConservationMethod>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'ConservationMethod/', arco-fn:urify(normalize-space(./STCM)))" />
								</xsl:attribute>
							</arco-dd:hasConservationMethod>
						</xsl:if>
					</rdf:Description>
					<!-- ConservationMethod as an individual -->
					<xsl:if test="./STCM and (not(starts-with(lower-case(normalize-space(./STCM)), 'nr')) and not(starts-with(lower-case(normalize-space(./STCM)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'ConservationMethod/', arco-fn:urify(normalize-space(./STCM)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/ConservationMethod'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./STCM)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./STCM)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<!-- Time interval as an individual -->
					<xsl:if test="./STCD">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./STCD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./STCD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./STCD)" />
							</l0:name>
							<tiapit:time>
								<xsl:value-of select="normalize-space(./STCD)" />
							</tiapit:time>
						</rdf:Description>
					</xsl:if>					
					<xsl:if test="./STCC and not(lower-case(normalize-space(./STCC))='nr' or lower-case(normalize-space(./STCC))='n.r.' or lower-case(normalize-space(./STCC))='nr (recupero pregresso)')">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                               <xsl:choose>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='ottimo' or lower-case(normalize-space(./STCC))='ottima' or lower-case(normalize-space(./STCC))='eccellente'">
										<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/ExcellentConservationStatus'" />
									</xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='buono' or lower-case(normalize-space(./STCC))='buonoe' or lower-case(normalize-space(./STCC))='buona'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/GoodConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='mediocre'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/MediocreConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='discreto' or lower-case(normalize-space(./STCC))='discreta' or lower-case(normalize-space(./STCC))='sufficiente'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/DecentConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='cattivo' or lower-case(normalize-space(./STCC))='cattiva'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/BadConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='pessimo' or lower-case(normalize-space(./STCC))='pessima' or lower-case(normalize-space(./STCC))='pessomo' or lower-case(normalize-space(./STCC))='immediato pericolo'">
                                    	<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/VeryBadConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="lower-case(normalize-space(./STCC))='dato non disponibile'">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/UnavailableConservationStatus'" />
                                    </xsl:when>
                                    <xsl:when test="./STCC">
                                        <xsl:value-of select="concat($NS, 'ConservationStatusType/', arco-fn:urify(normalize-space(./STCC)))" />
                                    </xsl:when>
                               </xsl:choose>
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/ConservationStatusType" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(./STCC)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./STCC)" />
							</l0:name>
						</rdf:Description>
					</xsl:if>
					<xsl:if test="./STCL and not(lower-case(normalize-space(./STCL))='nr' or lower-case(normalize-space(./STCL))='n.r.' or lower-case(normalize-space(./STCL))='nr (recupero pregresso)')">
						<xsl:choose>
							<xsl:when test="lower-case(normalize-space(./STCL))='buono' or lower-case(normalize-space(./STCL))='buona'" />
							<xsl:when test="lower-case(normalize-space(./STCL))='totale'" />
							<xsl:when test="lower-case(normalize-space(./STCL))='discreto' or lower-case(normalize-space(./STCL))='discreta'" />
							<xsl:when test="lower-case(normalize-space(./STCL))='ridotto' or lower-case(normalize-space(./STCL))='ridotta'" />
							<xsl:when test="lower-case(normalize-space(./STCL))='assente'" />
							<xsl:when test="./STCL">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                    	<xsl:value-of select="concat($NS, 'Legibility/', arco-fn:urify(normalize-space(./STCL)))" />
									</xsl:attribute>
									<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/Legibility" />
									<rdfs:label>
										<xsl:value-of select="normalize-space(./STCL)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./STCL)" />
									</l0:name>
								</rdf:Description>
							</xsl:when>
						</xsl:choose>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<xsl:if test="record/metadata/schede/*/MT/STC">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ConservationStatus/', $itemURI, '-conservation-status-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/ConservationStatus'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Stato di conservazione ', position(), ' del bene: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Stato di conservazione ', position(), ' del bene: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Conservation status ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Conservation status ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<arco-core:description>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/MT/STC)" />
					</arco-core:description>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/OG/OGR">
				<rdf:Description>
					<xsl:choose>
						<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/OGR))='disponibile' or lower-case(normalize-space(record/metadata/schede/*/OG/OGR))='bene disponibile' or lower-case(normalize-space(record/metadata/schede/*/OG/OGR))='reale'"></xsl:when>
						<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/OG/OGR))='bene già catalogato, non più disponibile' or lower-case(normalize-space(record/metadata/schede/*/OG/OGR))='documentata' or lower-case(normalize-space(record/metadata/schede/*/OG/OGR))='non più disponibile'"></xsl:when>
						<xsl:otherwise>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'CulturalPropertyAvailability/', arco-fn:urify(normalize-space(record/metadata/schede/*/OG/OGR)))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/CulturalPropertyAvailability" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGR)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/OGR)" />
							</l0:name>
						</xsl:otherwise>
					</xsl:choose>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/LC/ACB">
				<xsl:choose>
					<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/LC/ACB/ACBA))='si' or lower-case(normalize-space(record/metadata/schede/*/LC/ACB/ACBA))='sì'">
					</xsl:when>
					<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/LC/ACB/ACBA))='no'">
					</xsl:when>
					<xsl:when test="lower-case(normalize-space(record/metadata/schede/*/LC/ACB/ACBA))='in parte'">
					</xsl:when>
					<xsl:otherwise>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'CulturalPropertyAccessibility/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/ACB/ACBA)))" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/CulturalPropertyAccessibility" />
							<rdfs:label>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/ACB/ACBA)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/ACB/ACBA)" />
							</l0:name>
							<xsl:if test="record/metadata/schede/*/LC/ACB/ACBS">
								<arco-core:note>
									<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/ACB/ACBS)" />
								</arco-core:note>
							</xsl:if>
						</rdf:Description>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:if>
			<!-- numismatic property counterstamp -->
			<xsl:for-each select="record/metadata/schede/NU/DA/CON">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-counterstamp-', position())" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/AffixedElement" />
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Counterstamp of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Counterstamp of cultural property ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Contromarca del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Contromarca del bene culturale ', $itemURI)" />
					</l0:name>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Counterstamp'" />
						</xsl:attribute>
					</arco-core:hasType>
					<xsl:if test="./CONA or ./CONC">
						<xsl:if test="not(CONA[starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r')])">
							<arco-cd:hasCoinIssuance>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'CoinIssuance/', $itemURI, '-counterstamp-', position())" />
								</xsl:attribute>
							</arco-cd:hasCoinIssuance>
						</xsl:if>
					</xsl:if>
					<xsl:if test="./COND">
						<arco-core:description>
							<xsl:value-of select="concat('Dritto: ', ./COND)" />
						</arco-core:description>
					</xsl:if>
					<xsl:if test="./CONR">
						<arco-core:description>
							<xsl:value-of select="concat('Rovescio: ', ./CONR)" />
						</arco-core:description>
					</xsl:if>
				</rdf:Description>
				<!-- coin issuance -->		
				<xsl:if test="./CONA or ./CONC or ./CONZ">
					<xsl:if test="not(CONA[starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r')])">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'CoinIssuance/', $itemURI, '-counterstamp-', position())" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	            					<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CoinIssuance'" />
	            				</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Coin issuance of counterstamp of cultural property ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Coin issuance of counterstamp of cultural property ', $itemURI)" />
							</l0:name>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Emissione di contromarca del bene culturale ', $itemURI)" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Emissione di contromarca del bene culturale ', $itemURI)" />
							</l0:name>
							<xsl:if test="./CONC">
								<tiapit:atTime>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./CONC)))" />
									</xsl:attribute>
								</tiapit:atTime>
							</xsl:if>
							<xsl:if test="./CONH">
								<arco-core:note>
									<xsl:value-of select="normalize-space(./CONH)" />
								</arco-core:note>
							</xsl:if>
							<!-- has committent -->
							<xsl:for-each select="./CONA">
								<xsl:if test="(not(starts-with(lower-case(normalize-space(./CONA)), 'nr')) and not(starts-with(lower-case(normalize-space(./CONA)), 'n.r')))">
									<arco-core:hasAgentRole>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-counterstamp-committent-', position())" />
                        				</xsl:attribute>
									</arco-core:hasAgentRole>
									<arco-cd:hasCommittent>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                        				</xsl:attribute>
									</arco-cd:hasCommittent>
								</xsl:if>
							</xsl:for-each>
							<!-- has mint -->
							<xsl:if test="./CONZ and (not(starts-with(lower-case(normalize-space(./CONZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./CONZ)), 'n.r')))">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-counterstamp-mint-', position())" />
                        		</xsl:attribute>
							</arco-core:hasAgentRole>
							<arco-cd:hasMint>
								<xsl:attribute name="rdf:resource">
                            		<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CONZ))" />
                        		</xsl:attribute>
							</arco-cd:hasMint>
						</xsl:if>
						</rdf:Description>
						<xsl:for-each select="./CONA">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
		                        	<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-counterstamp-committent-', position())" />
		                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Committente ', position(), ' della contromarca del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Committent ', position(), ' of counterstamp of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Committente ', position(), ' della contromarca del bene culturale ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Committent ', position(), ' of counterstamp of cultural property ', $itemURI, ': ', normalize-space(.))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Role/Committent')" />
									</xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
									</xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
		                        	<xsl:value-of select="concat($NS, 'Role/Committent')" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Committente'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Committent'" />
								</rdfs:label>
							</rdf:Description>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:for-each>
						<!-- mint as individual -->
						<xsl:if test="./CONZ and (not(starts-with(lower-case(normalize-space(./CONZ)), 'nr')) and not(starts-with(lower-case(normalize-space(./CONZ)), 'n.r')))">						
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                        <xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-counterstamp-mint-', position())" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
		    	                        <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
		        	                </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Zecca ', position(), ' della contromarca del bene culturale ', $itemURI, ': ', normalize-space(./CONZ))" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Mint ', position(), ' of counterstamp of cultural property ', $itemURI, ': ', normalize-space(./CONZ))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Zecca ', position(), ' della contromarca del bene culturale ', $itemURI, ': ', normalize-space(./CONZ))" />
								</l0:name>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Mint ', position(), ' of counterstamp of cultural property ', $itemURI, ': ', normalize-space(./CONZ))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
		    	                        <xsl:value-of select="concat($NS, 'Role/Mint')" />
			                        </xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
		        	                    <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
			                        </xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
		                        	<xsl:value-of select="concat($NS, 'Role/Mint')" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
		    	                        <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Zecca'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Mint'" />
								</rdfs:label>
							</rdf:Description>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
		            	            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./CONZ))" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
		    	                        <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
			                        </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(./CONZ)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(./CONZ)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<!-- Time interval as individual -->
						<xsl:if test="./COND">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./COND)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./COND)" />
								</rdfs:label>
								<tiapit:startTime>
									<xsl:value-of select="normalize-space(./COND)" />
								</tiapit:startTime>
								<tiapit:endTime>
									<xsl:value-of select="normalize-space(./COND)" />
								</tiapit:endTime>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
				</xsl:if>	
				<!-- obverse of coin -->
				<xsl:if test="./COND">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                		<xsl:value-of select="concat($NS, 'CulturalPropertyPart/', $itemURI, '-obverse')" />
	                	</xsl:attribute>
						<rdf:type rdf:resource="http://dati.beniculturali.it/cis/CulturalEntity" />
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Dritto del bene numismatico ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Dritto del bene numismatico ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Obverse of numismatic property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Obverse of numismatic property ', $itemURI)" />
						</l0:name>
						<arco-dd:hasAffixedElement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-counterstamp-', position())" />
							</xsl:attribute>
						</arco-dd:hasAffixedElement>
					</rdf:Description>
				</xsl:if>
				<!-- reverse of coin -->
				<xsl:if test="./CONR">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	    	           		<xsl:value-of select="concat($NS, 'CulturalPropertyPart/', $itemURI, '-reverse')" />
	                	</xsl:attribute>
						<rdf:type rdf:resource="http://dati.beniculturali.it/cis/CulturalEntity" />
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Rovescio del bene numismatico ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Rovescio del bene numismatico ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Reverse of numismatic property ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Reverse of numismatic property ', $itemURI)" />
						</l0:name>
						<arco-dd:hasAffixedElement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AffixedElement/', $itemURI, '-counterstamp-', position())" />
							</xsl:attribute>
						</arco-dd:hasAffixedElement>
				</rdf:Description>
			</xsl:if>
			</xsl:for-each>
			<!-- We create the Time Indexed Typed Location associated with the Cultural Property -->
			<xsl:if test="record/metadata/schede/*/LC">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-current')" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/location/TimeIndexedTypedLocation'" />
                        </xsl:attribute>
					</rdf:type>
					<arco-location:isTimeIndexedTypedLocationOf>
						<xsl:attribute name="rdf:resource"> 
							<xsl:value-of select="$culturalProperty" /> 
						</xsl:attribute>
					</arco-location:isTimeIndexedTypedLocationOf>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Localizzazione fisica attuale del bene: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Localizzazione fisica attuale del bene: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Current physical location of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Current physical location of cultural property: ', $itemURI)" />
					</l0:name>
					<arco-location:hasLocationType>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/location/CurrentPhysicalLocation'" />
                        </xsl:attribute>
					</arco-location:hasLocationType>
					<xsl:if test="record/metadata/schede/*/LC/LDC/LDCS">
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCS)" />
						</arco-core:specifications>
					</xsl:if>				
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCV and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCV))='nr' or lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCV))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCV))='nr (recupero pregresso)' or lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCV))='.' or lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCV))='-')">
						<arco-location:locationDetails>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/PVC/PVCV)" />
						</arco-location:locationDetails>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/LC/LCV">
						<arco-location:locationDetails>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LCV)" />
						</arco-location:locationDetails>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/LC/LCN">
						<arco-core:note>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LCN)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/UB/UBO">
						<arco-core:note>
							<xsl:value-of select="concat('Ubicazione originaria: ', normalize-space(record/metadata/schede/*/UB/UBO))" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/LC/LDC/LDCD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of
								select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCD)))" />
                            </xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/LC/LDC/LDCM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'n.r')))">
						<arco-location:hasCulturalInstituteOrSite>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$cis" />
							</xsl:attribute>
						</arco-location:hasCulturalInstituteOrSite>
					</xsl:if>
				</rdf:Description>
				<!-- Time Interval for Current Location -->
				<xsl:if test="record/metadata/schede/*/LC/LDC/LDCD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                	        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCD)))" />
                    	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
        	                    <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
            	            </xsl:attribute>
						</rdf:type>
						<tiapit:time>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCD)" />
						</tiapit:time>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			
			<!-- Address as individual -->
			<xsl:if test="record/metadata/schede/*/LC/PVC/*">
				<xsl:variable name="address">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
							<xsl:value-of select="concat($NS, 'Address/', arco-fn:urify(arco-fn:md5(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI))))))" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/LC/PVC/PVCI">
									<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVL/PVLT)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)))))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="$address" />
                    </xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
                        </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:for-each select="record/metadata/schede/*/LC/PVC/*">
							<xsl:choose>
								<xsl:when test="position() = 1">
									<xsl:value-of select="./text()" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat(', ', ./text())" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:for-each>
					</rdfs:label>
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCF">
						<clvapit:hasAddressArea>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/PVC/PVCF)))" />
                            </xsl:attribute>
						</clvapit:hasAddressArea>
					</xsl:if>
					<xsl:for-each select="record/metadata/schede/*/LC/PVG">
						<arco-core:note>
							<xsl:value-of select="normalize-space(.)" />
						</arco-core:note>
					</xsl:for-each>
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCI and not(record/metadata/schede/*/LC/PVC/PVCI='.' or record/metadata/schede/*/LC/PVC/PVCI='-' or record/metadata/schede/*/LC/PVC/PVCI='/') and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCI)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCI)), 'n.r')))">
						<clvapit:fullAddress>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/PVC/PVCI)" />
						</clvapit:fullAddress>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/LC/LDC/LDCU and not(record/metadata/schede/*/LC/LDC/LDCU='.' or record/metadata/schede/*/LC/LDC/LDCU='-' or record/metadata/schede/*/LC/LDC/LDCU='/') and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCU)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCU)), 'n.r')))">
						<clvapit:fullAddress>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCU)" />
						</clvapit:fullAddress>
					</xsl:if>
					<!-- Stato -->
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCS and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS)), 'n.r')))">
						<clvapit:hasCountry>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCS))" />
                            </xsl:attribute>
						</clvapit:hasCountry>
					</xsl:if>
					<!-- Regione -->
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCR and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCR)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCR)), 'n.r')))">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/PVC/PVCC and (starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'firenze') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'siena') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'san severino marche') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'modena'))">	
								<xsl:choose>
									<xsl:when test="record/metadata/schede/*/LC/PVC/PVCR and (starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCR)), 'lombardia'))">
									</xsl:when>
									<xsl:otherwise>
										<clvapit:hasRegion>
											<xsl:attribute name="rdf:resource">
            	            	                 <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCR))" />
		                        	        </xsl:attribute>
										</clvapit:hasRegion>
									</xsl:otherwise>
								</xsl:choose>					
							</xsl:when>
							<xsl:otherwise>
								<clvapit:hasRegion>
									<xsl:attribute name="rdf:resource">
        	            	            <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCR))" />
            	            	    </xsl:attribute>
								</clvapit:hasRegion>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:if>
					<!-- Provincia -->
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCP and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCP)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCP)), 'n.r')))">
						<clvapit:hasProvince>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCP))" />
                            </xsl:attribute>
						</clvapit:hasProvince>
					</xsl:if>
					<!-- Comune -->
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCC and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'n.r')))">
						<clvapit:hasCity>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'City/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCC))" />
                            </xsl:attribute>
						</clvapit:hasCity>
					</xsl:if>
					<!-- Località -->
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCL and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCL)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCL)), 'n.r')))">
						<clvapit:hasAddressArea>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCL))" />
                            </xsl:attribute>
						</clvapit:hasAddressArea>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/LC/PVC/PVCE and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCE)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCE)), 'n.r')))">
						<clvapit:hasAddressArea>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCE))" />
                            </xsl:attribute>
						</clvapit:hasAddressArea>
					</xsl:if>
					<!-- ClericalAdministrativeArea -->
					<xsl:if test="record/metadata/schede/*/LC/PVE">
						<arco-location:hasClericalAdministrativeArea>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'ClericalAdministrativeArea/', arco-fn:urify(record/metadata/schede/*/LC/PVE))" />
                            </xsl:attribute>
						</arco-location:hasClericalAdministrativeArea>
					</xsl:if>
					<!-- Old Town -->
					<xsl:if test="record/metadata/schede/*/LC/CST/CSTD">
						<clvapit:hasAddressComponent>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'OldTown/', arco-fn:urify(record/metadata/schede/*/LC/CST/CSTD))" />
                            </xsl:attribute>
						</clvapit:hasAddressComponent>
					</xsl:if>
					<!-- Urban Area -->
					<xsl:if test="record/metadata/schede/*/LC/ZUR/ZURD">
						<clvapit:hasAddressComponent>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'UrbanArea/', arco-fn:urify(record/metadata/schede/*/LC/ZUR/ZURD))" />
                            </xsl:attribute>
						</clvapit:hasAddressComponent>
					</xsl:if>
					<!-- District-->
					<xsl:if test="record/metadata/schede/*/LC/SET/SETD">
						<clvapit:hasAddressComponent>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'District/', arco-fn:urify(record/metadata/schede/*/LC/SET/SETD))" />
                            </xsl:attribute>
						</clvapit:hasAddressComponent>
					</xsl:if>
				</rdf:Description>
				<!-- Clerical Administrative Area : if any exists -->
				<xsl:if test="record/metadata/schede/*/LC/PVE">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'ClericalAdministrativeArea/', arco-fn:urify(record/metadata/schede/*/LC/PVE))" />
		                </xsl:attribute>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/PVE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/PVE)" />
						</l0:name>
						<rdf:type
							rdf:resource="http://dati.beniculturali.it/cis/ClericalAdministrativeArea" />
					</rdf:Description>
				</xsl:if>
				<!-- Old Town : if any exists -->
				<xsl:if test="record/metadata/schede/*/LC/CST/CSTD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'OldTown/', arco-fn:urify(record/metadata/schede/*/LC/CST/CSTD))" />
		                </xsl:attribute>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/CST/CSTD)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/CST/CSTD)" />
						</l0:name>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/OldTown" />
						<xsl:if test="record/metadata/schede/*/LC/CST/CSTN">
							<arco-location:administrativeOrderNumber>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/CST/CSTN)" />
							</arco-location:administrativeOrderNumber>
						</xsl:if>
						<xsl:if test="record/metadata/schede/*/LC/CST/CSTA">
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
										<xsl:when test="lower-case(normalize-space(.)) = 'capoluogo municipale'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/ChiefTown'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(.)) = 'centro inglobato'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/IncorporatedArea'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(.)) = 'frazione'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/TownFraction'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(.)) = 'localita'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/Locality'" />
										</xsl:when>
									</xsl:choose>
								</xsl:attribute>
							</arco-core:hasType>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- Urban area : if any exists -->
				<xsl:if test="record/metadata/schede/*/LC/ZUR/ZURD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'UrbanArea/', arco-fn:urify(record/metadata/schede/*/LC/ZUR/ZURD))" />
		                </xsl:attribute>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/ZUR/ZURD)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/ZUR/ZURD)" />
						</l0:name>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/UrbanArea" />
						<xsl:if test="record/metadata/schede/*/LC/ZUR/ZURN">
							<arco-location:administrativeOrderNumber>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/ZUR/ZURN)" />
							</arco-location:administrativeOrderNumber>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- District : if any exists -->
				<xsl:if test="record/metadata/schede/*/LC/SET/SETD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'District/', arco-fn:urify(record/metadata/schede/*/LC/SET/SETD))" />
		                </xsl:attribute>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/SET/SETD)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/SET/SETD)" />
						</l0:name>
						<rdf:type rdf:resource="https://w3id.org/italia/onto/CLV/District" />
						<xsl:if test="record/metadata/schede/*/LC/LC/SET/SETN">
							<arco-location:administrativeOrderNumber>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LC/SET/SETN)" />
							</arco-location:administrativeOrderNumber>
						</xsl:if>
						<xsl:if test="record/metadata/schede/*/LC/LC/SET/SETP">
							<arco-location:districtNumber>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LC/SET/SETP)" />
							</arco-location:districtNumber>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- Toponym in Time as individual -->
				<xsl:for-each select="record/metadata/schede/*/LC/PVL">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:choose>
                                <xsl:when test="./PVLT">
                                    <xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./PVLT)))" />
                                </xsl:when>
                                <xsl:otherwise>
                                    <xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(.)))" />
                                </xsl:otherwise>
                            </xsl:choose>
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/location/ToponymInTime'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
								<xsl:when test="./PVLT">
									<xsl:value-of select="normalize-space(./PVLT)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(.)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
								<xsl:when test="./PVLT">
									<xsl:value-of select="normalize-space(./PVLT)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(.)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./PVLR">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
        	                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./PVLR)))" />
            	                </xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./PVLS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./PVLS)" />
							</arco-core:note>
						</xsl:if>
					</rdf:Description>
				</xsl:for-each>
				<!-- Address Area as individual -->
				<xsl:if test="record/metadata/schede/*/LC/PVC/PVCF">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/PVC/PVCF)))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCF)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCF)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Stato -->
				<xsl:if test="record/metadata/schede/*/LC/PVC/PVCS and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCS))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Country'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCS)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCS)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Regione -->
				<xsl:if test="record/metadata/schede/*/LC/PVC/PVCR and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCR)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCR)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCR))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Region'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCR)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCR)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Provincia -->
				<xsl:if test="record/metadata/schede/*/LC/PVC/PVCP and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCP)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCP))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Province'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCP)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCP)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Comune -->
				<xsl:if test="record/metadata/schede/*/LC/PVC/PVCC and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'City/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCC))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/City'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCC)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCC)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Address Area -->
				<xsl:if test="record/metadata/schede/*/LC/PVC/PVCL and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCL)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCL)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCL))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCL)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/*/LC/PVC/PVCL)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="record/metadata/schede/*/LC/PVC/PVCE and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCE)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCE)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCE))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/PVC/PVCE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/PVC/PVCE)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:choose>
					<xsl:when test="record/metadata/schede/harvesting/idContenitoreFisico and count(arco-fn:find-cf(record/metadata/schede/harvesting/idContenitoreFisico)) > 0">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-current')" />
                            </xsl:attribute>
							<xsl:variable name="CF" select="record/metadata/schede/harvesting/idContenitoreFisico" />
							<xsl:variable name="idCF">
								<xsl:value-of select="arco-fn:find-cf($CF)"/>
							</xsl:variable>			
							<xsl:variable name="idCFisico">
								<xsl:choose>
						   			<xsl:when test="$idCF and contains($idCF, 'DBunico')">
   										<xsl:value-of select="substring-after($idCF, 'DBunico')"/>
						   			</xsl:when>
						   			<xsl:otherwise>
						   				<xsl:value-of select="$idCF"/>
						   			</xsl:otherwise>
						   		</xsl:choose>
 							</xsl:variable>
							<xsl:variable name="contenitoreFisico" select="concat('http://dati.beniculturali.it/iccd/cf/resource/CulturalInstituteOrSite/', $idCFisico)" />							
							<arco-location:atSite>
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="$contenitoreFisico" />
                                </xsl:attribute>
							</arco-location:atSite>
						</rdf:Description>
					</xsl:when>
					<xsl:when test="record/metadata/schede/*/LC/LDC/*">
						<xsl:variable name="site">
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
									<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCK">
											<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCK)))))" />
										</xsl:when>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN and starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'nr') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '-') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(*)') and starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(?)') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(denominazione assente)') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '?') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '.') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '590977') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '63904') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'non id.') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'non identificabile') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'n.r')">
											<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCT)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="$site" />
                            </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="'http://dati.beniculturali.it/cis/Site'" />
                                </xsl:attribute>
							</rdf:type>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'n.r')))">
									<rdfs:label>
										<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCN)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCN)" />
									</l0:name>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/LC/LDC/LDCM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'n.r')))">
									<rdfs:label>
										<xsl:value-of select="concat('Contenitore fisico di: ', normalize-space(record/metadata/schede/*/LC/LDC/LDCM))" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="concat('Contenitore fisico di: ', normalize-space(record/metadata/schede/*/LC/LDC/LDCM))" />
									</l0:name>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/LC/LDC/LDCT and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)), 'n.r')))">
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCQ and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)), 'n.r')))">
											<rdfs:label>
												<xsl:value-of select="concat(normalize-space(record/metadata/schede/*/LC/LDC/LDCT), ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCQ))" />
											</rdfs:label>
											<l0:name>
												<xsl:value-of select="concat(normalize-space(record/metadata/schede/*/LC/LDC/LDCT), ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCQ))" />
											</l0:name>
										</xsl:when>
										<xsl:otherwise>
											<rdfs:label>
												<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCT)" />
											</rdfs:label>
											<l0:name>
												<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCT)" />
											</l0:name>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/LC/LDC/LDCU and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCU)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCU)), 'n.r')))">
									<rdfs:label>
										<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCU)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCU)" />
									</l0:name>
								</xsl:when>
								<xsl:otherwise>
									<rdfs:label xml:lang="it">Contenitore fisico</rdfs:label>
									<l0:name xml:lang="it">Contenitore fisico</l0:name>
									<rdfs:label xml:lang="en">Site</rdfs:label>
									<l0:name xml:lang="en">Site</l0:name>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/harvesting/*[name()='geocoding' or name()='puntoPrincipale']/*">
									<clvapit:hasGeometry>
										<xsl:attribute name="rdf:resource">
			    				            <xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-point')" />
							            </xsl:attribute>
									</clvapit:hasGeometry>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/GE/*/*">
									<xsl:for-each select="record/metadata/schede/*/GE">
										<xsl:if test="lower-case(normalize-space(./GEL))='localizzazione fisica'">
											<clvapit:hasGeometry>
												<xsl:attribute name="rdf:resource">
					                				<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-', position())" />
	            				    			</xsl:attribute>
											</clvapit:hasGeometry>
										</xsl:if>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/GP/*/*">
									<xsl:for-each select="record/metadata/schede/*/GP">
									<xsl:if test="lower-case(normalize-space(./GPL))='localizzazione fisica'">
									<clvapit:hasGeometry>
										<xsl:attribute name="rdf:resource">
					                		<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-point-', position())" />
	            				    	</xsl:attribute>
									</clvapit:hasGeometry>
									</xsl:if>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/GL/*/*">
									<xsl:for-each select="record/metadata/schede/*/GL">
									<xsl:if test="lower-case(normalize-space(./GLL))='localizzazione fisica'">
									<clvapit:hasGeometry>
										<xsl:attribute name="rdf:resource">
					                		<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-line-', position())" />
	            				    	</xsl:attribute>
									</clvapit:hasGeometry>
									</xsl:if>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/GA/*/*">
									<xsl:for-each select="record/metadata/schede/*/GA">
									<xsl:if test="lower-case(normalize-space(./GAL))='localizzazione fisica'">
									<clvapit:hasGeometry>
										<xsl:attribute name="rdf:resource">
					                		<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-polygon-', position())" />
	            				    	</xsl:attribute>
									</clvapit:hasGeometry>
									</xsl:if>
									</xsl:for-each>
								</xsl:when>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/CS">
									<xsl:for-each select="record/metadata/schede/*/CS">
										<xsl:if test="lower-case(normalize-space(./CTL))='localizzazione fisica'">
											<arco-location:hasCadastralIdentity>
												<xsl:attribute name="rdf:resource">
								                	<xsl:value-of select="concat($NS, 'CadastralIdentity/', $itemURI, '-', position())" />
		                						</xsl:attribute>
											</arco-location:hasCadastralIdentity>
										</xsl:if>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/UB[CTS]">
									<xsl:for-each select="record/metadata/schede/*/UB[CTS]">
										<xsl:if test="lower-case(normalize-space(./CTL))='localizzazione fisica'">
											<arco-location:hasCadastralIdentity>
												<xsl:attribute name="rdf:resource">
								                	<xsl:value-of select="concat($NS, 'CadastralIdentity/', $itemURI, '-', position())" />
		                						</xsl:attribute>
											</arco-location:hasCadastralIdentity>
										</xsl:if>
									</xsl:for-each>
								</xsl:when>
							</xsl:choose>
							<xsl:if test="record/metadata/schede/*/LC/PVC">
								<cis:siteAddress>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="$address" />
                                    </xsl:attribute>
								</cis:siteAddress>
							</xsl:if>
							<xsl:if test="record/metadata/schede/*/LC/LDC/LDCK and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCK)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCK)), 'n.r')))">
								<arco-lite:localIdentifier>
									<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCK)" />
								</arco-lite:localIdentifier>
								<arco-core:hasIdentifier>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="concat($NS, 'SiteIdentifier/', arco-fn:arcofy(record/metadata/schede/*/LC/LDC/LDCK))" />
                                    </xsl:attribute>
								</arco-core:hasIdentifier>
							</xsl:if>
							<xsl:if test="record/metadata/schede/*/LC/LDC/LDCF and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)), 'n.r')))">
								<arco-cd:hasUse>
									<xsl:attribute name="rdf:resource">
	        		        			<xsl:value-of select="concat($NS, 'Use/', arco-fn:arcofy($site), '-use-', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)))" />
	                				</xsl:attribute>
								</arco-cd:hasUse>
								<arco-lite:hasCulturalEntityUseFunction>
									<xsl:attribute name="rdf:resource">
		        						<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)))" />
									</xsl:attribute>
								</arco-lite:hasCulturalEntityUseFunction>
							</xsl:if>
							<xsl:if test="record/metadata/schede/*/LC/LDC/LDCM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'n.r')))">
								<cis:isSiteOf>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="$cis" />
									</xsl:attribute>
								</cis:isSiteOf>
							</xsl:if>
							<xsl:if test="record/metadata/schede/*/LC/LDC/LDCC and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCC)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCC)), 'n.r')))">
								<cis:isPartOf>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="concat($NS, 'MonumentalArea/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCC)))" />
                                    </xsl:attribute>
								</cis:isPartOf>
							</xsl:if>
							<!-- Site Type -->
							<xsl:if test="record/metadata/schede/*/LC/LDC/LDCT and not(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)='.') and (not(starts-with(lower-case(normalize-space(./LDCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./LDCT)), 'n.r')))">
								<arco-core:hasType>
									<xsl:attribute name="rdf:resource">
                                        <xsl:choose>
                                            <xsl:when test="record/metadata/schede/*/LC/LDC/LDCQ">
                                                <xsl:value-of select="concat($NS, 'SiteType/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)), '-', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)))" />
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:value-of select="concat($NS, 'SiteType/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)))" />
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </xsl:attribute>
								</arco-core:hasType>
							</xsl:if>
						</rdf:Description>
						<!-- site identifier -->
						<xsl:if test="record/metadata/schede/*/LC/LDC/LDCK and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCK)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCK)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
			                         <xsl:value-of select="concat($NS, 'SiteIdentifier/', arco-fn:arcofy(record/metadata/schede/*/LC/LDC/LDCK))" />
			                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
		            	                <xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                	        </xsl:attribute>
								</rdf:type>
								<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
			                <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				        </xsl:attribute>
					</arco-core:hasType>
								<rdfs:label>
									<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCK)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCK)" />
								</l0:name>
								<arco-core:identifier>
									<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCK)" />
								</arco-core:identifier>
								<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
							</rdf:Description>
						</xsl:if>
						<!-- site use function as an individual -->
						<xsl:if test="record/metadata/schede/*/LC/LDC/LDCF and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Use/', arco-fn:arcofy($site), '-use-', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
                                    </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Use of site ', normalize-space(record/metadata/schede/*/LC/LDC/LDCF))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Use of site ', normalize-space(record/metadata/schede/*/LC/LDC/LDCF))" />
								</l0:name>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Uso del sito ', normalize-space(record/metadata/schede/*/LC/LDC/LDCF))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Uso del sito ', normalize-space(record/metadata/schede/*/LC/LDC/LDCF))" />
								</l0:name>
								<arco-cd:hasUseFunction>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)))" />
									</xsl:attribute>
								</arco-cd:hasUseFunction>
							</rdf:Description>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCF)))" />
									</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseFunction'" />
                                    </xsl:attribute>
								</rdf:type>
								<l0:name>
									<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCF)" />
								</l0:name>
								<rdfs:label>
									<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCF)" />
								</rdfs:label>
							</rdf:Description>
						</xsl:if>
						<!-- Site Type as an individual -->
						<xsl:if test="record/metadata/schede/*/LC/LDC/LDCT and not(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)='.') and (not(starts-with(lower-case(normalize-space(./LDCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./LDCT)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                    <xsl:choose>
                                        <xsl:when test="record/metadata/schede/*/LC/LDC/LDCQ">
                                            <xsl:value-of select="concat($NS, 'SiteType/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)), '-', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)))" />
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:value-of select="concat($NS, 'SiteType/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)))" />
                                        </xsl:otherwise>
                                    </xsl:choose>
                                </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/location/SiteType'" />
                                    </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCQ">
											<xsl:value-of select="concat('Tipo di contenitore fisico:', ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCT), ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCQ))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('Tipo di contenitore fisico:', ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCT))" />
										</xsl:otherwise>
									</xsl:choose>
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCQ">
											<xsl:value-of select="concat('Tipo di contenitore fisico:', ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCT), ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCQ))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('Tipo di contenitore fisico:', ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCT))" />
										</xsl:otherwise>
									</xsl:choose>
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCQ">
											<xsl:value-of select="concat('Site type:', ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCT), ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCQ))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('Site type:', ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCT))" />
										</xsl:otherwise>
									</xsl:choose>
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCQ">
											<xsl:value-of select="concat('Site type:', ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCT), ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCQ))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('Site type:', ' ', normalize-space(record/metadata/schede/*/LC/LDC/LDCT))" />
										</xsl:otherwise>
									</xsl:choose>
								</l0:name>
								<xsl:if test="record/metadata/schede/*/LC/LDC/LDCT and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)), 'n.r')))">
									<arco-location:hasSiteDefinition>
										<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="concat($NS,'SiteDefinition/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)))" />
                                    </xsl:attribute>
									</arco-location:hasSiteDefinition>
								</xsl:if>
								<xsl:if test="record/metadata/schede/*/LC/LDC/LDCQ and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)), 'n.r')))">
									<arco-location:hasSiteSpecification>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS,'SiteSpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)))" />
                                        </xsl:attribute>
									</arco-location:hasSiteSpecification>
								</xsl:if>
							</rdf:Description>
						</xsl:if>
						<!-- Site Definition as an individual -->
						<xsl:if test="record/metadata/schede/*/LC/LDC/LDCT and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                    <xsl:value-of select="concat($NS,'SiteDefinition/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCT)))" />
                                </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/location/SiteDefinition'" />
                                    </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCT)" />
								</rdfs:label>
							</rdf:Description>
						</xsl:if>
						<!-- Site Specification as an individual -->
						<xsl:if test="record/metadata/schede/*/LC/LDC/LDCQ and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                    <xsl:value-of select="concat($NS,'SiteSpecification/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)))" />
                                </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of
										select="'https://w3id.org/arco/ontology/location/SiteSpecification'" />
                                    </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of
										select="normalize-space(record/metadata/schede/*/LC/LDC/LDCQ)" />
								</rdfs:label>
							</rdf:Description>
						</xsl:if>
						<!-- Monumental Area as individual -->
						<xsl:if
							test="record/metadata/schede/*/LC/LDC/LDCC and not(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCC))='nr' or lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCC))='n.r.' or lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCC))='nr (recupero pregresso)')">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                    <xsl:value-of
									select="concat($NS, 'MonumentalArea/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCC)))" />
                                </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of
										select="'http://dati.beniculturali.it/cis/MonumentalArea'" />
                                    </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of
										select="normalize-space(record/metadata/schede/*/LC/LDC/LDCC)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of
										select="normalize-space(record/metadata/schede/*/LC/LDC/LDCC)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-current')" />
                            </xsl:attribute>
							<arco-location:atSite>
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="$site" />
                                </xsl:attribute>
							</arco-location:atSite>
						</rdf:Description>		
					</xsl:when>
					<xsl:otherwise>
						<xsl:variable name="location">
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
									<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/PVC/PVCI">
											<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)))))" />
										</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVL/PVLT)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)))))" />
											</xsl:otherwise>
									</xsl:choose>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-current')" />
                            </xsl:attribute>
							<arco-location:atLocation>
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="$location" />
                                </xsl:attribute>
							</arco-location:atLocation>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                                <xsl:value-of select="$location" />
                            </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                                    <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
                                </xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/PVC)" />
							</rdfs:label>
							<xsl:for-each select="record/metadata/schede/*/LC/PVL">
								<arco-location:hasToponymInTime>
									<xsl:attribute name="rdf:resource">
                		                <xsl:choose>
                        		            <xsl:when test="./PVLT">
                                		        <xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./PVLT)))" />
		                                    </xsl:when>
        		                            <xsl:otherwise>
                		                        <xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(.)))" />
                        		            </xsl:otherwise>
                                		</xsl:choose>
		                            </xsl:attribute>
								</arco-location:hasToponymInTime>
								<arco-lite:toponym>
                					<xsl:choose>
                        				<xsl:when test="./PVLT">
                                			<xsl:value-of select="(normalize-space(./PVLT))" />
										</xsl:when>
        								<xsl:otherwise>
                							<xsl:value-of select="(normalize-space(.))" />
                        				</xsl:otherwise>
                                	</xsl:choose>
								</arco-lite:toponym>
							</xsl:for-each>
							<xsl:for-each select="record/metadata/schede/*/LS/LTS">
								<arco-location:hasToponymInTime>
									<xsl:attribute name="rdf:resource">
                		                <xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./LTST)))" />
		                            </xsl:attribute>
								</arco-location:hasToponymInTime>
								<arco-lite:toponym>
									<xsl:value-of select="(normalize-space(./LTST))" />
								</arco-lite:toponym>
							</xsl:for-each>
							<xsl:for-each select="record/metadata/schede/*/LS/LVS">
								<arco-location:hasToponymInTime>
									<xsl:attribute name="rdf:resource">
                		                <xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./LVSD)))" />
		                            </xsl:attribute>
								</arco-location:hasToponymInTime>
								<arco-lite:toponym>
									<xsl:value-of select="(normalize-space(./LVSD))" />
								</arco-lite:toponym>
							</xsl:for-each>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/harvesting/*[name()='geocoding' or name()='puntoPrincipale']/*">
									<clvapit:hasGeometry>
										<xsl:attribute name="rdf:resource">
			    				            <xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-point')" />
							            </xsl:attribute>
									</clvapit:hasGeometry>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/GE/*/*">
									<xsl:for-each select="record/metadata/schede/*/GE">
										<xsl:if test="lower-case(normalize-space(./GEL))='localizzazione fisica'">
											<clvapit:hasGeometry>
												<xsl:attribute name="rdf:resource">
					                				<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-', position())" />
	            				    			</xsl:attribute>
											</clvapit:hasGeometry>
										</xsl:if>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/GP/*/*">
									<xsl:for-each select="record/metadata/schede/*/GP">
									<xsl:if test="lower-case(normalize-space(./GPL))='localizzazione fisica'">
									<clvapit:hasGeometry>
										<xsl:attribute name="rdf:resource">
					                		<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-point-', position())" />
	            				    	</xsl:attribute>
									</clvapit:hasGeometry>
									</xsl:if>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/GL/*/*">
									<xsl:for-each select="record/metadata/schede/*/GL">
									<xsl:if test="lower-case(normalize-space(./GLL))='localizzazione fisica'">
									<clvapit:hasGeometry>
										<xsl:attribute name="rdf:resource">
					                		<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-line-', position())" />
	            				    	</xsl:attribute>
									</clvapit:hasGeometry>
									</xsl:if>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/GA/*/*">
									<xsl:for-each select="record/metadata/schede/*/GA">
									<xsl:if test="lower-case(normalize-space(./GAL))='localizzazione fisica'">
									<clvapit:hasGeometry>
										<xsl:attribute name="rdf:resource">
					                		<xsl:value-of select="concat($NS, 'Geometry/', $itemURI, '-geometry-polygon-', position())" />
	            				    	</xsl:attribute>
									</clvapit:hasGeometry>
									</xsl:if>
									</xsl:for-each>
								</xsl:when>
							</xsl:choose>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/CS">
									<xsl:for-each select="record/metadata/schede/*/CS">
										<xsl:if test="lower-case(normalize-space(./CTL))='localizzazione fisica'">
											<arco-location:hasCadastralIdentity>
												<xsl:attribute name="rdf:resource">
								                	<xsl:value-of select="concat($NS, 'CadastralIdentity/', $itemURI, '-', position())" />
		                						</xsl:attribute>
											</arco-location:hasCadastralIdentity>
										</xsl:if>
									</xsl:for-each>
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/UB[CTS]">
									<xsl:for-each select="record/metadata/schede/*/UB[CTS]">
										<xsl:if test="lower-case(normalize-space(./CTL))='localizzazione fisica'">
											<arco-location:hasCadastralIdentity>
												<xsl:attribute name="rdf:resource">
								                	<xsl:value-of select="concat($NS, 'CadastralIdentity/', $itemURI, '-', position())" />
		                						</xsl:attribute>
											</arco-location:hasCadastralIdentity>
										</xsl:if>
									</xsl:for-each>
								</xsl:when>
							</xsl:choose>
							<xsl:if test="record/metadata/schede/*/LC/PVC/*">
								<clvapit:hasAddress>
									<xsl:attribute name="rdf:resource">
										<xsl:choose>
											<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
												<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)))))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:choose>
													<xsl:when test="record/metadata/schede/*/LC/PVC/PVCI">
														<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)))))" />
													</xsl:when>
													<xsl:otherwise>
														<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVL/PVLT)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)))))" />
													</xsl:otherwise>
												</xsl:choose>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:attribute>
								</clvapit:hasAddress>
							</xsl:if>
							<xsl:for-each select="record/metadata/schede/*/LS/LCS">
								<arco-location:hasHistoricalAddress>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'HistoricalAddress/', arco-fn:arcofy(normalize-space(lower-case(.))))" />
									</xsl:attribute>
								</arco-location:hasHistoricalAddress>
							</xsl:for-each>
							<xsl:for-each select="record/metadata/schede/*/LS/CSS">
								<arco-location:hasCadastralIdentity>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'CadastralIdentity/', $itemURI, '-historical-', position())" />
									</xsl:attribute>
								</arco-location:hasCadastralIdentity>
							</xsl:for-each>
						</rdf:Description>
						<xsl:for-each select="record/metadata/schede/*/LS/LTS">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                		            <xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./LTST)))" />
                        		</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                		                <xsl:value-of select="'https://w3id.org/arco/ontology/location/ToponymInTime'" />
                        		    </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./LTST)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./LTST)" />
								</l0:name>
								<xsl:if test="./LTSD">
									<tiapit:atTime>
										<xsl:attribute name="rdf:resource">
        	        		                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./LTSD)))" />
            	            		    </xsl:attribute>
									</tiapit:atTime>
								</xsl:if>
								<xsl:if test="./LTSF">
									<arco-core:informationSource>
										<xsl:value-of select="concat('Fonte: ', normalize-space(./LTSF))" />
									</arco-core:informationSource>
								</xsl:if>
							</rdf:Description>
							<xsl:if test="./LTSD">
								<rdf:Description>
									<xsl:attribute name="rdf:about"> 			
						 				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./LTSD)))" />
									</xsl:attribute>
						 	        <rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of 	select="normalize-space(./LTSD)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of 	select="normalize-space(./LTSD)" />
									</l0:name>
									<arco-arco:startTime>
										<xsl:value-of select="normalize-space(./LTSD)" />
									</arco-arco:startTime>
									<arco-arco:endTime>
										<xsl:value-of select="normalize-space(./LTSD)" />
									</arco-arco:endTime>
								</rdf:Description>
							</xsl:if>
						</xsl:for-each>
						<xsl:for-each select="record/metadata/schede/*/LS/LVS">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                		            <xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./LVSD)))" />
                        		</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                		                <xsl:value-of select="'https://w3id.org/arco/ontology/location/ToponymInTime'" />
                        		    </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./LVSD)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./LVSD)" />
								</l0:name>
								<xsl:if test="./LVST">
									<tiapit:atTime>
										<xsl:attribute name="rdf:resource">
        	        		                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./LVST)))" />
            	            		    </xsl:attribute>
									</tiapit:atTime>
								</xsl:if>
								<xsl:if test="./LVSF">
									<arco-core:informationSource>
										<xsl:value-of select="concat('Fonte: ', normalize-space(./LVSF))" />
									</arco-core:informationSource>
								</xsl:if>
								<xsl:if test="./LVSN">
									<arco-core:note>
										<xsl:value-of select="normalize-space(./LVSN)" />
									</arco-core:note>
								</xsl:if>
							</rdf:Description>
							<xsl:if test="./LVST">
								<rdf:Description>
									<xsl:attribute name="rdf:about"> 			
						 				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./LVST)))" />
									</xsl:attribute>
						 	        <rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of 	select="normalize-space(./LVST)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of 	select="normalize-space(./LVST)" />
									</l0:name>
									<arco-arco:startTime>
										<xsl:value-of select="normalize-space(./LVST)" />
									</arco-arco:startTime>
									<arco-arco:endTime>
										<xsl:value-of select="normalize-space(./LVST)" />
									</arco-arco:endTime>
								</rdf:Description>
							</xsl:if>
						</xsl:for-each>
						<xsl:if test="record/metadata/schede/*/LC/PVC/*">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                	<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
											<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:choose>
												<xsl:when test="record/metadata/schede/*/LC/PVC/PVCI">
													<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)))))" />
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVL/PVLT)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)))))" />
												</xsl:otherwise>
											</xsl:choose>
										</xsl:otherwise>
									</xsl:choose>
                				</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
                                    </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:for-each select="record/metadata/schede/*/LC/PVC/*">
										<xsl:choose>
											<xsl:when test="position() = 1">
												<xsl:value-of select="./text()" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat(', ', ./text())" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</rdfs:label>
								<!-- Stato -->
								<xsl:if test="record/metadata/schede/*/LC/PVC/PVCS">
									<clvapit:hasCountry>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCS))" />
                                        </xsl:attribute>
									</clvapit:hasCountry>
								</xsl:if>
								<!-- Regione -->
								<xsl:if test="record/metadata/schede/*/LC/PVC/PVCR">
								<xsl:choose>
									<xsl:when test="record/metadata/schede/*/LC/PVC/PVCC and (starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'firenze') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'siena') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'san severino marche') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCC)), 'modena'))">	
										<xsl:choose>
											<xsl:when test="record/metadata/schede/*/LC/PVC/PVCR and (starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCR)), 'lombardia'))">
											</xsl:when>
											<xsl:otherwise>
												<clvapit:hasRegion>
													<xsl:attribute name="rdf:resource">
            	                                		<xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCR))" />
		        	                                </xsl:attribute>
												</clvapit:hasRegion>
											</xsl:otherwise>
										</xsl:choose>					
									</xsl:when>
									<xsl:otherwise>
									<clvapit:hasRegion>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of
											select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCR))" />
                                        </xsl:attribute>
									</clvapit:hasRegion>
									</xsl:otherwise>
								</xsl:choose>
								</xsl:if>
								<!-- Provincia -->
								<xsl:if test="record/metadata/schede/*/LC/PVC/PVCP">
									<clvapit:hasProvince>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCP))" />
                                        </xsl:attribute>
									</clvapit:hasProvince>
								</xsl:if>
								<!-- Comune -->
								<xsl:if test="record/metadata/schede/*/LC/PVC/PVCC">
									<clvapit:hasCity>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS, 'City/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCC))" />
                                        </xsl:attribute>
									</clvapit:hasCity>
								</xsl:if>
								<!-- Località -->
								<xsl:if test="record/metadata/schede/*/LC/PVC/PVCL">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/*/LC/PVC/PVCL))" />
                                        </xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
								<xsl:if test="record/metadata/schede/*/LC/PVC/PVCI and not(record/metadata/schede/*/LC/PVC/PVCI='.' or record/metadata/schede/*/LC/PVC/PVCI='-' or record/metadata/schede/*/LC/PVC/PVCI='/')">
									<clvapit:fullAddress>
										<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/PVC/PVCI)" />
									</clvapit:fullAddress>
								</xsl:if>
								<xsl:if test="record/metadata/schede/*/LC/LDC/LDCU and not(record/metadata/schede/*/LC/LDC/LDCU='.' or record/metadata/schede/*/LC/LDC/LDCU='-' or record/metadata/schede/*/LC/LDC/LDCU='/')">
									<clvapit:fullAddress>
										<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCU)" />
									</clvapit:fullAddress>
								</xsl:if>
							</rdf:Description>
						</xsl:if>
						<xsl:for-each select="record/metadata/schede/*/LS/LCS">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                	<xsl:value-of select="concat($NS, 'HistoricalAddress/', arco-fn:arcofy(normalize-space(lower-case(.))))" />
                				</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
                                    </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:for-each select="./*">
										<xsl:choose>
											<xsl:when test="position() = 1">
												<xsl:value-of select="./text()" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat(', ', ./text())" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</rdfs:label>
								<!-- GovernamentalAdministrativeArea -->
								<xsl:if test="./LCSA">
									<arco-location:hasGovernamentalAdministrativeArea>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS, 'AdministrativeUnitComponent/', arco-fn:urify(./LCSA))" />
                                        </xsl:attribute>
									</arco-location:hasGovernamentalAdministrativeArea>
								</xsl:if>
								<!-- territorial area -->
								<xsl:if test="./LCSR">
									<arco-location:hasTerritorialArea>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS, 'Feature/', arco-fn:urify(./LCSR))" />
                                        </xsl:attribute>
									</arco-location:hasTerritorialArea>
								</xsl:if>
								<xsl:if test="./LCST">
									<arco-location:hasTerritorialArea>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS, 'Feature/', arco-fn:urify(./LCST))" />
                                        </xsl:attribute>
									</arco-location:hasTerritorialArea>
								</xsl:if>
								<!-- Località -->
								<xsl:if test="./LCSI">
									<arco-location:hasTerritorialArea>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS, 'Feature/', arco-fn:urify(./LCSI))" />
                                        </xsl:attribute>
									</arco-location:hasTerritorialArea>
								</xsl:if>
								<xsl:if test="./LCSD">
									<tiapit:atTime>
										<xsl:attribute name="rdf:resource">
        	        		                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./LTSD)))" />
            	            		    </xsl:attribute>
									</tiapit:atTime>
								</xsl:if>
								<xsl:if test="./LCSF">
									<arco-core:note>
										<xsl:value-of select="concat('Fonte: ', normalize-space(./LTSF))" />
									</arco-core:note>
								</xsl:if>
							</rdf:Description>
							<xsl:if test="./LCSD">
								<rdf:Description>
									<xsl:attribute name="rdf:about"> 			
						 				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./LCSD)))" />
									</xsl:attribute>
						 	        <rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of 	select="normalize-space(./LCSD)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of 	select="normalize-space(./LCSD)" />
									</l0:name>
									<arco-arco:startTime>
										<xsl:value-of select="normalize-space(./LCSD)" />
									</arco-arco:startTime>
									<arco-arco:endTime>
										<xsl:value-of select="normalize-space(./LCSD)" />
									</arco-arco:endTime>
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./LCSR">
								<rdf:Description>
									<xsl:attribute name="rdf:about"> 			
						 				 <xsl:value-of select="concat($NS, 'Feature/', arco-fn:urify(./LCSR))" />
									</xsl:attribute>
						 	        <rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of 	select="normalize-space(./LCSR)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of 	select="normalize-space(./LCSR)" />
									</l0:name>	
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./LCST">
								<rdf:Description>
									<xsl:attribute name="rdf:about"> 			
						 				 <xsl:value-of select="concat($NS, 'Feature/', arco-fn:urify(./LCST))" />
									</xsl:attribute>
						 	        <rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of 	select="normalize-space(./LCST)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of 	select="normalize-space(./LCST)" />
									</l0:name>	
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./LCSA">
								<rdf:Description>
									<xsl:attribute name="rdf:about"> 			
						 				 <xsl:value-of select="concat($NS, 'AdministrativeUnitComponent/', arco-fn:urify(./LCSA))" />
									</xsl:attribute>
						 	        <rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AdministrativeUnitComponent'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of 	select="normalize-space(./LCSA)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of 	select="normalize-space(./LCSA)" />
									</l0:name>	
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./LCSI">
								<rdf:Description>
									<xsl:attribute name="rdf:about"> 			
						 				  <xsl:value-of select="concat($NS, 'Feature/', arco-fn:urify(./LCSI))" />
									</xsl:attribute>
						 	        <rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of 	select="normalize-space(./LCSI)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of 	select="normalize-space(./LCSI)" />
									</l0:name>	
								</rdf:Description>
							</xsl:if>
						</xsl:for-each>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:if>
			<!-- Cultural Institute or Site -->
			<xsl:if test="not(record/metadata/schede/harvesting/idContenitoreGiuridico)">
				<xsl:variable name="CF" select="record/metadata/schede/harvesting/idContenitoreFisico" />
				<xsl:variable name="idCF">
					<xsl:if test="record/metadata/schede/harvesting/idContenitoreFisico">
					<xsl:value-of select="arco-fn:find-cf($CF)"/>
					</xsl:if>
				</xsl:variable>			
				<xsl:variable name="idCFisico">
					<xsl:choose>
						<xsl:when test="$idCF and contains($idCF, 'DBunico')">
   							<xsl:value-of select="substring-after($idCF, 'DBunico')"/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$idCF"/>
						</xsl:otherwise>
					</xsl:choose>
 				</xsl:variable>
				<xsl:variable name="contenitoreFisico" select="concat('http://dati.beniculturali.it/iccd/cf/resource/CulturalInstituteOrSite/', $idCFisico)" />							
			<xsl:variable name="site">
				<xsl:choose>
					<xsl:when test="record/metadata/schede/harvesting/idContenitoreFisico and string-length($idCFisico)">
						<xsl:value-of select="$contenitoreFisico" />
					</xsl:when>
					<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
						<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)))))" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LDC/LDCK">
								<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCK)))))" />
							</xsl:when>
							<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN and starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'nr') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '-') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(*)') and starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(?)') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(denominazione assente)') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '?') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '.') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '590977') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '63904') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'non id.') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'non identificabile') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'n.r')">
								<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCT)))))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
				<xsl:if test="record/metadata/schede/*/LC/LDC/LDCM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="$cis" />
							<!-- 
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
									<xsl:choose>	
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
										</xsl:when>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCC)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:when>
								<xsl:otherwise>
									<xsl:choose>	
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
										</xsl:when>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCC)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
										</xsl:otherwise>
									</xsl:choose>								
								</xsl:otherwise>
							</xsl:choose>  -->
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'http://dati.beniculturali.it/cis/CulturalInstituteOrSite'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCM)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCM)" />
						</l0:name>
						<cis:hasCISNameInTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'CISNameInTime/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)))" />
							</xsl:attribute>
						</cis:hasCISNameInTime>
						<cis:hasSite>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$site" />
							</xsl:attribute>
						</cis:hasSite>
						<arco-location:isCulturalInstituteOrSiteOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$culturalProperty" />
							</xsl:attribute>
						</arco-location:isCulturalInstituteOrSiteOf>
						<!-- culturalInstituteOrSiteIdentifier -->
						<xsl:if test="record/metadata/schede/*/LC/LDC/LDCG">
							<arco-lite:localIdentifier>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCG)" />
							</arco-lite:localIdentifier>
							<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'CulturalInstituteOrSiteIdentifier/', arco-fn:arcofy(record/metadata/schede/*/LC/LDC/LDCG))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
						</xsl:if>
					</rdf:Description>
					<!-- site identifier -->
					<xsl:if test="record/metadata/schede/*/LC/LDC/LDCG">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'CulturalInstituteOrSiteIdentifier/', arco-fn:arcofy(record/metadata/schede/*/LC/LDC/LDCG))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
		            				<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                		</xsl:attribute>
							</rdf:type>
							<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
			                <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				        </xsl:attribute>
					</arco-core:hasType>
							<rdfs:label>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCG)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCG)" />
							</l0:name>
							<arco-core:identifier>
								<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCG)" />
							</arco-core:identifier>
							<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
						</rdf:Description>
					</xsl:if>
					<!-- Name in time -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'CISNameInTime/', arco-fn:urify(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'http://dati.beniculturali.it/cis/CISNameInTime'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Denominazione nel tempo: ', normalize-space(record/metadata/schede/*/LC/LDC/LDCM))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Denominazione nel tempo: ', normalize-space(record/metadata/schede/*/LC/LDC/LDCM))" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Name in time: ', normalize-space(record/metadata/schede/*/LC/LDC/LDCM))" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Name in time: ', normalize-space(record/metadata/schede/*/LC/LDC/LDCM))" />
						</l0:name>
						<cis:institutionalCISName>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LDC/LDCM)" />
						</cis:institutionalCISName>
					</rdf:Description>
				</xsl:if>
			</xsl:if>				
			<xsl:if test="record/metadata/schede/MODI/LC/* or record/metadata/schede/SCAN/LC/*">
				<xsl:variable name="address">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/LCS))='italia')">
							<xsl:value-of select="concat($NS, 'Address/', arco-fn:urify(arco-fn:md5(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCS)), normalize-space(lower-case(record/metadata/schede/*/LC/LCE)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI))))))" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/LC/LCI">
									<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCL)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)))))" />
								</xsl:when>
								<xsl:when test="record/metadata/schede/*/LC/PVL/PVLT">
									<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVL/PVLT)))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVL/PVL)))))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
                        <xsl:value-of select="$address" />
                    </xsl:attribute>
					<rdf:type>
					<xsl:attribute name="rdf:resource">
						<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
					</xsl:attribute>
					</rdf:type>
					<rdfs:label>
					<xsl:variable name="lcs">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LCS">
								<xsl:value-of select="concat(record/metadata/schede/*/LC/LCS, ', ')" />
							</xsl:when>
							<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="lce">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LCE">
								<xsl:value-of select="record/metadata/schede/*/LC/LCE" />
							</xsl:when>
							<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="lcr">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LCR">
								<xsl:value-of select="record/metadata/schede/*/LC/LCR" />
							</xsl:when>
							<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="lcp">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LCP">
								<xsl:value-of select="concat(', ', record/metadata/schede/*/LC/LCP)" />
							</xsl:when>
							<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="lcc">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LCC">
								<xsl:value-of select="concat(', ', record/metadata/schede/*/LC/LCC)" />
							</xsl:when>
							<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="lcl">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LCL">
								<xsl:value-of select="concat(', ', record/metadata/schede/*/LC/LCL)" />
							</xsl:when>
							<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:variable name="lci">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LCI">
								<xsl:value-of select="concat(', ', record/metadata/schede/*/LC/LCI)" />
							</xsl:when>
							<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
						<xsl:value-of select="concat($lcs, $lcr, $lcp, $lcc, $lcl, $lce, $lci)" />
					</rdfs:label>
					<xsl:if test="record/metadata/schede/*/LC/LCI">
						<clvapit:fullAddress>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/LC/LCI)" />
						</clvapit:fullAddress>
					</xsl:if>
					<!-- Stato -->
					<xsl:if test="record/metadata/schede/*/LC/LCS">
						<clvapit:hasCountry>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(record/metadata/schede/*/LC/LCS))" />
                            </xsl:attribute>
						</clvapit:hasCountry>
					</xsl:if>
					<!-- Regione -->
					<xsl:if test="record/metadata/schede/*/LC/LCR and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LCR)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LCR)), 'n.r')))">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/LCC and (starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LCC)), 'firenze') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LCC)), 'siena') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LCC)), 'san severino marche') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LCC)), 'modena'))">	
								<xsl:choose>
									<xsl:when test="record/metadata/schede/*/LC/LCR and (starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LCR)), 'lombardia'))">
									</xsl:when>
									<xsl:otherwise>
										<clvapit:hasRegion>
											<xsl:attribute name="rdf:resource">
            	            	                 <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/*/LC/LCR))" />
		                     			    </xsl:attribute>
										</clvapit:hasRegion>
									</xsl:otherwise>
								</xsl:choose>					
							</xsl:when>
							<xsl:otherwise>
								<clvapit:hasRegion>
									<xsl:attribute name="rdf:resource">
        	            	            <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/*/LC/LCR))" />
            	            	    </xsl:attribute>
								</clvapit:hasRegion>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:if>
					<!-- Provincia -->
					<xsl:if test="record/metadata/schede/*/LC/LCP">
						<clvapit:hasProvince>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(record/metadata/schede/*/LC/LCP))" />
                            </xsl:attribute>
						</clvapit:hasProvince>
					</xsl:if>
					<!-- Comune -->
					<xsl:if test="record/metadata/schede/*/LC/LCC">
						<clvapit:hasCity>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'City/', arco-fn:urify(record/metadata/schede/*/LC/LCC))" />
                            </xsl:attribute>
						</clvapit:hasCity>
					</xsl:if>
					<!-- Località  -->
					<xsl:if test="record/metadata/schede/*/LC/LCL">
						<clvapit:hasAddressArea>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of
								select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/*/LC/LCL))" />
                            </xsl:attribute>
						</clvapit:hasAddressArea>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/LC/LCE">
						<clvapit:hasAddressArea>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of
								select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/*/LC/LCE))" />
                            </xsl:attribute>
						</clvapit:hasAddressArea>
					</xsl:if>
				</rdf:Description>
				<!-- Toponym in Time as individual -->
				<xsl:for-each select="record/metadata/schede/*/LC/PVL">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:choose>
 	                        	<xsl:when test="./PVLT">
									<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./PVLT)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(.)))" />
								</xsl:otherwise>
							</xsl:choose>
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/location/ToponymInTime'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:choose>
 	                        	<xsl:when test="./PVLT">
									<xsl:value-of select="normalize-space(./PVLT)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(.)" />
								</xsl:otherwise>
							</xsl:choose>
						</rdfs:label>
						<l0:name>
							<xsl:choose>
 	                        	<xsl:when test="./PVLT">
									<xsl:value-of select="normalize-space(./PVLT)" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="normalize-space(.)" />
								</xsl:otherwise>
							</xsl:choose>
						</l0:name>
						<xsl:if test="./PVLR">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./PVLR)))" />
                            </xsl:attribute>
						</tiapit:atTime>
						</xsl:if>
						<xsl:if test="./PVLS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./PVLS)" />
						</arco-core:note>
						</xsl:if>
					</rdf:Description>
					<!-- Time  interval as individual -->
					<xsl:if test="./PVLR">
						<rdf:Description>					
							<xsl:attribute name="rdf:about">
    	                        <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./PVLR)))" />
        	                 </xsl:attribute>
            	             <rdf:type>
								<xsl:attribute name="rdf:resource">
                    	            <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
	                            </xsl:attribute>
							</rdf:type>
							<arco-arco:startTime>
								<xsl:value-of select="normalize-space(./PVLR)" />
							</arco-arco:startTime>
							<arco-arco:endTime>
								<xsl:value-of select="normalize-space(./PVLR)" />
							</arco-arco:endTime>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat(./PVLR, ' - ', ./PVLR)" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>
				</xsl:for-each>
			</xsl:if>
			<xsl:if test="record/metadata/schede/MODI/LC/* or recod/metadata/schede/scan/LC/*">
				<xsl:variable name="lcs">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCS">
							<xsl:value-of select="concat(record/metadata/schede/*/LC/LCS, ', ')" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lce">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCE">
							<xsl:value-of select="record/metadata/schede/*/LC/LCE" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lcr">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCR">
							<xsl:value-of select="record/metadata/schede/*/LC/LCR" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lcp">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCP">
							<xsl:value-of select="concat(', ', record/metadata/schede/*/LC/LCP)" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lcc">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCC">
							<xsl:value-of select="concat(', ', record/metadata/schede/*/LC/LCC)" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
						</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lcl">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCL">
							<xsl:value-of select="concat(', ', record/metadata/schede/*/LC/LCL)" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lci">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCI">
							<xsl:value-of select="concat(', ', record/metadata/schede/*/LC/LCI)" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lcsuri">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCS">
							<xsl:value-of select="concat(record/metadata/schede/*/LC/LCS, '-')" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lcpuri">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCP">
							<xsl:value-of select="concat('-', record/metadata/schede/*/LC/LCP)" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lccuri">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCC">
							<xsl:value-of select="concat('-', record/metadata/schede/*/LC/LCC)" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lcluri">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCL">
							<xsl:value-of select="concat('-', record/metadata/schede/*/LC/LCL)" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="lciuri">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCI">
							<xsl:value-of select="concat('-', record/metadata/schede/*/LC/LCI)" />
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<xsl:variable name="varsuri" select="concat($lcsuri, $lcr, $lcpuri, $lccuri, $lcluri, $lce, $lciuri)" />
				
				<xsl:variable name="vars" select="concat($lcs, $lcr, $lcp, $lcc, $lcl, $lce, $lci)" />
				<xsl:variable name="location" >
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/LC/LCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/LCS))='italia')">
							<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCS)), normalize-space(lower-case(record/metadata/schede/*/LC/LCE)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)))))" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/LC/LCI">
									<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCL)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVL/PVLT)))))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-current')" />
 					</xsl:attribute>
					<arco-location:atLocation>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$location" />
						</xsl:attribute>
					</arco-location:atLocation>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="$location" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space($vars)" />
					</rdfs:label>
					<xsl:for-each select="record/metadata/schede/*/LC/PVL">
						<xsl:choose>
							<xsl:when test="./PVLT">
								<arco-location:hasToponymInTime>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./PVLT)))" />
                            		</xsl:attribute>
								</arco-location:hasToponymInTime>
								<arco-lite:toponym>
									<xsl:value-of select="(normalize-space(./PVLT))" />
								</arco-lite:toponym>
							</xsl:when>
							<xsl:otherwise>
								<arco-location:hasToponymInTime>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(.)))" />
                            		</xsl:attribute>
								</arco-location:hasToponymInTime>
								<arco-lite:toponym>
									<xsl:value-of select="(normalize-space(.))" />
								</arco-lite:toponym>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:for-each>
					<clvapit:hasAddress>
						<xsl:attribute name="rdf:resource">
							<xsl:choose>
								<xsl:when test="record/metadata/schede/*/LC/LCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/LCS))='italia')">
									<xsl:value-of select="concat($NS, 'Address/', arco-fn:urify(arco-fn:md5(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCS)), normalize-space(lower-case(record/metadata/schede/*/LC/LCE)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI))))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/LCI">
											<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCL)), normalize-space(lower-case(record/metadata/schede/*/LC/LCI)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/LCP)), normalize-space(lower-case(record/metadata/schede/*/LC/LCC)), normalize-space(lower-case(record/metadata/schede/*/LC/LCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVL/PVLT)))))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:attribute>
					</clvapit:hasAddress>
				</rdf:Description>
			</xsl:if>
			<!-- alternative locations -->
			<xsl:for-each select="record/metadata/schede/*/LA">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-alternative-', position())" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/location/TimeIndexedTypedLocation'" />
						</xsl:attribute>
					</rdf:type>
					<arco-location:isTimeIndexedTypedLocationOf>
						<xsl:attribute name="rdf:resource"> 
							<xsl:value-of select="$culturalProperty" /> 
						</xsl:attribute>
					</arco-location:isTimeIndexedTypedLocationOf>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Altra localizzazione ', position(), ' del bene: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Altra localizzazione ', position(), ' del bene: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Alternative location ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Alternative location ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<xsl:if test="./PRC/PRCS">
						<arco-core:specifications>
							<xsl:value-of select="normalize-space(./PRC/PRCS)" />
						</arco-core:specifications>
					</xsl:if>
					<xsl:if test="./LAN">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./LAN)" />
						</arco-core:note>
					</xsl:if>
					<xsl:if test="./TLC or ./TCL and not(./TLC='.' or ./TCL='.' or ./TLC='-' or ./TCL='-' or ./TLC='/' or ./TCL='/') and (not(starts-with(lower-case(normalize-space(./TCL)), 'nr')) and not(starts-with(lower-case(normalize-space(./TCL)), 'n.r')) and not(starts-with(lower-case(normalize-space(./TLC)), 'nr')) and not(starts-with(lower-case(normalize-space(./TLC)), 'n.r')))">
						<arco-location:hasLocationType>
							<xsl:attribute name="rdf:resource">
                                	<xsl:choose>
	                					<xsl:when test="lower-case(normalize-space(./TCL))='localizzazione fisica'">
	                    					<xsl:value-of select="'https://w3id.org/arco/ontology/location/CurrentPhysicalLocation'" />
	                        			</xsl:when>
	                            		<xsl:when test="contains(normalize-space(lower-case(./TCL)), 'successiva') or contains(normalize-space(lower-case(./TCL)), 'successivo') or contains(normalize-space(lower-case(./TCL)), 'provenienza') or contains(normalize-space(lower-case(./TCL)), 'provanienza') or contains(normalize-space(lower-case(./TCL)), 'proenienza') or contains(normalize-space(lower-case(./TCL)), 'provenianza') or contains(normalize-space(lower-case(./TCL)), 'proivenienza')">
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/PreviousLocation'" />
										</xsl:when>
										<xsl:when test="lower-case(normalize-space(./TCL))='di archivio'">
											<xsl:value-of select="'https://w3id.org/arco/ontology/location/ArchivalLocation'" />
	    								</xsl:when>
	        							<xsl:when test="contains(normalize-space(lower-case(./TCL)), 'produzione') or contains(normalize-space(lower-case(./TCL)), 'fabbricazione') or contains(normalize-space(lower-case(./TCL)), 'esecuzione') ">
	            							<xsl:value-of select="'https://w3id.org/arco/ontology/location/ProductionRealizationLocation'" />
	                					</xsl:when>
	                    				<xsl:when test="contains(normalize-space(lower-case(./TCL)), 'reperimento') or contains(normalize-space(lower-case(./TCL)), 'eperimento') or contains(normalize-space(lower-case(./TCL)), 'reprimento')">
	                        				<xsl:value-of select="'https://w3id.org/arco/ontology/location/FindingLocation'" />
	                            		</xsl:when>
	                                	<xsl:when test="lower-case(normalize-space(./TCL))='luogo di deposito' or lower-case(normalize-space(./TCL))='deposito temporaneo' or lower-case(normalize-space(./TCL))='deposito'">
	                                    	<xsl:value-of select="'https://w3id.org/arco/ontology/location/StorageLocation'" />
										</xsl:when>
										<xsl:when test="contains(normalize-space(lower-case(./TCL)), 'esposizione') or contains(normalize-space(lower-case(./TCL)), 'espositiva') or contains(normalize-space(lower-case(./TCL)), 'espositivo')">
	    									<xsl:value-of select="'https://w3id.org/arco/ontology/location/ExhibitionLocation'" />
	        							</xsl:when>
	            						<xsl:when test="lower-case(normalize-space(./TCL))='luogo di rilevamento' or lower-case(normalize-space(./TCL))='di rilevamento' or lower-case(normalize-space(./TCL))='localizzazione di rilevamento'">
	                						<xsl:value-of select="'https://w3id.org/arco/ontology/location/ObservationLocation'" />
	                    				</xsl:when>
	                        			<xsl:when test="lower-case(normalize-space(./TCL))='area rappresentata'">
	                            			<xsl:value-of select="'https://w3id.org/arco/ontology/location/SubjectLocation'" />
	                                	</xsl:when>
	                                	<xsl:otherwise>
	                                		<xsl:value-of select="'https://w3id.org/arco/ontology/location/UndefinedLocation'" />
	                                	</xsl:otherwise>
									</xsl:choose>
                            </xsl:attribute>
						</arco-location:hasLocationType>
					</xsl:if>
					<xsl:if test="./PRD and (not(starts-with(lower-case(normalize-space(./PRD)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRD)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./PRD)))" />
                            </xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<xsl:if test="./PRC/PRCM">
						<arco-location:hasCulturalInstituteOrSite>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(./PRV/PRVS), normalize-space(./PRV/PRVE))))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)), normalize-space(lower-case(./PRC/PRCM)))))" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:attribute>
						</arco-location:hasCulturalInstituteOrSite>
					</xsl:if>
				</rdf:Description>
				<xsl:if test="./TLC or ./TCL">
					<xsl:choose>
						<xsl:when test="lower-case(normalize-space(./TLC))='luogo di provenienza/collocazione precedente' or lower-case(normalize-space(./TCL))='luogo di provenienza' or lower-case(normalize-space(./TLC))='sede di provenienza' or lower-case(normalize-space(./TCL))='sede di provenienza' or lower-case(normalize-space(./TLC))='provenienza' or lower-case(normalize-space(./TCL))='provenienza'" />
						<xsl:when test="lower-case(normalize-space(./TLC))='luogo di produzione/realizzazione' or lower-case(normalize-space(./TCL))='luogo di esecuzione/fabbricazione'" />
						<xsl:when test="lower-case(normalize-space(./TLC))='luogo di reperimento' or lower-case(normalize-space(./TCL))='luogo di reperimento' or lower-case(normalize-space(./TLC))='reperimento' or lower-case(normalize-space(./TCL))='reperimento'" />
						<xsl:when test="lower-case(normalize-space(./TLC))='luogo di deposito' or lower-case(normalize-space(./TCL))='luogo di deposito' or lower-case(normalize-space(./TLC))='deposito temporaneo' or lower-case(normalize-space(./TCL))='deposito temporaneo' or lower-case(normalize-space(./TLC))='deposito' or lower-case(normalize-space(./TCL))='deposito'" />
						<xsl:when test="lower-case(normalize-space(./TLC))='luogo di esposizione' or lower-case(normalize-space(./TCL))='luogo di esposizione' or lower-case(normalize-space(./TLC))='espositiva' or lower-case(normalize-space(./TCL))='espositiva' or lower-case(normalize-space(./TLC))='espositivo' or lower-case(normalize-space(./TCL))='espositivo' or lower-case(normalize-space(./TLC))='esposizione' or lower-case(normalize-space(./TCL))='esposizione'" />
						<xsl:when test="lower-case(normalize-space(./TLC))='luogo di rilevamento' or lower-case(normalize-space(./TCL))='luogo di rilevamento' or lower-case(normalize-space(./TCL))='di rilevamento' or lower-case(normalize-space(./TLC))='di rilevamento' or lower-case(normalize-space(./TCL))='localizzazione di rilevamento' or lower-case(normalize-space(./TLC))='localizzazione di rilevamento'" />
						<xsl:when test="lower-case(normalize-space(./TLC))='area rappresentata' or lower-case(normalize-space(./TCL))='area rappresentata'" />
						<xsl:when test="./TLC and not(./TLC='.' or ./TLC='-' or ./TLC='/')  and (not(starts-with(lower-case(normalize-space(./TLC)), 'nr')) and not(starts-with(lower-case(normalize-space(./TLC)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                    <xsl:value-of select="concat($NS, 'LocationType/', arco-fn:urify(normalize-space(./TLC)))" />
                                </xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/LocationType" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(./TLC)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./TLC)" />
								</l0:name>
							</rdf:Description>
						</xsl:when>
						<xsl:when test="./TCL and not(./TCL='.' or ./TCL='-' or ./TCL='/') and (not(starts-with(lower-case(normalize-space(./TCL)), 'nr')) and not(starts-with(lower-case(normalize-space(./TCL)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                    <xsl:value-of select="concat($NS, 'LocationType/', arco-fn:urify(normalize-space(./TCL)))" />
                                </xsl:attribute>
								<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/LocationType" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(./TCL)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./TCL)" />
								</l0:name>
							</rdf:Description>
						</xsl:when>
					</xsl:choose>
				</xsl:if>
				<!-- Monumental Area as individual in the scope of the Site of LA -->
				<xsl:if test="./PRC/PRCC and not(lower-case(normalize-space(./PRC/PRCC))='nr' or lower-case(normalize-space(./PRC/PRCC))='n.r.' or lower-case(normalize-space(./PRC/PRCC))='nr (recupero pregresso)')">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'MonumentalArea/', arco-fn:urify(normalize-space(./PRC/PRCC)))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'http://dati.beniculturali.it/cis/MonumentalArea'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./PRC/PRCC)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./PRC/PRCC)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Time Interval for Alternative Location and shot location (F) -->
				<xsl:if test="./PRD and (not(starts-with(lower-case(normalize-space(./PRD)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRD)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./PRD)))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                            </xsl:attribute>
						</rdf:type>
						<xsl:if test="PRD/PRDI and (not(starts-with(lower-case(normalize-space(./PRD/PRDI)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRD/PRDI)), 'n.r')))">
							<arco-arco:startTime>
								<xsl:value-of select="normalize-space(./PRD/PRDI)" />
							</arco-arco:startTime>
						</xsl:if>
						<xsl:if test="PRD/PRDU and (not(starts-with(lower-case(normalize-space(./PRD/PRDU)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRD/PRDU)), 'n.r')))">
							<arco-arco:endTime>
								<xsl:value-of select="normalize-space(./PRD/PRDU)" />
							</arco-arco:endTime>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/LA">
				<xsl:choose>
					<xsl:when test="./PRC/*">
						<xsl:variable name="site">
							<xsl:choose>
								<xsl:when test="./PRV/PRVG and not(lower-case(normalize-space(./PRV/PRVG))='europa')">
									<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(./PRV/PRVG), normalize-space(./PRV/PRVA), normalize-space(./PRV/PRVS), normalize-space(./PRV/PRVR), normalize-space(./PRV/PRVE), normalize-space(./PRL))))" />
								</xsl:when>
								<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
									<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(./PRV/PRVS), normalize-space(./PRV/PRVE), normalize-space(./PRL))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:choose>
										<xsl:when test="./PRC/PRCK">
											<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)), normalize-space(lower-case(./PRC/PRCK)), normalize-space(lower-case(./PRC/PRCT)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)), normalize-space(lower-case(./PRC/PRCD)), normalize-space(lower-case(./PRC/PRCN)), normalize-space(lower-case(./PRC/PRCT)))))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-alternative-', position())" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/location/TimeIndexedTypedLocation'" />
								</xsl:attribute>
							</rdf:type>
							<arco-location:atSite>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="$site" />
								</xsl:attribute>
							</arco-location:atSite>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="$site" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'http://dati.beniculturali.it/cis/Site'" />
								</xsl:attribute>
							</rdf:type>
							<xsl:choose>
								<!-- Denominazione contenitore fisico in 4.00 -->
								<xsl:when test="./PRC/PRCN">
									<rdfs:label>
										<xsl:value-of select="normalize-space(./PRC/PRCN)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./PRC/PRCN)" />
									</l0:name>
								</xsl:when>
								<!-- Denominazione contenitore fisico in normative precedenti a 4.00 -->
								<xsl:when test="./PRC/PRCD">
									<rdfs:label>
										<xsl:value-of select="normalize-space(./PRC/PRCD)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./PRC/PRCD)" />
									</l0:name>
								</xsl:when>
								<xsl:when test="./PRC/PRCM">
									<rdfs:label>
										<xsl:value-of select="concat('Contenitore fisico di: ', normalize-space(./PRC/PRCM))" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="concat('Contenitore fisico di: ', normalize-space(./PRC/PRCM))" />
									</l0:name>
								</xsl:when>
								<xsl:otherwise>
									<rdfs:label xml:lang="it">Contenitore fisico</rdfs:label>
									<l0:name xml:lang="it">Contenitore fisico</l0:name>
									<rdfs:label xml:lang="en">Site</rdfs:label>
									<l0:name xml:lang="en">Site</l0:name>
								</xsl:otherwise>
							</xsl:choose>
							<xsl:if test="./PRV/*">
								<cis:siteAddress>
									<xsl:attribute name="rdf:resource">
										<xsl:choose>
											<xsl:when test="./PRV/PRVG and not(lower-case(normalize-space(./PRV/PRVG))='europa')">
												<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(./PRV/PRVG), normalize-space(./PRV/PRVA), normalize-space(./PRV/PRVS), normalize-space(./PRV/PRVR), normalize-space(./PRV/PRVE), normalize-space(./PRL))))" />
											</xsl:when>
											<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
												<xsl:value-of 	select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVS)), normalize-space(lower-case(./PRV/PRVE)))))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:choose>
													<xsl:when test="./PRC/PRCU and not(./PRC/PRCU='.' or ./PRC/PRCU='-' or ./PRC/PRCU='/')">
														<xsl:value-of 	select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)))))" />
													</xsl:when>
													<xsl:otherwise>
														<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRL/PRLT)))))" />
													</xsl:otherwise>
												</xsl:choose>
											</xsl:otherwise>
										</xsl:choose>
                            		</xsl:attribute>
								</cis:siteAddress>
							</xsl:if>
							<xsl:if test="./PRC/PRCF and (not(starts-with(lower-case(normalize-space(./PRC/PRCF)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCF)), 'n.r')))">
								<arco-cd:hasUse>
									<xsl:attribute name="rdf:resource">
	        		        			<xsl:value-of select="concat($NS, 'Use/', arco-fn:arcofy($site), '-use-', arco-fn:urify(normalize-space(./PRC/PRCF)))" />
	                				</xsl:attribute>
								</arco-cd:hasUse>
								<arco-lite:hasCulturalEntityUseFunction>
									<xsl:attribute name="rdf:resource">
		        						<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(./PRC/PRCF)))" />
									</xsl:attribute>
								</arco-lite:hasCulturalEntityUseFunction>
							</xsl:if>
							<xsl:if test="./PRC/PRCK and (not(starts-with(lower-case(normalize-space(./PRC/PRCK)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCK)), 'n.r')))">
								<arco-lite:localIdentifier>
									<xsl:value-of select="normalize-space(./PRC/PRCK)" />
								</arco-lite:localIdentifier>
								<arco-core:hasIdentifier>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'SiteIdentifier/', arco-fn:arcofy(./PRC/PRCK))" />
								</xsl:attribute>
							</arco-core:hasIdentifier>
							</xsl:if>
							<xsl:if test="./PRC/PRCM">
								<cis:isSiteOf>
									<xsl:attribute name="rdf:resource">
                                       <xsl:choose>
										<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(./PRV/PRVS), normalize-space(./PRV/PRVE))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)), normalize-space(lower-case(./PRC/PRCM)))))" />
										</xsl:otherwise>
									</xsl:choose>
                                   </xsl:attribute>
								</cis:isSiteOf>
							</xsl:if>
							<xsl:if test="./PRC/PRCC and not(lower-case(normalize-space(./PRC/PRCC))='nr' or lower-case(normalize-space(./PRC/PRCC))='n.r.' or lower-case(normalize-space(./PRC/PRCC))='nr (recupero pregresso)')">
								<cis:isPartOf>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'MonumentalArea/', arco-fn:urify(normalize-space(./PRC/PRCC)))" />
									</xsl:attribute>
								</cis:isPartOf>
							</xsl:if>
							<xsl:if test="./PRT/PRTK and (not(starts-with(lower-case(normalize-space(./PRT/PRTK)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTK)), 'n.r')))">
								<arco-location:hasContinent>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Continent/', arco-fn:urify(normalize-space(./PRT/PRTK)))" />
									</xsl:attribute>
								</arco-location:hasContinent>
							</xsl:if>
							<!-- Site Type -->
							<xsl:if test="./PRC/PRCT and not(normalize-space(./PRC/PRCT)='.') and (not(starts-with(lower-case(normalize-space(./PRC/PRCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCT)), 'n.r')))">
								<arco-core:hasType>
									<xsl:attribute name="rdf:resource">
										<xsl:choose>
											<xsl:when test="./PRC/PRCQ">
												<xsl:value-of select="concat($NS, 'SiteType/', arco-fn:urify(normalize-space(./PRC/PRCT)), '-', arco-fn:urify(normalize-space(./PRC/PRCQ)))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'SiteType/', arco-fn:urify(normalize-space(./PRC/PRCT)))" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:attribute>
								</arco-core:hasType>
							</xsl:if>
						</rdf:Description>
						<!-- site identifier -->
						<xsl:if test="./PRC/PRCK and (not(starts-with(lower-case(normalize-space(./PRC/PRCK)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCK)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'SiteIdentifier/', arco-fn:arcofy(./PRC/PRCK))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
		            					<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                			</xsl:attribute>
								</rdf:type>
								<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
			                <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				        </xsl:attribute>
					</arco-core:hasType>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./PRC/PRCK)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./PRC/PRCK)" />
								</l0:name>
								<arco-core:identifier>
									<xsl:value-of select="normalize-space(./PRC/PRCK)" />
								</arco-core:identifier>
								<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
							</rdf:Description>
						</xsl:if>
						<!-- site use function as an individual -->
						<xsl:if test="./PRC/PRCF and (not(starts-with(lower-case(normalize-space(./PRC/PRCF)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCF)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Use/', arco-fn:arcofy($site), '-use-', arco-fn:urify(normalize-space(./PRC/PRCF)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Use'" />
                                    </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Use of site ', normalize-space(./PRC/PRCF))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Use of site ', normalize-space(./PRC/PRCF))" />
								</l0:name>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Uso del sito ', normalize-space(./PRC/PRCF))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Uso del sito ', normalize-space(./PRC/PRCF))" />
								</l0:name>
								<arco-cd:hasUseFunction>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(./PRC/PRCF)))" />
									</xsl:attribute>
								</arco-cd:hasUseFunction>
							</rdf:Description>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'UseFunction/', arco-fn:urify(normalize-space(./PRC/PRCF)))" />
									</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/UseFunction'" />
                                    </xsl:attribute>
								</rdf:type>
								<l0:name>
									<xsl:value-of select="normalize-space(./PRC/PRCF)" />
								</l0:name>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./PRC/PRCF)" />
								</rdfs:label>
							</rdf:Description>
						</xsl:if>
						<!-- PRCM cultural institute or site as an individual -->
						<xsl:if test="./PRC/PRCM">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:choose>
										<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(./PRV/PRVS), normalize-space(./PRV/PRVE))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)), normalize-space(lower-case(./PRC/PRCM)))))" />
										</xsl:otherwise>
									</xsl:choose>
                                </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'http://dati.beniculturali.it/cis/CulturalInstituteOrSite'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./PRC/PRCM)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./PRC/PRCM)" />
								</l0:name>
								<cis:hasCISNameInTime>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'CISNameInTime/', arco-fn:urify(normalize-space(./PRC/PRCM)))" />
									</xsl:attribute>
								</cis:hasCISNameInTime>
								<cis:hasSite>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="$site" />
									</xsl:attribute>
								</cis:hasSite>
							</rdf:Description>
							<!-- Name in time of CIS -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'CISNameInTime/', arco-fn:urify(normalize-space(./PRC/PRCM)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'http://dati.beniculturali.it/cis/CISNameInTime'" />
									</xsl:attribute>
								</rdf:type>
								<cis:institutionalCISName>
									<xsl:value-of select="normalize-space(./PRC/PRCM)" />
								</cis:institutionalCISName>
							</rdf:Description>
						</xsl:if>
						<!-- Site Type as an individual -->
						<xsl:if test="./PRC/PRCT and not(normalize-space(./PRC/PRCT)='.') and (not(starts-with(lower-case(normalize-space(./PRC/PRCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCT)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                        <xsl:choose>
                                            <xsl:when test="./PRC/PRCQ">
                                                <xsl:value-of select="concat($NS, 'SiteType/', arco-fn:urify(normalize-space(./PRC/PRCT)), '-', arco-fn:urify(normalize-space(./PRC/PRCQ)))" />
                                            </xsl:when>
                                            <xsl:otherwise>
                                                <xsl:value-of select="concat($NS, 'SiteType/', arco-fn:urify(normalize-space(./PRC/PRCT)))" />
                                            </xsl:otherwise>
                                        </xsl:choose>
                                    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/location/SiteType'" /> 
                                        </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:choose>
										<xsl:when test="./PRC/PRCQ">
											<xsl:value-of select="concat('Tipo di contenitore fisico: ', normalize-space(./PRC/PRCT), ' ', normalize-space(./PRC/PRCQ))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('Tipo di contenitore fisico: ', normalize-space(./PRC/PRCT))" />
										</xsl:otherwise>
									</xsl:choose>
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:choose>
										<xsl:when test="./PRC/PRCQ">
											<xsl:value-of select="concat('Tipo di contenitore fisico: ', normalize-space(./PRC/PRCT), ' ', normalize-space(./PRC/PRCQ))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('Tipo di contenitore fisico: ', normalize-space(./PRC/PRCT))" />
										</xsl:otherwise>
									</xsl:choose>
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:choose>
										<xsl:when test="./PRC/PRCQ">
											<xsl:value-of select="concat('Site type: ', normalize-space(./PRC/PRCT), ' ', normalize-space(./PRC/PRCQ))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('Site type: ', normalize-space(./PRC/PRCT))" />
										</xsl:otherwise>
									</xsl:choose>
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:choose>
										<xsl:when test="./PRC/PRCQ">
											<xsl:value-of select="concat('Site type: ', normalize-space(./PRC/PRCT), ' ', normalize-space(./PRC/PRCQ))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat('Site type: ', normalize-space(./PRC/PRCT))" />
										</xsl:otherwise>
									</xsl:choose>
								</l0:name>
								<xsl:if test="./PRC/PRCT and (not(starts-with(lower-case(normalize-space(./PRC/PRCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCT)), 'n.r')))">
									<arco-location:hasSiteDefinition>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="concat($NS,'SiteDefinition/', arco-fn:urify(normalize-space(./PRC/PRCT)))" />
                                        </xsl:attribute>
									</arco-location:hasSiteDefinition>
								</xsl:if>
								<xsl:if test="./PRC/PRCQ and (not(starts-with(lower-case(normalize-space(./PRC/PRCQ)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCQ)), 'n.r')))">
									<arco-location:hasSiteSpecification>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS,'SiteSpecification/', arco-fn:urify(normalize-space(./PRC/PRCQ)))" />
										</xsl:attribute>
									</arco-location:hasSiteSpecification>
								</xsl:if>
							</rdf:Description>
						</xsl:if>
						<!-- Site Definition as an individual -->
						<xsl:if test="./PRC/PRCT and (not(starts-with(lower-case(normalize-space(./PRC/PRCT)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCT)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS,'SiteDefinition/', arco-fn:urify(normalize-space(./PRC/PRCT)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/location/SiteDefinition'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./PRC/PRCT)" />
								</rdfs:label>
							</rdf:Description>
						</xsl:if>
						<!-- Site Specification as an individual -->
						<xsl:if test="./PRC/PRCQ and (not(starts-with(lower-case(normalize-space(./PRC/PRCQ)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCQ)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS,'SiteSpecification/', arco-fn:urify(normalize-space(./PRC/PRCQ)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/location/SiteSpecification'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./PRC/PRCQ)" />
								</rdfs:label>
							</rdf:Description>
						</xsl:if>
						<!-- Continent as individual -->
						<xsl:if test="./PRT/PRTK and (not(starts-with(lower-case(normalize-space(./PRT/PRTK)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTK)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Continent/', arco-fn:urify(normalize-space(./PRT/PRTK)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/location/Continent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(./PRT/PRTK)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./PRT/PRTK)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<!-- Address as an individual -->
						<xsl:if test="./PRV/*">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                    <xsl:choose>
										<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
											<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVS)), normalize-space(lower-case(./PRV/PRVE)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:choose>
												<xsl:when test="./PRC/PRCU and not(./PRC/PRCU='.' or ./PRC/PRCU='-' or ./PRC/PRCU='/')">
													<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)))))" />
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRL/PRLT)))))" />
												</xsl:otherwise>
											</xsl:choose>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:for-each select="./PRV/*">
										<xsl:choose>
											<xsl:when test="position() = 1">
												<xsl:value-of select="./text()" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat(', ', ./text())" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
									<xsl:for-each select="./PRL/*">
										<xsl:value-of select="concat(', ', ./text())" />
									</xsl:for-each>
								</rdfs:label>
								<!-- ToponymInTime associated with record/metadata/schede/*/LA -->
								<xsl:for-each select="./PRL">
									<arco-location:hasToponymInTime>
										<xsl:attribute name="rdf:resource">
											<xsl:choose>
												<xsl:when test="./PRLT">
													<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./PRLT)))" />
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(.)))" />
												</xsl:otherwise>
											</xsl:choose>
										</xsl:attribute>
									</arco-location:hasToponymInTime>
									<arco-lite:toponym>
										<xsl:choose>
											<xsl:when test="./PRLT">
												<xsl:value-of select="(normalize-space(./PRLT))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="(normalize-space(.))" />
											</xsl:otherwise>
										</xsl:choose>
									</arco-lite:toponym>
								</xsl:for-each>
								<xsl:if test="./PRC/PRCU and not(./PRC/PRCU='.' or ./PRC/PRCU='-' or ./PRC/PRCU='/') and (not(starts-with(lower-case(normalize-space(./PRC/PRCU)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCU)), 'n.r')))">
									<clvapit:fullAddress>
										<xsl:value-of select="normalize-space(./PRC/PRCU)" />
									</clvapit:fullAddress>
								</xsl:if>
								<!-- Stato -->
								<xsl:if test="./PRV/PRVS and (not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'n.r')))">
									<clvapit:hasCountry>
										<xsl:attribute name="rdf:resource">
                                                <xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(./PRV/PRVS))" />
                                            </xsl:attribute>
									</clvapit:hasCountry>
								</xsl:if>
								<!-- Regione -->
								<xsl:if test="./PRV/PRVR and (not(starts-with(lower-case(normalize-space(./PRV/PRVR)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVR)), 'n.r')))">
									<xsl:choose>
										<xsl:when test="./PRV/PRVC and (starts-with(lower-case(normalize-space(./PRV/PRVC)), 'firenze') or starts-with(lower-case(normalize-space(./PRV/PRVC)), 'siena') or starts-with(lower-case(normalize-space(./PRV/PRVC)), 'san severino marche') or starts-with(lower-case(normalize-space(./PRV/PRVC)), 'modena'))">
											<xsl:choose>
												<xsl:when test="./PRV/PRVR and (starts-with(lower-case(normalize-space(./PRV/PRVR)), 'lombardia'))">
												</xsl:when>
												<xsl:otherwise>
													<clvapit:hasRegion>
														<xsl:attribute name="rdf:resource">
        	    	            	        		         <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./PRV/PRVR))" />
					                     			    </xsl:attribute>
													</clvapit:hasRegion>
												</xsl:otherwise>
											</xsl:choose>					
										</xsl:when>
										<xsl:otherwise>
											<clvapit:hasRegion>
												<xsl:attribute name="rdf:resource">
        	            	    		    	    <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./PRV/PRVR))" />
			            	            	    </xsl:attribute>
											</clvapit:hasRegion>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:if>
								<!-- Provincia -->
								<xsl:if test="./PRV/PRVP and (not(starts-with(lower-case(normalize-space(./PRV/PRVP)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVP)), 'n.r')))">
									<clvapit:hasProvince>
										<xsl:attribute name="rdf:resource">
                                                <xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(./PRV/PRVP))" />
                                            </xsl:attribute>
									</clvapit:hasProvince>
								</xsl:if>
								<!-- Comune -->
								<xsl:if test="./PRV/PRVC and (not(starts-with(lower-case(normalize-space(./PRV/PRVC)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVC)), 'n.r')))">
									<clvapit:hasCity>
										<xsl:attribute name="rdf:resource">
                                        	<xsl:value-of select="concat($NS, 'City/', arco-fn:urify(./PRV/PRVC))" />
										</xsl:attribute>
									</clvapit:hasCity>
								</xsl:if>
								<!-- Località -->
								<xsl:if test="./PRV/PRVL and (not(starts-with(lower-case(normalize-space(./PRV/PRVL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVL)), 'n.r')))">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
                                                <xsl:value-of
											select="concat($NS, 'AddressArea/', arco-fn:urify(./PRV/PRVL))" />
                                            </xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
								<xsl:if test="./PRT/PRTL and (not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'n.r')))">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
                                                <xsl:value-of
											select="concat($NS, 'AddressArea/', arco-fn:urify(./PRT/PRTL))" />
                                            </xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
								<xsl:if test="./PRV/PRVE and (not(starts-with(lower-case(normalize-space(./PRV/PRVE)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVE)), 'n.r')))">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
                                                <xsl:value-of
											select="concat($NS, 'AddressArea/', arco-fn:urify(./PRV/PRVE))" />
                                            </xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
								<!-- Test per ClericalAdministrativeArea -->
								<xsl:if test="./PRE">
									<arco-location:hasClericalAdministrativeArea>
										<xsl:attribute name="rdf:resource">
                                                <xsl:value-of
											select="concat($NS, 'ClericalAdministrativeArea/', arco-fn:urify(./PRE))" />
                                            </xsl:attribute>
									</arco-location:hasClericalAdministrativeArea>
								</xsl:if>
								<xsl:for-each select="./PRG">
									<arco-core:note>
										<xsl:value-of select="." />
									</arco-core:note>
								</xsl:for-each>
							</rdf:Description>
							<!-- Clerical Administrative Area : if any exists -->
							<xsl:if test="./PRE">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
											<xsl:value-of
										select="concat($NS, 'ClericalAdministrativeArea/', arco-fn:urify(./PRE))" />
                                        </xsl:attribute>
									<rdfs:label>
										<xsl:value-of select="normalize-space(./PRE)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./PRE)" />
									</l0:name>
									<rdf:type
										rdf:resource="http://dati.beniculturali.it/cis/ClericalAdministrativeArea" />
								</rdf:Description>
							</xsl:if>

							<!-- Country -->
							<xsl:if
								test="./PRV/PRVS and (not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                            <xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(./PRV/PRVS))" />
                                        </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Country'" />
                                            </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVS)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVS)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- Regione -->
							<xsl:if test="./PRV/PRVR and (not(starts-with(lower-case(normalize-space(./PRV/PRVR)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVR)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                            <xsl:value-of
										select="concat($NS, 'Region/', arco-fn:urify(./PRV/PRVR))" />
                                        </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                                <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Region'" />
                                            </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVR)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVR)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- Provincia -->
							<xsl:if test="./PRV/PRVP and (not(starts-with(lower-case(normalize-space(./PRV/PRVP)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVP)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(./PRV/PRVP))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Province'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVP)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVP)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- Comune -->
							<xsl:if test="./PRV/PRVC and (not(starts-with(lower-case(normalize-space(./PRV/PRVC)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVC)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'City/', arco-fn:urify(./PRV/PRVC))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/City'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVC)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVC)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- Località -->
							<xsl:if test="./PRV/PRVL and (not(starts-with(lower-case(normalize-space(./PRV/PRVL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVL)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRV/PRVL))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVL)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVL)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./PRT/PRTL and (not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRT/PRTL))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="normalize-space(./PRT/PRTL)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./PRT/PRTL)" />
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./PRV/PRVE and (not(starts-with(lower-case(normalize-space(./PRV/PRVE)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVE)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRV/PRVE))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="normalize-space(./PRV/PRVE)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./PRV/PRVE)" />
									</l0:name>
								</rdf:Description>
							</xsl:if>
						</xsl:if>
						<!-- Toponym in Time as individual -->
						<xsl:for-each select="./PRL">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:choose>
										<xsl:when test="./PRLT">
											<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./PRLT)))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(.)))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/arco/ontology/location/ToponymInTime'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:choose>
										<xsl:when test="./PRLT">
											<xsl:value-of select="normalize-space(./PRLT)" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="normalize-space(.)" />
										</xsl:otherwise>
									</xsl:choose>
								</rdfs:label>
								<l0:name>
									<xsl:choose>
										<xsl:when test="./PRLT">
											<xsl:value-of select="normalize-space(./PRLT)" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of select="normalize-space(.)" />
										</xsl:otherwise>
									</xsl:choose>
								</l0:name>
								<xsl:if test="./PRLR">
									<tiapit:atTime>
										<xsl:attribute name="rdf:resource">
                         		   		    <xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./PRLR)))" />
                            			</xsl:attribute>
									</tiapit:atTime>
								</xsl:if>
								<xsl:if test="./PRLS">
									<arco-core:note>
										<xsl:value-of select="normalize-space(./PRLS)" />
									</arco-core:note>
								</xsl:if>
							</rdf:Description>
						</xsl:for-each>
						<!-- Address Area as individual -->
						<xsl:if test="./PRV/PRVF">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(normalize-space(./PRV/PRVF)))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./PRV/PRVF)" />
									</xsl:call-template>
								</rdfs:label>
								<l0:name>
									<xsl:call-template name="CamelCase">
										<xsl:with-param name="text" select="normalize-space(./PRV/PRVF)" />
									</xsl:call-template>
								</l0:name>
							</rdf:Description>
						</xsl:if>
						<!-- Cultural Institute or Site -->
					</xsl:when>
					<xsl:when test="./PRV|./PRT|./PRE"><!-- avoid file: resources  -->
						<xsl:variable name="location">
							<xsl:choose>
								<xsl:when test="./PRV">
									<xsl:choose>
										<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
											<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVS)), normalize-space(lower-case(./PRV/PRVE)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:choose>
												<xsl:when test="./PRV/PRVG and not(./PRV/PRVG='.' or ./PRV/PRVG='-' or ./PRV/PRVG='/')">
													<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVG)), normalize-space(lower-case(./PRV/PRVA)), normalize-space(lower-case(./PRV/PRVR)), normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)))))" />
												</xsl:when>
												<xsl:when test="./PRC/PRCU and not(./PRC/PRCU='.' or ./PRC/PRCU='-' or ./PRC/PRCU='/')">
													<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)))))" />
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRL/PRLT)))))" />
												</xsl:otherwise>
											</xsl:choose>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:when>
								<xsl:when test="./PRT and not($sheetType='BDI')">
									<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(normalize-space(./PRT)))" />
								</xsl:when>
								<xsl:when test="./PRE">
									<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(normalize-space(./PRE)))" />
								</xsl:when>
							</xsl:choose>
						</xsl:variable>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-alternative-', position())" />
							</xsl:attribute>
							<arco-location:atLocation>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="$location" />
								</xsl:attribute>
							</arco-location:atLocation>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about"> 
								<xsl:value-of select="$location" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:choose>
									<xsl:when test="./PRV">
										<xsl:value-of select="normalize-space(./PRV)" />
									</xsl:when>
									<xsl:when test="./PRT">
										<xsl:value-of select="normalize-space(./PRT)" />
									</xsl:when>
									<xsl:when test="./PRE">
										<xsl:value-of select="normalize-space(./PRE)" />
									</xsl:when>
								</xsl:choose>
							</rdfs:label>
							<xsl:choose>
								<xsl:when test="./PRV/*">
									<clvapit:hasAddress>
										<xsl:attribute name="rdf:resource">
            	                            	<xsl:choose>
													<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
														<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVS)), normalize-space(lower-case(./PRV/PRVE)))))" />
													</xsl:when>
													<xsl:otherwise>
														<xsl:choose>
															<xsl:when test="./PRV/PRVG and not(./PRV/PRVG='.' or ./PRV/PRVG='-' or ./PRV/PRVG='/')">
																<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVG)), normalize-space(lower-case(./PRV/PRVA)), normalize-space(lower-case(./PRV/PRVR)), normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)))))" />
															</xsl:when>
															<xsl:when test="./PRC/PRCU and not(./PRC/PRCU='.' or ./PRC/PRCU='-' or ./PRC/PRCU='/')">
																<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)))))" />
															</xsl:when>
															<xsl:otherwise>
																<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRL/PRLT)))))" />
															</xsl:otherwise>
														</xsl:choose>
													</xsl:otherwise>
												</xsl:choose>
                        	                </xsl:attribute>
									</clvapit:hasAddress>
								</xsl:when>
								<xsl:when test="./PRT/*">
									<clvapit:hasAddress>
										<xsl:attribute name="rdf:resource">
                	                        <xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRT/PRTK)), normalize-space(lower-case(./PRT/PRTS)), normalize-space(lower-case(./PRT/PRTR)), normalize-space(lower-case(./PRT/PRTL)))))" />
                    	                  </xsl:attribute>
									</clvapit:hasAddress>
								</xsl:when>
								<xsl:when test="./PRE">
									<clvapit:hasAddress>
										<xsl:attribute name="rdf:resource">
            	                            <xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(./PRE))" />
                	                      </xsl:attribute>
									</clvapit:hasAddress>
								</xsl:when>
							</xsl:choose>
							<xsl:for-each select="./PRL">
								<arco-location:hasToponymInTime>
									<xsl:attribute name="rdf:resource">
										<xsl:choose>
											<xsl:when test="./PRL/PRLT">
												<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./PRLT)))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(.)))" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:attribute>
								</arco-location:hasToponymInTime>
								<arco-lite:toponym>
										<xsl:choose>
											<xsl:when test="./PRLT">
												<xsl:value-of select="(normalize-space(./PRLT))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="(normalize-space(.))" />
											</xsl:otherwise>
										</xsl:choose>
									</arco-lite:toponym>
							</xsl:for-each>
							<xsl:if test="./PRVF">
								<arco-location:hasToponymInTime>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(./PRVF)))" />
									</xsl:attribute>
								</arco-location:hasToponymInTime>
								<arco-lite:toponym>
									<xsl:value-of select="(normalize-space(./PRVF))" />
								</arco-lite:toponym>
							</xsl:if>
						</rdf:Description>
						<xsl:choose>
						<xsl:when test="./PRT/*">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                     <xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRT/PRTK)), normalize-space(lower-case(./PRT/PRTS)), normalize-space(lower-case(./PRT/PRTR)), normalize-space(lower-case(./PRT/PRTL)))))" />
                                </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:for-each select="./PRT/*">
										<xsl:choose>
											<xsl:when test="position() = 1">
												<xsl:value-of select="./text()" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat(', ', ./text())" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</rdfs:label>
								<xsl:if test="./PRT/PRTK and (not(starts-with(lower-case(normalize-space(./PRT/PRTK)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTK)), 'n.r')))">
									<arco-location:hasContinent>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Continent/', arco-fn:arcofy(normalize-space(./PRT/PRTK)))" />
										</xsl:attribute>
									</arco-location:hasContinent>
								</xsl:if>
								<!-- Stato -->
								<xsl:if test="./PRT/PRTS and (not(starts-with(lower-case(normalize-space(./PRT/PRTS)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTS)), 'n.r')))">
									<clvapit:hasCountry>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(./PRT/PRTS))" />
										</xsl:attribute>
									</clvapit:hasCountry>
								</xsl:if>
								<!-- Regione -->
								<xsl:if test="./PRT/PRTR and (not(starts-with(lower-case(normalize-space(./PRT/PRTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTR)), 'n.r')))">
									<xsl:choose>
										<xsl:when test="./PRT/PRTL and (starts-with(lower-case(normalize-space(./PRT/PRTL)), 'firenze') or starts-with(lower-case(normalize-space(./PRT/PRTL)), 'siena') or starts-with(lower-case(normalize-space(./PRT/PRTL)), 'san severino marche') or starts-with(lower-case(normalize-space(./PRT/PRTL)), 'modena'))">	
											<xsl:choose>
												<xsl:when test="./PRT/PRTR and (starts-with(lower-case(normalize-space(./PRT/PRTR)), 'lombardia'))">
												</xsl:when>
												<xsl:otherwise>
													<clvapit:hasRegion>
														<xsl:attribute name="rdf:resource">
        	    	            	        		         <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./PRT/PRTR))" />
					                     			    </xsl:attribute>
													</clvapit:hasRegion>
												</xsl:otherwise>
											</xsl:choose>					
										</xsl:when>
										<xsl:otherwise>
											<clvapit:hasRegion>
												<xsl:attribute name="rdf:resource">
        	            	    		    	    <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./PRT/PRTR))" />
			            	            	    </xsl:attribute>
											</clvapit:hasRegion>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:if>
								<!-- Località -->
								<xsl:if test="./PRT/PRTL and (not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'n.r')))">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRT/PRTL))" />
										</xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
							</rdf:Description>					
							<!-- Continent as individual -->
							<xsl:if test="./PRT/PRTK and (not(starts-with(lower-case(normalize-space(./PRT/PRTK)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTK)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                	                    <xsl:value-of select="concat($NS, 'Continent/', arco-fn:arcofy(normalize-space(./PRT/PRTK)))" />
                    	            </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                	        <xsl:value-of select="'https://w3id.org/arco/ontology/location/Continent'" />
                                    	</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="normalize-space(./PRT/PRTK)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./PRT/PRTK)" />
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./PRV/PRVS and (not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(./PRV/PRVS))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Country'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVS)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVS)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- Region LA -->
							<xsl:if test="./PRT/PRTR and (not(starts-with(lower-case(normalize-space(./PRT/PRTR)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTR)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./PRT/PRTR))" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Region'" />
										</xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRT/PRTR)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRT/PRTR)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./PRT/PRTL and (not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
        	                                <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRT/PRTL))" />
            	                    </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                        					<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
                            	        </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="normalize-space(./PRT/PRTL)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./PRT/PRTL)" />
									</l0:name>
								</rdf:Description>
							</xsl:if>
						</xsl:when>
						<xsl:when test="./PRV/*">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:choose>
										<xsl:when test="./PRV/PRVS and not(lower-case(normalize-space(./PRV/PRVS))='italia')">
											<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVS)), normalize-space(lower-case(./PRV/PRVE)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:choose>
												<xsl:when test="./PRV/PRVG and not(./PRV/PRVG='.' or ./PRV/PRVG='-' or ./PRV/PRVG='/')">
													<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVG)), normalize-space(lower-case(./PRV/PRVA)), normalize-space(lower-case(./PRV/PRVR)), normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)))))" />
												</xsl:when>
												<xsl:when test="./PRC/PRCU and not(./PRC/PRCU='.' or ./PRC/PRCU='-' or ./PRC/PRCU='/')">
													<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRC/PRCU)))))" />
												</xsl:when>
												<xsl:otherwise>
													<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(./PRV/PRVP)), normalize-space(lower-case(./PRV/PRVC)), normalize-space(lower-case(./PRV/PRVF)), normalize-space(lower-case(./PRV/PRVL)), normalize-space(lower-case(./PRL/PRLT)))))" />
												</xsl:otherwise>
											</xsl:choose>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:for-each select="./PRV/*">
										<xsl:choose>
											<xsl:when test="position() = 1">
												<xsl:value-of select="./text()" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat(', ', ./text())" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</rdfs:label>
								<!-- Stato -->
								<xsl:if test="./PRV/PRVS and (not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'n.r')))">
									<clvapit:hasCountry>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(./PRV/PRVS))" />
										</xsl:attribute>
									</clvapit:hasCountry>
								</xsl:if>
								<!-- Regione -->
								<xsl:if test="./PRV/PRVR and (not(starts-with(lower-case(normalize-space(./PRV/PRVR)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVR)), 'n.r')))">
									<xsl:choose>
										<xsl:when test="./PRV/PRVC and (starts-with(lower-case(normalize-space(./PRV/PRVC)), 'firenze') or starts-with(lower-case(normalize-space(./PRV/PRVC)), 'siena') or starts-with(lower-case(normalize-space(./PRV/PRVC)), 'san severino marche') or starts-with(lower-case(normalize-space(./PRV/PRVC)), 'modena'))">	
											<xsl:choose>
												<xsl:when test="./PRV/PRVR and (starts-with(lower-case(normalize-space(./PRV/PRVR)), 'lombardia'))">
												</xsl:when>
												<xsl:otherwise>
													<clvapit:hasRegion>
														<xsl:attribute name="rdf:resource">
        	    	            	        		         <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./PRV/PRVR))" />
					                     			    </xsl:attribute>
													</clvapit:hasRegion>
												</xsl:otherwise>
											</xsl:choose>					
										</xsl:when>
										<xsl:otherwise>
											<clvapit:hasRegion>
												<xsl:attribute name="rdf:resource">
        	            	    		    	    <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./PRV/PRVR))" />
			            	            	    </xsl:attribute>
											</clvapit:hasRegion>
										</xsl:otherwise>
									</xsl:choose>
								</xsl:if>
								<!-- Provincia -->
								<xsl:if test="./PRV/PRVP and (not(starts-with(lower-case(normalize-space(./PRV/PRVP)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVP)), 'n.r')))">
									<clvapit:hasProvince>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(./PRV/PRVP))" />
										</xsl:attribute>
									</clvapit:hasProvince>
								</xsl:if>
								<!-- Comune -->
								<xsl:if test="./PRV/PRVC and (not(starts-with(lower-case(normalize-space(./PRV/PRVC)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVC)), 'n.r')))">
									<clvapit:hasCity>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'City/', arco-fn:urify(./PRV/PRVC))" />
										</xsl:attribute>
									</clvapit:hasCity>
								</xsl:if>
								<!-- Località -->
								<xsl:if test="./PRV/PRVL and (not(starts-with(lower-case(normalize-space(./PRV/PRVL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVL)), 'n.r')))">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRV/PRVL))" />
										</xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
								<!-- Fraction -->
								<xsl:if test="./PRV/PRVF">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
                                    	    <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(normalize-space(./PRV/PRVF)))" />
		            	                </xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
								<xsl:if test="./PRT/PRTL and (not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRT/PRTL)), 'n.r')))">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRT/PRTL))" />
										</xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
								<xsl:if test="./PRV/PRVE and (not(starts-with(lower-case(normalize-space(./PRV/PRVE)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVE)), 'n.r')))">
									<clvapit:hasAddressArea>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRV/PRVE))" />
										</xsl:attribute>
									</clvapit:hasAddressArea>
								</xsl:if>
								<xsl:if test="./PRC/PRCU and not(./PRC/PRCU='.' or ./PRC/PRCU='-' or ./PRC/PRCU='/') and (not(starts-with(lower-case(normalize-space(./PRC/PRCU)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRC/PRCU)), 'n.r')))">
									<clvapit:fullAddress>
										<xsl:value-of select="normalize-space(./PRC/PRCU)" />
									</clvapit:fullAddress>
								</xsl:if>
							</rdf:Description>
							<!-- Country LA -->
							<xsl:if test="./PRV/PRVS and (not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVS)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                        <xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(./PRV/PRVS))" />
                                    </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Country'" />
                                        </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVS)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVS)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- Region LA -->
							<xsl:if test="./PRV/PRVR and (not(starts-with(lower-case(normalize-space(./PRV/PRVR)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVR)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                        <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(./PRV/PRVR))" />
                                    </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Region'" />
                                        </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVR)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVR)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- Province LA -->
							<xsl:if test="./PRV/PRVP and (not(starts-with(lower-case(normalize-space(./PRV/PRVP)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVP)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                        <xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(./PRV/PRVP))" />
                                    </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/Province'" />
                                        </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVP)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVP)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- City LA -->
							<xsl:if test="./PRV/PRVC and (not(starts-with(lower-case(normalize-space(./PRV/PRVC)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVC)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                        <xsl:value-of select="concat($NS, 'City/', arco-fn:urify(./PRV/PRVC))" />
                                    </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/City'" />
                                        </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVC)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVC)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<!-- Località (Address Area) LA -->
							<xsl:if test="./PRV/PRVL and (not(starts-with(lower-case(normalize-space(./PRV/PRVL)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVL)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                        <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRV/PRVL))" />
                                    </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
                                        </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVL)" />
										</xsl:call-template>
									</rdfs:label>
									<l0:name>
										<xsl:call-template name="CamelCase">
											<xsl:with-param name="text" select="normalize-space(./PRV/PRVL)" />
										</xsl:call-template>
									</l0:name>
								</rdf:Description>
							</xsl:if>
							<xsl:if test="./PRV/PRVE and (not(starts-with(lower-case(normalize-space(./PRV/PRVE)), 'nr')) and not(starts-with(lower-case(normalize-space(./PRV/PRVE)), 'n.r')))">
								<rdf:Description>
									<xsl:attribute name="rdf:about">
                                        <xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(./PRV/PRVE))" />
                                    </xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
                                            <xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
                                        </xsl:attribute>
									</rdf:type>
									<rdfs:label>
										<xsl:value-of select="normalize-space(./PRV/PRVE)" />
									</rdfs:label>
									<l0:name>
										<xsl:value-of select="normalize-space(./PRV/PRVE)" />
									</l0:name>
								</rdf:Description>
							</xsl:if>
						</xsl:when>
						<xsl:when test="./PRE">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(./PRE))" />
								</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Address'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="./PRE" />
								</rdfs:label>
							</rdf:Description>
						</xsl:when>
						</xsl:choose>
					</xsl:when>
				</xsl:choose>
			</xsl:for-each>
			<!-- shot location for F norm -->
			<xsl:if test="record/metadata/schede/F/LR">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-shot')" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
                            <xsl:value-of select="'https://w3id.org/arco/ontology/location/TimeIndexedTypedLocation'" />
                        </xsl:attribute>
					</rdf:type>
					<arco-location:isTimeIndexedTypedLocationOf>
						<xsl:attribute name="rdf:resource"> 
							<xsl:value-of select="$culturalProperty" /> 
						</xsl:attribute>
					</arco-location:isTimeIndexedTypedLocationOf>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Localizzazione di ripresa del bene: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Localizzazione di ripresa del bene: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Shooting location of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Shooting location of cultural property: ', $itemURI)" />
					</l0:name>
					<arco-location:hasLocationType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/location/ShootingLocation'" />
						</xsl:attribute>
					</arco-location:hasLocationType>
					<xsl:if
						test="record/metadata/schede/F/LR/LRD and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRD)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRD)), 'n.r')))">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(record/metadata/schede/F/LR/LRD)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
					<!-- hasCircumstance for Shot Location (F) -->
					<xsl:if
						test="record/metadata/schede/F/LR/LRO and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRO)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRO)), 'n.r')))">
						<arco-cd:hasCircumstance>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(record/metadata/schede/F/LR/LRO)))" />
							</xsl:attribute>
						</arco-cd:hasCircumstance>
					</xsl:if>
				</rdf:Description>
				<!-- Circumstance as individual for Shot Location (F) -->
				<xsl:if
					test="record/metadata/schede/F/LR/LRO and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRO)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRO)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Circumstance/', arco-fn:urify(normalize-space(record/metadata/schede/F/LR/LRO)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Circumstance'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRO)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRO)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Time Interval for shot location (F) -->
				<xsl:if
					test="record/metadata/schede/F/LR/LRD and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRD)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRD)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of
							select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(record/metadata/schede/F/LR/LRD)))" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of
								select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
                            </xsl:attribute>
						</rdf:type>
						<xsl:if
							test="record/metadata/schede/F/LR/LRD and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRD)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRD)), 'n.r')))">
							<tiapit:time>
								<xsl:value-of
									select="normalize-space(record/metadata/schede/F/LR/LRD)" />
							</tiapit:time>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<xsl:if test="record/metadata/schede/F/LR">
				<xsl:variable name="location">
					<xsl:choose>
						<xsl:when test="record/metadata/schede/F/LR/LRC/LRCS and not(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCS))='italia')">
							<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(normalize-space(lower-case(record/metadata/schede/F/LR/LRC))))" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:choose>
								<xsl:when test="record/metadata/schede/F/LR/LRC/LRCL">
									<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCP)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCC)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCF)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCL)))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'Feature/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCP)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCC)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCF)), normalize-space(lower-case(record/metadata/schede/F/LR/LRA)))))" />
								</xsl:otherwise>
							</xsl:choose>
						</xsl:otherwise>
					</xsl:choose>
				</xsl:variable>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-shot')" />
					</xsl:attribute>
					<arco-location:atLocation>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$location" />
						</xsl:attribute>
					</arco-location:atLocation>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="$location" />
							</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Feature'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRC)" />
					</rdfs:label>
					<xsl:if test="record/metadata/schede/F/LR/*">
						<clvapit:hasAddress>
							<xsl:attribute name="rdf:resource">
                               <xsl:choose>
									<xsl:when test="record/metadata/schede/F/LR/LRC/LRCS and not(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCS))='italia')">
										<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(normalize-space(lower-case(record/metadata/schede/F/LR/LRC))))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:choose>
											<xsl:when test="record/metadata/schede/F/LR/LRC/LRCL">
												<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCP)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCC)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCF)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCL)))))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCP)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCC)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCF)), normalize-space(lower-case(record/metadata/schede/F/LR/LRA)))))" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:otherwise>
								</xsl:choose>
                             </xsl:attribute>
						</clvapit:hasAddress>
					</xsl:if>
					<xsl:if test="record/metadata/schede/F/LR/LRL">
						<arco-location:hasToponymInTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(record/metadata/schede/F/LR/LRL/LRLT)))" />
							</xsl:attribute>
						</arco-location:hasToponymInTime>
						<arco-lite:toponym>
							<xsl:value-of select="(normalize-space(record/metadata/schede/F/LR/LRL))" />
						</arco-lite:toponym>
					</xsl:if>
					<xsl:if test="record/metadata/schede/F/LR/LRC/LRCF">
						<arco-location:hasToponymInTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(record/metadata/schede/F/LR/LRC/LRCF)))" />
							</xsl:attribute>
						</arco-location:hasToponymInTime>
						<arco-lite:toponym>
							<xsl:value-of select="(normalize-space(record/metadata/schede/F/LR/LRC/LRCF))" />
						</arco-lite:toponym>
					</xsl:if>
				</rdf:Description>
				<xsl:if test="record/metadata/schede/F/LR/LRC/*">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                              <xsl:choose>
									<xsl:when
							test="record/metadata/schede/F/LR/LRC/LRCS and not(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCS))='italia')">
										<xsl:value-of
							select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCS)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCA)))))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:choose>
											<xsl:when
							test="record/metadata/schede/F/LR/LRC/LRCL">
												<xsl:value-of
							select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCP)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCC)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCF)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCL)))))" />
											</xsl:when>
											<xsl:otherwise>
												<xsl:value-of
							select="concat($NS, 'Address/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCP)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCC)), normalize-space(lower-case(record/metadata/schede/F/LR/LRC/LRCF)), normalize-space(lower-case(record/metadata/schede/F/LR/LRA)))))" />
											</xsl:otherwise>
										</xsl:choose>
									</xsl:otherwise>
								</xsl:choose>
                            </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                            <xsl:value-of
								select="'https://w3id.org/italia/onto/CLV/Address'" />
                                        </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:for-each
								select="record/metadata/schede/F/LR/LRC/*">
								<xsl:choose>
									<xsl:when test="position() = 1">
										<xsl:value-of select="./text()" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat(', ', ./text())" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:for-each>
						</rdfs:label>
						<xsl:if
							test="record/metadata/schede/F/LR/LRC/LRCS and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCS)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCS)), 'n.r')))">
							<clvapit:hasCountry>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCS))" />
								</xsl:attribute>
							</clvapit:hasCountry>
						</xsl:if>
						<!-- Regione -->
						<xsl:if test="record/metadata/schede/F/LR/LRC/LRCR and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCR)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCR)), 'n.r')))">
							<xsl:choose>
								<xsl:when test="record/metadata/schede/F/LR/LRC/LRCC and (starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCC)), 'firenze') or starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCC)), 'siena') or starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCC)), 'san severino marche') or starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCC)), 'modena'))">	
									<xsl:choose>
										<xsl:when test="record/metadata/schede/F/LR/LRC/LRCR and (starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCR)), 'lombardia'))">
										</xsl:when>
										<xsl:otherwise>
											<clvapit:hasRegion>
												<xsl:attribute name="rdf:resource">
        	    	                   		         <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCR))" />
					                   			    </xsl:attribute>
											</clvapit:hasRegion>
										</xsl:otherwise>
									</xsl:choose>					
								</xsl:when>
								<xsl:otherwise>
									<clvapit:hasRegion>
										<xsl:attribute name="rdf:resource">
        	            	        	    <xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCR))" />
			            			    </xsl:attribute>
									</clvapit:hasRegion>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:if>
						<!-- Provincia -->
						<xsl:if test="record/metadata/schede/F/LR/LRC/LRCP and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCP)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCP)), 'n.r')))">
							<clvapit:hasProvince>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCP))" />
								</xsl:attribute>
							</clvapit:hasProvince>
						</xsl:if>
						<!-- Comune -->
						<xsl:if test="record/metadata/schede/F/LR/LRC/LRCC and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCC)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCC)), 'n.r')))">
							<clvapit:hasCity>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'City/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCC))" />
								</xsl:attribute>
							</clvapit:hasCity>
						</xsl:if>
						<!-- Località -->
						<xsl:if test="record/metadata/schede/F/LR/LRC/LRCL and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCL)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCL)), 'n.r')))">
							<clvapit:hasAddressArea>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCL))" />
								</xsl:attribute>
							</clvapit:hasAddressArea>
						</xsl:if>
						<xsl:if test="record/metadata/schede/F/LR/LRA and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRA)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRA)), 'n.r')))">
							<clvapit:hasAddressArea>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/F/LR/LRA))" />
								</xsl:attribute>
							</clvapit:hasAddressArea>
						</xsl:if>
						<xsl:if test="record/metadata/schede/F/LR/LRC/LRCE and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCE)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCE)), 'n.r')))">
							<clvapit:hasAddressArea>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCE))" />
								</xsl:attribute>
							</clvapit:hasAddressArea>
						</xsl:if>
						<!-- HistoricalArea -->
						<xsl:if test="record/metadata/schede/F/LR/LRG">
							<arco-location:hasHistoricalArea>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AdministrativeUnitComponent/', arco-fn:urify(record/metadata/schede/F/LR/LRG))" />
								</xsl:attribute>
							</arco-location:hasHistoricalArea>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
				<!-- Historical Area : if any exists -->
				<xsl:if test="record/metadata/schede/F/LR/LRG">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AdministrativeUnitComponent/', arco-fn:urify(record/metadata/schede/F/LR/LRG))" />
						</xsl:attribute>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRG)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRG)" />
						</l0:name>
						<rdf:type rdf:resource="https://w3id.org/italia/onto/CLV/AdministrativeUnitComponent" />
					</rdf:Description>
				</xsl:if>
				<!-- Country LR -->
				<xsl:if test="record/metadata/schede/F/LR/LRC/LRCS and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCS)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCS)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Country/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCS))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Country'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/F/LR/LRC/LRCS)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/F/LR/LRC/LRCS)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Region LR -->
				<xsl:if test="record/metadata/schede/F/LR/LRC/LRCR and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCR)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCR)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Region/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCR))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Region'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/F/LR/LRC/LRCR)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/F/LR/LRC/LRCR)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Province LR -->
				<xsl:if test="record/metadata/schede/F/LR/LRC/LRCP and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCP)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCP)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Province/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCP))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/CLV/Province'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/F/LR/LRC/LRCP)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/F/LR/LRC/LRCP)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- City LR -->
				<xsl:if test="record/metadata/schede/F/LR/LRC/LRCC and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCC)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCC)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'City/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCC))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/CLV/City'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/F/LR/LRC/LRCC)" />
							</xsl:call-template>
						</rdfs:label>
						<l0:name>
							<xsl:call-template name="CamelCase">
								<xsl:with-param name="text" select="normalize-space(record/metadata/schede/F/LR/LRC/LRCC)" />
							</xsl:call-template>
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- Località (Address Area) LR -->
				<xsl:if test="record/metadata/schede/F/LR/LRC/LRCL and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCL)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCL)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCL))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRC/LRCL)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRC/LRCL)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="record/metadata/schede/F/LR/LRC/LRCE and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCE)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRC/LRCE)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/F/LR/LRC/LRCE))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRC/LRCE)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRC/LRCE)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:if test="record/metadata/schede/F/LR/LRA and (not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRA)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/F/LR/LRA)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AddressArea/', arco-fn:urify(record/metadata/schede/F/LR/LRA))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/CLV/AddressArea'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRA)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRA)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<!-- unfixed -->
				<xsl:if test="record/metadata/schede/F/LR/LRL">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'ToponymInTime/', arco-fn:urify(normalize-space(record/metadata/schede/F/LR/LRL)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/location/ToponymInTime'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRL)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/F/LR/LRL)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- We create the cultural event or the exhibition - norm version 4.00 -->
			<xsl:for-each select="record/metadata/schede/*/MS/MST">
				<rdf:Description>
					<xsl:variable name="event-uri">
						<xsl:choose>
							<xsl:when test="./MSTL[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
								<xsl:value-of select="arco-fn:arcofy(concat(./MSTT, ./MSTL[1]))" /><!-- TODO -->
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="arco-fn:arcofy(./MSTT)" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:choose>
						<xsl:when test="./MSTI">
							<xsl:choose>
								<xsl:when test="./MSTI='mostra'">
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'Exhibition/', $event-uri)" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'https://w3id.org/arco/ontology/cultural-event/Exhibition'" />
										</xsl:attribute>
									</rdf:type>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="rdf:about">
										<xsl:value-of select="concat($NS, 'CulturalEvent/', $event-uri)" />
									</xsl:attribute>
									<rdf:type>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="'http://dati.beniculturali.it/cis/CulturalEvent'" />
										</xsl:attribute>
									</rdf:type>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:otherwise>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'CulturalEvent/', $event-uri)" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'http://dati.beniculturali.it/cis/CulturalEvent'" />
								</xsl:attribute>
							</rdf:type>
						</xsl:otherwise>
					</xsl:choose>
					<cis:involvesCulturalEntity>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$culturalProperty" />
						</xsl:attribute>
					</cis:involvesCulturalEntity>
					<!-- Event name -->
					<xsl:if test="./MSTT">
						<l0:name>
							<xsl:value-of select="normalize-space(./MSTT)" />
						</l0:name>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./MSTT)" />
						</rdfs:label>
					</xsl:if>
					<!-- Event organizer -->
					<xsl:if	test="./MSTE[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<xsl:for-each select="./MSTE">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-organiser-', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:for-each>
					</xsl:if>
					<!-- Event location and time -->
					<xsl:for-each select="./MSTL[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-ce:eventTimeLocation>
							<xsl:value-of select="normalize-space()" />
						</arco-ce:eventTimeLocation>
					</xsl:for-each>
					<!-- Event notes -->
					<xsl:if test="./MSTS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./MSTS)" />
						</arco-core:note>
					</xsl:if>
				</rdf:Description>
				<!-- Event organizer - Time Indexed Role -->
				<xsl:if test="./MSTE[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<xsl:for-each select="./MSTE">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
    	                   		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-organiser-', position())" />
        	   	       		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                	   	        <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                    	   	</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Organizzatore dell evento sul bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Organizzatore dell evento sul bene culturale ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Organiser of event on cultural property ', $itemURI, ': ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Organiser of event on cultural property ', $itemURI, ': ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
		               	            <xsl:value-of select="concat($NS, 'Role/Organiser')" />
		                   	    </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
	       	        	            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	           	        	    </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- Event organizer - Role -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Organiser')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Organiser'" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Ente/Soggetto organizzatore'" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="'Ente/Soggetto organizzatore'" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="'Organiser'" />
							</l0:name>
						</rdf:Description>
						<!-- Event organizer - Agent -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
				</xsl:if>
			</xsl:for-each>
			<!-- competition -->
			<xsl:for-each select="record/metadata/schede/*/MS/PRM">
				<rdf:Description>
					<xsl:variable name="event-uri">
						<xsl:choose>
							<xsl:when test="./PRML[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
								<xsl:value-of select="arco-fn:arcofy(concat(./PRMT, ./PRML[1]))" /><!-- TODO -->
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="arco-fn:arcofy(./PRMT)" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Competition/', $event-uri)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/cultural-event/Competition'" />
						</xsl:attribute>
					</rdf:type>
					<cis:involvesCulturalEntity>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$culturalProperty" />
						</xsl:attribute>
					</cis:involvesCulturalEntity>
					<!-- Event name -->
					<xsl:if test="./PRMT">
						<l0:name>
							<xsl:value-of select="normalize-space(./PRMT)" />
						</l0:name>
						<rdfs:label>
							<xsl:value-of select="normalize-space(./PRMT)" />
						</rdfs:label>
					</xsl:if>
					<!-- Event organizer -->
					<xsl:if	test="./PRME[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<xsl:for-each select="./PRME">
							<arco-core:hasAgentRole>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-competition-organiser-', position())" />
								</xsl:attribute>
							</arco-core:hasAgentRole>
						</xsl:for-each>
					</xsl:if>
					<!-- Acknowledgement -->
					<xsl:if	test="./PRMR[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<xsl:for-each select="./PRMR">
							<arco-ce:hasAcknowledgement>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Acknowledgement/', arco-fn:urify(.))" />
								</xsl:attribute>
							</arco-ce:hasAcknowledgement>
						</xsl:for-each>
					</xsl:if>
					<!-- Event location and time -->
					<xsl:for-each select="./PRML[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
						<arco-ce:eventTimeLocation>
							<xsl:value-of select="normalize-space()" />
						</arco-ce:eventTimeLocation>
					</xsl:for-each>
					<!-- Event notes -->
					<xsl:if test="./PRMS">
						<arco-core:note>
							<xsl:value-of select="normalize-space(./PRMS)" />
						</arco-core:note>
					</xsl:if>
				</rdf:Description>
				<!-- Event organizer - Time Indexed Role -->
				<xsl:if test="./PRME[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<xsl:for-each select="./PRME">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
    	                   		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-competiotion-organiser-', position())" />
        	   	       		</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
	                	   	        <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                    	   	</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Organizzatore della competizione: ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Organizzatore della competizione: ', normalize-space(.))" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Organiser of competition: ', normalize-space(.))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Organiser of competion: ', normalize-space(.))" />
							</l0:name>
							<arco-core:hasRole>
								<xsl:attribute name="rdf:resource">
		               	            <xsl:value-of select="concat($NS, 'Role/Organiser')" />
		                   	    </xsl:attribute>
							</arco-core:hasRole>
							<arco-core:hasAgent>
								<xsl:attribute name="rdf:resource">
	       	        	            <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	           	        	    </xsl:attribute>
							</arco-core:hasAgent>
						</rdf:Description>
						<!-- Event organizer - Role -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Role/Organiser')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Organiser'" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Ente/Soggetto organizzatore'" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="'Ente/Soggetto organizzatore'" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="'Organiser'" />
							</l0:name>
						</rdf:Description>
						<!-- Event organizer - Agent -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="arco-fn:name-cleaner(.)" />
							</l0:name>
						</rdf:Description>
					</xsl:for-each>
				</xsl:if>
				<!-- Acknowledgement -->
				<xsl:if	test="./PRMR[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
					<xsl:for-each select="./PRMR">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'Acknowledgement/', arco-fn:urify(.))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/cultural-event/Acknowledgement'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="(.)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="(.)" />
							</l0:name>
							<arco-ce:isAckowledgementReceivedBy>
								<xsl:attribute name="rdf:resource">
        	                        <xsl:value-of select="$culturalProperty" />
            	                </xsl:attribute>
							</arco-ce:isAckowledgementReceivedBy>
						</rdf:Description>
					</xsl:for-each>
				</xsl:if>
			</xsl:for-each>
			<!-- We create the cultural event or the exhibition - norm version 3.00 -->
			<xsl:for-each select="record/metadata/schede/*/DO/MST">
				<xsl:if test="./* and ./MSTT">
					<xsl:variable name="event-uri">
						<xsl:choose>
							<xsl:when test="./MSTL[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
								<xsl:value-of select="arco-fn:arcofy(concat(./MSTT, ./MSTL[1]))" /><!-- TODO -->
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="arco-fn:arcofy(./MSTT)" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'CulturalEvent/', $event-uri)" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'http://dati.beniculturali.it/cis/CulturalEvent'" />
                            </xsl:attribute>
						</rdf:type>
						<cis:involvesCulturalEntity>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="$culturalProperty" />
                            </xsl:attribute>
						</cis:involvesCulturalEntity>
						<!-- Event name -->
						<xsl:if test="./MSTT">
							<l0:name>
								<xsl:value-of select="normalize-space(./MSTT)" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./MSTT)" />
							</rdfs:label>
						</xsl:if>
						<!-- Event organizer -->
						<xsl:if test="(not(starts-with(lower-case(normalize-space(./MSTO)), 'nr')) and not(starts-with(lower-case(normalize-space(./MSTO)), 'n.r')))">
							<xsl:for-each select="./MSTO">
								<roapit:hasRiT>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="concat($NS, 'TimeIndexedRole/', $itemURI, '-', arco-fn:urify(.))" />
                                    </xsl:attribute>
								</roapit:hasRiT>
								<arco-ce:hasEventOrganiser>
									<xsl:attribute name="rdf:resource">
                                        <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                                    </xsl:attribute>
								</arco-ce:hasEventOrganiser>
							</xsl:for-each>
						</xsl:if>
						<!-- Event time -->
						<xsl:if test="./MSTD[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<xsl:for-each select="./MSTD">
								<tiapit:time>
									<xsl:value-of select="normalize-space(.)" />
								</tiapit:time>
							</xsl:for-each>
						</xsl:if>
						<!-- specifications -->
						<xsl:if test="$sheetVersion='3.01_ICCD0' or $sheetVersion='3.01'">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./MSTS)" />
							</arco-core:note>
						</xsl:if>
						<!-- Event location -->
						<xsl:if	test="./MSTL[not(starts-with(lower-case(normalize-space()), 'nr') or starts-with(lower-case(normalize-space()), 'n.r'))]">
							<xsl:for-each select="./MSTL">
								<xsl:choose>
									<xsl:when test="$sheetVersion='3.01_ICCD0' or $sheetVersion='3.01'">
										<arco-ce:eventTimeLocation>
											<xsl:value-of select="normalize-space(.)" />
										</arco-ce:eventTimeLocation>
									</xsl:when>
									<xsl:otherwise>
										<clvapit:hasSpatialCoverage>
											<xsl:attribute name="rdf:resource">
												<xsl:value-of select="concat($NS, 'GeographicalFeature/', arco-fn:arcofy(.))" />
											</xsl:attribute>
										</clvapit:hasSpatialCoverage>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:for-each>
						</xsl:if>
						<!-- Event site -->
						<xsl:if test="(not(starts-with(lower-case(normalize-space(./MSTS)), 'nr')) and not(starts-with(lower-case(normalize-space(./MSTS)), 'n.r')) and not($sheetVersion='3.01_ICCD0') and not($sheetVersion='3.01'))">
							<xsl:for-each select="./MSTS">
								<cis:isHostedBySite>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Site/', arco-fn:arcofy(concat(lower-case(normalize-space(.)), lower-case(normalize-space(../MSTL)))))" />
									</xsl:attribute>
								</cis:isHostedBySite>
							</xsl:for-each>
						</xsl:if>
					</rdf:Description>
					<!-- Event site -->
					<xsl:if test="(not(starts-with(lower-case(normalize-space(./MSTS)), 'nr')) and not(starts-with(lower-case(normalize-space(./MSTS)), 'n.r')) and not($sheetVersion='3.01_ICCD0') and not($sheetVersion='3.01'))">
						<xsl:for-each select="./MSTS">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                <xsl:value-of
									select="concat($NS, 'Site/', arco-fn:arcofy(concat(lower-case(normalize-space(.)), lower-case(normalize-space(../MSTL)))))" />
                            </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                    <xsl:value-of
										select="'http://dati.beniculturali.it/cis/Site'" />
                                </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:for-each>
					</xsl:if>
					<!-- Event organizer - Time Indexed Role -->
					<xsl:if
						test="(not(starts-with(lower-case(normalize-space(./MSTO)), 'nr')) and not(starts-with(lower-case(normalize-space(./MSTO)), 'n.r')))">
						<xsl:for-each select="./MSTO">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                <xsl:value-of
									select="concat($NS, 'TimeIndexedRole/', $itemURI, '-', arco-fn:urify(normalize-space(.)))" />
                            </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                    <xsl:value-of
										select="'https://w3id.org/italia/onto/RO/TimeIndexedRole'" />
                                </xsl:attribute>
								</rdf:type>
								<roapit:withRole>
									<xsl:attribute name="rdf:resource">
                                    <xsl:value-of
										select="concat($NS, 'Role/Organiser')" />
                                </xsl:attribute>
								</roapit:withRole>
								<roapit:isRoleInTimeOf>
									<xsl:attribute name="rdf:resource">
                                    <xsl:value-of
										select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                                </xsl:attribute>
								</roapit:isRoleInTimeOf>
							</rdf:Description>
							<!-- Event organizer - Role -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                <xsl:value-of
									select="concat($NS, 'Role/Organiser')" />
                            </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                    <xsl:value-of
										select="'https://w3id.org/italia/onto/RO/Role'" />
                                </xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of
										select="'Ente/Soggetto organizzatore'" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of
										select="'Ente/Soggetto organizzatore'" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Organiser'" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="'Organiser'" />
								</l0:name>
							</rdf:Description>
							<!-- Event organizer - Agent -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
                                <xsl:value-of
									select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
                            </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                                    <xsl:value-of
										select="'https://w3id.org/italia/onto/l0/Agent'" />
                                </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(.)" />
								</l0:name>
							</rdf:Description>
						</xsl:for-each>
					</xsl:if>
					<!-- Event location -->
					<xsl:for-each select="./MSTL">
						<xsl:if
							test=". and (not(starts-with(lower-case(normalize-space(.)), 'nr')) and not(starts-with(lower-case(normalize-space(.)), 'n.r')))">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	                                <xsl:value-of select="concat($NS, 'GeographicalFeature/', arco-fn:arcofy(.))" />
	                            </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	                                    <xsl:value-of select="'http://dati.beniculturali.it/cis/GeographicalFeature'" />
	                                </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="normalize-space(.)" />
								</rdfs:label>
							</rdf:Description>
						</xsl:if>
					</xsl:for-each>
				</xsl:if>
			</xsl:for-each>

			<!-- The individual typed as RelatedWorkSituation is created here (cf. rule #RWS in cultural-property.xslt). -->
			<xsl:variable name="rez" select="normalize-space(record/metadata/schede/*/RV/REZ)" />
			<xsl:for-each select="record/metadata/schede/*/*/RSE">
				<xsl:if test="./RSEC and not(lower-case(normalize-space(./RSER))='scheda storica')"><!-- e.g.ICCD2284134  -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-related-cultural-property-1-', position())" />
							</xsl:attribute>
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/RelatedWorkSituation" />
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Relazione ', position(), ' tra il bene culturale ', $itemURI, ' e altro bene culturale')" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Relazione ', position(), ' tra il bene culturale ', $itemURI, ' e altro bene culturale')" />
							</l0:name>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and other cultural property')" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and other cultural property')" />
							</l0:name>
							<arco-cd:involvesRelatedWork>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, arco-fn:local-name(arco-fn:getSpecificPropertyType(./RSET)), '/', normalize-space(./RSEC))" />
								</xsl:attribute>
							</arco-cd:involvesRelatedWork>
							<xsl:choose>
							<!-- 
								<xsl:when test="string-length($rses)>0">
									<arco-cd:relatedWorkNote>
										<xsl:value-of select="$rses" />
									</arco-cd:relatedWorkNote>
								</xsl:when>
							 -->
							 	<xsl:when test="string-length($rez)>0">
									<arco-cd:relatedWorkNote>
										<xsl:value-of select="$rez" />
									</arco-cd:relatedWorkNote>
								</xsl:when>
							</xsl:choose>
							<arco-cd:hasRelationshipType>
								<xsl:attribute name="rdf:resource">
									<xsl:choose>
										<xsl:when test="(lower-case(normalize-space(./RSER))='è contenuto in' 
												or lower-case(normalize-space(./RSER))='luogo di collocazione/localizzazione'
												or lower-case(normalize-space(./RSER))='scheda contenitore')">
											<xsl:value-of select="concat($NS, 'RelationshipType/luogo-di-collocazione')" />
										</xsl:when>
										<xsl:when test="(lower-case(normalize-space(./RSER))='era contenuto in' 
												or lower-case(normalize-space(./RSER))='luogo di provenienza'
												or lower-case(normalize-space(./RSER))='sede di provenienza')">
											<xsl:value-of select="concat($NS, 'RelationshipType/sede-di-provenienza')" />
										</xsl:when>
										<xsl:when test="(lower-case(normalize-space(./RSER))='esecuzione/evento di riferimento' 
												or lower-case(normalize-space(./RSER))='è coinvolto in')">
											<xsl:value-of select="concat($NS, 'RelationshipType/esecuzione')" />
										</xsl:when>
										<xsl:when test="(lower-case(normalize-space(./RSER))='sede di realizzazione' 
												or lower-case(normalize-space(./RSER))='è stato realizzato in')">
											<xsl:value-of select="concat($NS, 'RelationshipType/sede-di-realizzazione')" />
										</xsl:when>
										<xsl:when test="(lower-case(normalize-space(./RSER))='bene composto' 
												or lower-case(normalize-space(./RSER))='è compreso in')">
											<xsl:value-of select="concat($NS, 'RelationshipType/riuso')" />
										</xsl:when>
										<xsl:when test="(lower-case(normalize-space(./RSER))='fonte di rappresentazione' 
												or lower-case(normalize-space(./RSER))='è rappresentato in')">
											<xsl:value-of select="concat($NS, 'RelationshipType/fonte-di-rappresentazione')" />
										</xsl:when>
										<xsl:when test="(lower-case(normalize-space(./RSER))='relazione urbanistico ambientale' 
												or lower-case(normalize-space(./RSER))='è in relazione urbanistico - ambientale con')">
											<xsl:value-of select="concat($NS, 'RelationshipType/relazione-urbanistico-ambientale')" />
										</xsl:when>
										<xsl:when test="(lower-case(normalize-space(./RSER))='sede di rinvenimento' 
												or lower-case(normalize-space(./RSER))='è stato rinvenuto in')">
											<xsl:value-of select="concat($NS, 'RelationshipType/sede-di-rinvenimento')" />
										</xsl:when>
									</xsl:choose>									
								</xsl:attribute>
							</arco-cd:hasRelationshipType>
						</rdf:Description>
						<!-- relationship type -->
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/luogo-di-collocazione')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="'Luogo di collocazione'" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="'Luogo di collocazione'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/sede-di-provenienza')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="'Luogo di provenienza'" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="'Luogo di provenienza'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/esecuzione')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="'Luogo di esecuzione'" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="'Luogo di esecuzione'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/sede-di-realizzazione')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="'Sede di realizzazione'" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="'Sede di realizzazione'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/riuso')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="'Riuso'" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="'Riuso'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/fonte-di-rappresentazione')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="'Fonte di rappresentazione'" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="'Fonte di rappresentazione'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/relazione-urbanistico-ambientale')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="'Relazione urbanistico ambientale'" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="'Relazione urbanistico ambientale'" />
							</rdfs:label>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'RelationshipType/sede-di-rinvenimento')" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RelationshipType'" />
	                       		</xsl:attribute>
							</rdf:type>
							<l0:name>
								<xsl:value-of select="'Sede di rinvenimento'" />
							</l0:name>
							<rdfs:label>
								<xsl:value-of select="'Sede di rinvenimento'" />
							</rdfs:label>
						</rdf:Description>
					</xsl:if>							
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/RV/ROZ">
				<xsl:variable name="rel-work" select="arco-fn:related-property(normalize-space(.), '')" />
				<xsl:if test="count($rel-work) > 0">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-related-cultural-property-2-', position())" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/RelatedWorkSituation" />
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Relazione ', position(), ' tra il bene culturale ', $itemURI, ' e altro bene culturale')" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Relazione ', position(), ' tra il bene culturale ', $itemURI, ' e altro bene culturale')" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and other cultural property')" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Relation ', position(), ' between the cultural property ', $itemURI, ' and other cultural property')" />
						</l0:name>
						<arco-cd:isRelatedWorkSituationOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$culturalProperty" />
							</xsl:attribute>
						</arco-cd:isRelatedWorkSituationOf>
						<xsl:for-each select="$rel-work">
							<arco-cd:involvesRelatedWork>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="." />
								</xsl:attribute>
							</arco-cd:involvesRelatedWork>
						</xsl:for-each>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="$culturalProperty" />
						</xsl:attribute>
						<arco-cd:hasRelatedWorkSituation>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'RelatedWorkSituation/', $itemURI, '-related-cultural-property-2-', position())" />
							</xsl:attribute>
						</arco-cd:hasRelatedWorkSituation>
					</rdf:Description>
				</xsl:if>
			</xsl:for-each>
			<xsl:for-each select="record/metadata/schede/*/MT/MIS">
				<rdf:Description>
					<xsl:variable name="measurement-collection">
						<xsl:choose>
							<xsl:when test="($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00') and ./MISP">
								<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI, '-', arco-fn:urify(normalize-space(./MISP)))" />
							</xsl:when>
							<xsl:when test="($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00') and not(./MISP)">
								<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI)" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI, '-', position())" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="$measurement-collection" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/MeasurementCollection" />
					<rdfs:label xml:lang="en">
						<xsl:choose>
							<xsl:when test="($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00') and ./MISP">
								<xsl:value-of select="concat('Measurements of cultural property ', $itemURI, ' ', normalize-space(./MISP))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:choose>
							<xsl:when test="($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00') and ./MISP">
								<xsl:value-of select="concat('Measurements of cultural property ', $itemURI, ' ', normalize-space(./MISP))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:choose>
							<xsl:when test="($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00') and ./MISP">
								<xsl:value-of select="concat('Misure del bene culturale ', $itemURI, ' ', normalize-space(./MISP))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:choose>
							<xsl:when test="($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00') and ./MISP">
								<xsl:value-of select="concat('Misure del bene culturale ', $itemURI, ' ', normalize-space(./MISP))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
							</xsl:otherwise>
						</xsl:choose>
					</l0:name>
					<xsl:if test="./MISV and not($sheetType='VeAC')">
						<arco-core:note>
							<xsl:value-of select="normalize-space(string-join(./MISV, ', '))" /><!-- multiple values eg:ICCD11937406  -->
						</arco-core:note>
					</xsl:if>
					<xsl:choose>
						<xsl:when test="not($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00')">
							<xsl:if test="./MISV and $sheetType='VeAC'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-waist-circumference')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISF and $sheetType='VeAC'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-hip-circumference')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISF and not ($sheetType='VeAC')">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-area')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISO and $sheetType='VeAC'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-edge-circumference')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISL">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-width')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISD and not($sheetType='VeAC')">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-diameter')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISD and $sheetType='VeAC'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-back-total-length')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISS and not($sheetType='VeAC')">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-thickness')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISS and $sheetType='VeAC'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-back-width')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISA">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-height')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISP and not($sheetType='VeAC')">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-depth')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISP and $sheetType='VeAC'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-chest-circumference')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISG">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-weight')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISH">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-duration')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISB and $sheetType='OAC'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-file-size')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISB and $sheetType='PST'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-storage-capacity')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISI and not($sheetType='BDM')">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-size')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISI and ($sheetType='BDM')">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-perimeter')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISN">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-length')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISR and $sheetType='VeAC'">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-front-total-length')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISC">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-capacity')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
							<xsl:if test="./MISW">
								<arco-dd:hasMeasurement>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-power')" />
									</xsl:attribute>
								</arco-dd:hasMeasurement>
							</xsl:if>
						</xsl:when>
						<xsl:otherwise>
							<arco-dd:hasMeasurement>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-', arco-fn:uncamelize(arco-fn:map-measure(lower-case(./MISZ))))" />
								</xsl:attribute>
							</arco-dd:hasMeasurement>
						</xsl:otherwise>
					</xsl:choose>
				</rdf:Description>
				<xsl:variable name="parent-id" select="position()" />
				<xsl:for-each select="./*">
					<xsl:variable name="tag-name" select="name(.)" />
					<xsl:variable name="measurement-type">
						<xsl:choose>
							<xsl:when test="not($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00')">
								<xsl:choose>
									<xsl:when test="$tag-name='MISV' and $sheetType='VeAC'">
										<xsl:value-of select="'WaistCircumference'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISF'and $sheetType='VeAC'">
										<xsl:value-of select="'HipCircumference'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISF'and not ($sheetType='VeAC')">
										<xsl:value-of select="'Area'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISO' and $sheetType='VeAC'">
										<xsl:value-of select="'EdgeCircumference'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISL'">
										<xsl:value-of select="'Width'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISD' and not($sheetType='VeAC')">
										<xsl:value-of select="'Diameter'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISD' and $sheetType='VeAC'">
										<xsl:value-of select="'BackTotalLength'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISA'">
										<xsl:value-of select="'Height'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISP' and not($sheetType='VeAC')">
										<xsl:value-of select="'Depth'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISP' and $sheetType='VeAC'">
										<xsl:value-of select="'ChestCircumference'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISS' and not($sheetType='VeAC')">
										<xsl:value-of select="'Thickness'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISS' and $sheetType='VeAC'">
										<xsl:value-of select="'BackWidth'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISG'">
										<xsl:value-of select="'Weight'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISH'">
										<xsl:value-of select="'Duration'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISB' and $sheetType='OAC'">
										<xsl:value-of select="'FileSize'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISB' and $sheetType='PST'">
										<xsl:value-of select="'StorageCapacity'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISI' and not($sheetType='BDM')">
										<xsl:value-of select="'Size'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISI' and ($sheetType='BDM')">
										<xsl:value-of select="'Perimeter'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISR'">
										<xsl:if test="$sheetType='VeAC'">
											<xsl:value-of select="'FrontTotalLength'" />
										</xsl:if>
									</xsl:when>
									<xsl:when test="$tag-name='MISN'">
										<xsl:value-of select="'Length'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISC'">
										<xsl:value-of select="'Capacity'" />
									</xsl:when>
									<xsl:when test="$tag-name='MISW'">
										<xsl:value-of select="'Power'" />
									</xsl:when>
								</xsl:choose>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="arco-fn:map-measure(lower-case(../MISZ))" />
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:if test="$measurement-type != ''">
						<rdf:Description>
							<xsl:attribute name="rdf:about" select="concat($NS, 'Measurement/', $itemURI, '-', $parent-id, '-', arco-fn:uncamelize($measurement-type))" />
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/Measurement" />
							<xsl:variable name="mu-value">
								<xsl:choose>
									<xsl:when test="not($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00')">
										<xsl:choose>
											<xsl:when test="$tag-name='MISV' and $sheetType='VeAC'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISF'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISO' and $sheetType='VeAC'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISL'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISD'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISA'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISP'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISG'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISH'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISB'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISI'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISN'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISS'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISR'">
												<xsl:if test="$sheetType='VeAC'">
												<xsl:value-of select="normalize-space(.)" />
												</xsl:if>
											</xsl:when>
											<xsl:when test="$tag-name='MISC'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISW'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
										</xsl:choose>
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="normalize-space(../MISM)" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:variable>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Measurement of cultural property ', $itemURI, ': ', $mu-value, ' ', normalize-space(../MISU))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Measurement of cultural property ', $itemURI, ': ', $mu-value, ' ',  normalize-space(../MISU))" />
							</l0:name>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Misura del bene culturale ', $itemURI, ': ', $mu-value, ' ',  normalize-space(../MISU))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Misura del bene culturale ', $itemURI, ': ', $mu-value, ' ',  normalize-space(../MISU))" />
							</l0:name>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource" select="concat('https://w3id.org/arco/ontology/denotative-description/', $measurement-type)" />
							</arco-core:hasType>
							<arco-dd:hasValue>
								<xsl:choose>
									<xsl:when test="not($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00')">
										<xsl:variable name="mu-value">
											<xsl:choose>
												<xsl:when test="$tag-name='MISV' and $sheetType='VeAC'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISF'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISO' and $sheetType='VeAC'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISL'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISD'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISA'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISP'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISG'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISH'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISB'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISI'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISN'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISS'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISR'">
													<xsl:if test="$sheetType='VeAC'">
													<xsl:value-of select="normalize-space(.)" />
													</xsl:if>
												</xsl:when>
												<xsl:when test="$tag-name='MISC'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
												<xsl:when test="$tag-name='MISW'">
													<xsl:value-of select="normalize-space(.)" />
												</xsl:when>
											</xsl:choose>
										</xsl:variable>
										<xsl:attribute name="rdf:resource" select="concat($NS, 'Value/', arco-fn:urify($mu-value))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:attribute name="rdf:resource" select="concat($NS, 'Value/', arco-fn:urify(normalize-space(../MISM)))" />
									</xsl:otherwise>
								</xsl:choose>
							</arco-dd:hasValue>
							<xsl:choose>
								<xsl:when test="../MISU">
									<mu:hasMeasurementUnit>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'MeasurementUnit/', arco-fn:urify(normalize-space(../MISU)))" />
										</xsl:attribute>
									</mu:hasMeasurementUnit>
								</xsl:when>
								<xsl:when test="$sheetType='VeAC'">
									<mu:hasMeasurementUnit>
										<xsl:attribute name="rdf:resource">
											<xsl:value-of select="concat($NS, 'MeasurementUnit/cm')" />
										</xsl:attribute>
									</mu:hasMeasurementUnit>
								</xsl:when>
							</xsl:choose>
						</rdf:Description>
						<rdf:Description>
							<xsl:variable name="mu-value">
								<xsl:choose>
									<xsl:when test="not($sheetVersion='4.00_ICCD0' or $sheetVersion='4.00')">
										<xsl:choose>
											<xsl:when test="$tag-name='MISV' and $sheetType='VeAC'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISF'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISO' and $sheetType='VeAC'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISL'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISD'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISA'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISP'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISG'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISH'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISB'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISI'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISN'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISS'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISR'">
												<xsl:if test="$sheetType='VeAC'">
												<xsl:value-of select="normalize-space(.)" />
												</xsl:if>
											</xsl:when>
											<xsl:when test="$tag-name='MISC'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
											<xsl:when test="$tag-name='MISW'">
												<xsl:value-of select="normalize-space(.)" />
											</xsl:when>
										</xsl:choose>
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="normalize-space(../MISM)" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:variable>
							<xsl:attribute name="rdf:about" select="concat($NS, 'Value/', arco-fn:urify($mu-value))" />
							<rdf:type rdf:resource="https://w3id.org/italia/onto/MU/Value" />
							<mu:value>
								<xsl:value-of select="$mu-value" />
							</mu:value>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="$mu-value" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="$mu-value" />
							</rdfs:label>
						</rdf:Description>
						<xsl:if test="../MISU">
							<rdf:Description>
								<xsl:attribute name="rdf:about" select="concat($NS, 'MeasurementUnit/', arco-fn:urify(normalize-space(../MISU)))" />
								<rdf:type rdf:resource="https://w3id.org/italia/onto/MU/MeasurementUnit" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(../MISU)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(../MISU)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
				</xsl:for-each>
			</xsl:for-each>
			<!-- measurement collection for PG -->
			<xsl:if test="record/metadata/schede/PG/CA/HAT">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI)" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/MeasurementCollection" />
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
					</l0:name>
					<arco-dd:hasMeasurement>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-area')" />
						</xsl:attribute>
					</arco-dd:hasMeasurement>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-area')" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
        	       			<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Measurement'" />
            	   		</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Measurement of ', $itemURI, ': ', normalize-space(record/metadata/schede/PG/CA/HAT))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Measurement of ', $itemURI, ': ', normalize-space(record/metadata/schede/PG/CA/HAT))" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Misura del bene ', $itemURI, ': ', normalize-space(record/metadata/schede/PG/CA/HAT))" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Misura del bene ', $itemURI, ': ', normalize-space(record/metadata/schede/PG/CA/HAT))" />
					</l0:name>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource" select="concat('https://w3id.org/arco/ontology/denotative-description/', 'Area')" />
					</arco-core:hasType>
					<arco-dd:hasValue>
						<xsl:attribute name="rdf:resource" select="concat($NS, 'Value/', arco-fn:urify(record/metadata/schede/PG/CA/HAT))" />
					</arco-dd:hasValue>
					<mu:hasMeasurementUnit>
						<xsl:attribute name="rdf:resource" select="concat($NS, 'MeasurementUnit/ha')" />
					</mu:hasMeasurementUnit>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about" select="concat($NS, 'Value/', arco-fn:urify(record/metadata/schede/PG/CA/HAT))" />
					<rdf:type rdf:resource="https://w3id.org/italia/onto/MU/Value" />
					<rdfs:label>
						<xsl:value-of select="record/metadata/schede/PG/CA/HAT" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="record/metadata/schede/PG/CA/HAT" />
					</l0:name>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about" select="concat($NS, 'MeasurementUnit/ha')" />
					<rdf:type rdf:resource="https://w3id.org/italia/onto/MU/MeasurementUnit" />
					<rdfs:label>
						<xsl:value-of select="'ha'" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="'ha'" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- support for S -->
			<xsl:for-each select="record/metadata/schede/MI/MT/MIF">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Support/', $itemURI, '-', position())" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/Support" />
					<rdfs:label xml:lang="en">
	   					<xsl:value-of select="concat('Support ', position(), ' of cultural property: ', $itemURI)" />
		   			</rdfs:label>
		   			<rdfs:label xml:lang="it">
	   					<xsl:value-of select="concat('Supporto ', position(), ' del bene culturale: ', $itemURI)" />
			   		</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Support ', position(), ' of cultural property: ', $itemURI)" />
	   				</l0:name >
	   				<l0:name xml:lang="it">
						<xsl:value-of select="concat('Supporto ', position(), ' del bene culturale: ', $itemURI)" />
		   			</l0:name >
		   			<arco-dd:hasMeasurementCollection>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI, '-', position())" />
						</xsl:attribute>
					</arco-dd:hasMeasurementCollection>
				</rdf:Description>
				<rdf:Description>
					<xsl:variable name="measurement-collection">
						<xsl:value-of select="concat($NS, 'MeasurementCollection/', $itemURI, '-', position())" />
					</xsl:variable>
					<xsl:attribute name="rdf:about">
								<xsl:value-of select="$measurement-collection" />
							</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/MeasurementCollection" />
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Measurements of cultural property ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Misure del bene culturale ', $itemURI)" />
					</l0:name>
					<xsl:if test="./MIFL">
						<arco-dd:hasMeasurement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-width')" />
							</xsl:attribute>
						</arco-dd:hasMeasurement>
					</xsl:if>
					<xsl:if test="./MIFD">
						<arco-dd:hasMeasurement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-diameter')" />
							</xsl:attribute>
						</arco-dd:hasMeasurement>
					</xsl:if>
					<xsl:if test="./MIFA">
						<arco-dd:hasMeasurement>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Measurement/', $itemURI, '-', position(), '-height')" />
							</xsl:attribute>
						</arco-dd:hasMeasurement>
					</xsl:if>
				</rdf:Description>
				<xsl:variable name="parent-id" select="position()" />
				<xsl:for-each select="./*">
					<xsl:variable name="tag-name" select="name(.)" />
					<xsl:variable name="measurement-type">
						<xsl:choose>
							<xsl:when test="$tag-name='MIFL'">
								<xsl:value-of select="'Width'" />
							</xsl:when>
							<xsl:when test="$tag-name='MIFD'">
								<xsl:value-of select="'Diameter'" />
							</xsl:when>
							<xsl:when test="$tag-name='MIFA'">
								<xsl:value-of select="'Height'" />
							</xsl:when>
						</xsl:choose>
					</xsl:variable>
					<xsl:if test="$measurement-type != ''">
						<rdf:Description>
							<xsl:attribute name="rdf:about" select="concat($NS, 'Measurement/', $itemURI, '-', $parent-id, '-', arco-fn:uncamelize($measurement-type))" />
							<rdf:type rdf:resource="https://w3id.org/arco/ontology/denotative-description/Measurement" />
							<xsl:variable name="mu-value">
								<xsl:choose>
									<xsl:when test="$tag-name='MIFL'">
										<xsl:value-of select="normalize-space(.)" />
									</xsl:when>
									<xsl:when test="$tag-name='MIFD'">
										<xsl:value-of select="normalize-space(.)" />
									</xsl:when>
									<xsl:when test="$tag-name='MIFA'">
										<xsl:value-of select="normalize-space(.)" />
									</xsl:when>
								</xsl:choose>
							</xsl:variable>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="concat('Measurement of cultural property ', $itemURI, ': ', $mu-value, normalize-space(../MIFU))" />
							</rdfs:label>
							<l0:name xml:lang="en">
								<xsl:value-of select="concat('Measurement of cultural property ', $itemURI, ': ', $mu-value, normalize-space(../MIFU))" />
							</l0:name>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="concat('Misura del bene culturale ', $itemURI, ': ', $mu-value, normalize-space(../MIFU))" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="concat('Misura del bene culturale ', $itemURI, ': ', $mu-value, normalize-space(../MIFU))" />
							</l0:name>
							<arco-core:hasType>
								<xsl:attribute name="rdf:resource" select="concat('https://w3id.org/arco/ontology/denotative-description/', $measurement-type)" />
							</arco-core:hasType>
							<arco-dd:hasValue>
								<xsl:variable name="mu-value">
									<xsl:choose>
										<xsl:when test="$tag-name='MIFL'">
											<xsl:value-of select="normalize-space(.)" />
										</xsl:when>
										<xsl:when test="$tag-name='MIFD'">
											<xsl:value-of select="normalize-space(.)" />
										</xsl:when>
										<xsl:when test="$tag-name='MIFA'">
											<xsl:value-of select="normalize-space(.)" />
										</xsl:when>
									</xsl:choose>
								</xsl:variable>
								<xsl:attribute name="rdf:resource" select="concat($NS, 'Value/', arco-fn:urify($mu-value))" />
							</arco-dd:hasValue>
							<xsl:if test="../MIFU">
								<mu:hasMeasurementUnit>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'MeasurementUnit/', arco-fn:urify(normalize-space(../MIFU)))" />
									</xsl:attribute>
								</mu:hasMeasurementUnit>
							</xsl:if>
						</rdf:Description>
						<rdf:Description>
							<xsl:variable name="mu-value">
								<xsl:choose>
									<xsl:when test="$tag-name='MIFL'">
										<xsl:value-of select="normalize-space(.)" />
									</xsl:when>
									<xsl:when test="$tag-name='MIFD'">
										<xsl:value-of select="normalize-space(.)" />
									</xsl:when>
									<xsl:when test="$tag-name='MIFA'">
										<xsl:value-of select="normalize-space(.)" />
									</xsl:when>
								</xsl:choose>
							</xsl:variable>
							<xsl:attribute name="rdf:about" select="concat($NS, 'Value/', arco-fn:urify($mu-value))" />
							<rdf:type rdf:resource="https://w3id.org/italia/onto/MU/Value" />
							<mu:value>
								<xsl:value-of select="$mu-value" />
							</mu:value>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="$mu-value" />
							</rdfs:label>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="$mu-value" />
							</rdfs:label>
						</rdf:Description>
						<xsl:if test="../MIFU">
							<rdf:Description>
								<xsl:attribute name="rdf:about" select="concat($NS, 'MeasurementUnit/', arco-fn:urify(normalize-space(../MIFU)))" />
								<rdf:type rdf:resource="https://w3id.org/italia/onto/MU/MeasurementUnit" />
								<rdfs:label>
									<xsl:value-of select="normalize-space(../MIFU)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(../MIFU)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
				</xsl:for-each>
			</xsl:for-each>

			<!-- Printing Plates Series -->
			<xsl:if test="$sheetType='MI'">
				<xsl:if test="record/metadata/schede/*/OG/SGT/SGTS">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'PrintingPlatesSeriesMembership/', $itemURI)" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CollectionMembership'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a serie di matrici incise del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a serie di matrici incise del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Printing plates series membership of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Printing plates series membership of cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:involvesCollection>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'PrintingPlatesSeries/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/MI/OG/SGT/SGTS)))" />
							</xsl:attribute>
						</arco-cd:involvesCollection>
						<arco-cd-involvesMember>
							<xsl:attribute name="rdf:resource">
                        		<xsl:value-of select="$culturalProperty" />
                        	</xsl:attribute>
						</arco-cd-involvesMember>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'PrintingPlatesSeries/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/MI/OG/SGT/SGTS)))" />
						</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/PrintingPlatesSeries" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/SGT/SGTS)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/SGT/SGTS)" />
						</l0:name>
						<arco-lite:hasCollectionMember>
							<xsl:attribute name="rdf:resource">
                        		<xsl:value-of select="$culturalProperty" />
                        	</xsl:attribute>
						</arco-lite:hasCollectionMember>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- Collection for S -->
			<xsl:if test="$sheetType='S'">
				<xsl:if test="record/metadata/schede/*/OG/SGT/SGTS">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'CollectionMembership/Print', $itemURI)" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CollectionMembership'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a serie del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a serie del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Collection membership of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Collection membership of cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:involvesCollection>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'PrintCollection/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/MI/OG/SGT/SGTS)))" />
							</xsl:attribute>
						</arco-cd:involvesCollection>
						<arco-cd-involvesMember>
							<xsl:attribute name="rdf:resource">
                        		<xsl:value-of select="$culturalProperty" />
                        	</xsl:attribute>
						</arco-cd-involvesMember>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'PrintCollection/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/MI/OG/SGT/SGTS)))" />
						</xsl:attribute>
						<rdf:type rdf:resource="http://dati.beniculturali.it/cis/CollectionCultEnt" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/SGT/SGTS)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OG/SGT/SGTS)" />
						</l0:name>
						<arco-lite:hasCollectionMember>
							<xsl:attribute name="rdf:resource">
                        		<xsl:value-of select="$culturalProperty" />
                        	</xsl:attribute>
						</arco-lite:hasCollectionMember>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- Numismatic property member -->
			<xsl:if test="record/metadata/schede/NU/OG/OGT/OGTR">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'NumismaticSeriesMembership/', $itemURI)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CollectionMembership'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Appartenenza a serie numismatica del bene: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Appartenenza a serie numismatica del bene: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Numismatic series membership of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Numismatic series membership of cultural property: ', $itemURI)" />
					</l0:name>
					<arco-cd:involvesCollection>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'NumismaticSeries/', arco-fn:urify(normalize-space(record/metadata/schede/NU/OG/OGT/OGTR)))" />
						</xsl:attribute>
					</arco-cd:involvesCollection>
					<arco-cd:involvesMember>
							<xsl:attribute name="rdf:resource">
                        		<xsl:value-of select="$culturalProperty" />
                        	</xsl:attribute>
						</arco-cd:involvesMember>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'NumismaticSeries/', arco-fn:urify(normalize-space(record/metadata/schede/NU/OG/OGT/OGTR)))" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/NumismaticSeries" />
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTR)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/NU/OG/OGT/OGTR)" />
					</l0:name>
					<arco-lite:hasCollectionMember>
						<xsl:attribute name="rdf:resource">
                        	<xsl:value-of select="$culturalProperty" />
                       	</xsl:attribute>
					</arco-lite:hasCollectionMember>
				</rdf:Description>
			</xsl:if>
							<!-- Cataloguing level as individual -->
			<xsl:for-each select="record/metadata/schede/*/CD/LIR">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat('https://w3id.org/arco/ontology/catalogue/', upper-case(arco-fn:urify(.)))" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/catalogue/CataloguingLevel" />
					<rdfs:label>
						<xsl:value-of select="normalize-space(.)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(.)" />
					</l0:name>
				</rdf:Description>
			</xsl:for-each>
		
							
		
				
					<!-- Deprecated URI -->
			<xsl:if test="record/metadata/schede/harvesting/idContenitoreFisico">
				<xsl:variable name="CF" select="record/metadata/schede/harvesting/idContenitoreFisico" />
							<xsl:variable name="idCF">
								<xsl:value-of select="arco-fn:find-cf($CF)"/>
							</xsl:variable>			
							<xsl:variable name="idCFisico">
								<xsl:choose>
						   			<xsl:when test="$idCF and contains($idCF, 'DBunico')">
   										<xsl:value-of select="substring-after($idCF, 'DBunico')"/>
						   			</xsl:when>
						   			<xsl:otherwise>
						   				<xsl:value-of select="$idCF"/>
						   			</xsl:otherwise>
						   		</xsl:choose>
 							</xsl:variable>
							<xsl:variable name="contenitoreFisico" select="concat('http://dati.beniculturali.it/iccd/cf/resource/CulturalInstituteOrSite/', $idCFisico)" />							
			<xsl:if test="record/metadata/schede/*/LC/LDC/*">
						<xsl:variable name="site">
							<xsl:choose>
								<xsl:when
									test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
									<xsl:value-of
										select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)))))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:choose>
										<xsl:when test="record/metadata/schede/*/LC/LDC/LDCK">
											<xsl:value-of
												select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCK)))))" />
										</xsl:when>
										<xsl:when
											test="record/metadata/schede/*/LC/LDC/LDCN and starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'nr') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '-') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(*)') and starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(?)') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '(denominazione assente)') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '?') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '.') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '590977') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), '63904') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'non id.') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'non identificabile') or starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCN)), 'n.r')">
											<xsl:value-of
												select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCT)))))" />
										</xsl:when>
										<xsl:otherwise>
											<xsl:value-of
												select="concat($NS, 'Site/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCU)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
										</xsl:otherwise>
									</xsl:choose>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:variable>
						
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="$site" />
					</xsl:attribute>
					<owl:deprecated rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:deprecated>
					<owl:sameAs>
						<xsl:attribute name="rdf:resource">
                              <xsl:value-of select="$contenitoreFisico" />
                        </xsl:attribute>
					</owl:sameAs>
				</rdf:Description>
			</xsl:if>
			</xsl:if>
			
			<xsl:if test="not ($sheetType='F' and ($sheetVersion='3.00' or $sheetVersion='3.00_ICCD0' or $sheetVersion='2.00' or $sheetVersion='2.00_ICCD0' or $sheetVersion='1.00' or $sheetVersion='1.00_ICCD0'))">
			<xsl:for-each select="record/metadata/schede/*/AU/AUT">
			<xsl:if test="./AUTN and (not(starts-with(lower-case(normalize-space(./AUTN)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTN)), 'n.r')) and not(starts-with(lower-case(normalize-space(./AUTN)), '-')))">
				<xsl:if test="./AUTA and (not(starts-with(lower-case(normalize-space(./AUTA)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTA)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUTN))" />
					</xsl:attribute>
					<owl:deprecated rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:deprecated>
				</rdf:Description>
				</xsl:if>
				<xsl:if test="./AUTB and (not(starts-with(lower-case(normalize-space(./AUTB)), 'nr')) and not(starts-with(lower-case(normalize-space(./AUTB)), 'n.r')))">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./AUTN))" />
						</xsl:attribute>
						<owl:deprecated rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:deprecated>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			</xsl:for-each>
			</xsl:if>
			
			
			<xsl:if test="record/metadata/schede/*/LC/LDC/LDCM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
								<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)))))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:choose>	
									<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
									</xsl:when>
									<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
									</xsl:when>
								</xsl:choose>				
							</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute>
					<owl:deprecated rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:deprecated>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/harvesting/idContenitoreGiuridico">
			<xsl:if test="record/metadata/schede/*/LC/LDC/LDCM and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/LC/LDC/LDCM)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/LC/PVC/PVCS and not(lower-case(normalize-space(record/metadata/schede/*/LC/PVC/PVCS))='italia')">
								<xsl:choose>	
									<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
									</xsl:when>
									<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCC)))))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCS)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCE)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
									</xsl:otherwise>
								</xsl:choose>
							</xsl:when>
							<xsl:otherwise>
								<xsl:choose>	
									<xsl:when test="record/metadata/schede/*/LC/LDC/LDCN">
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCN)))))" />
									</xsl:when>
									<xsl:when test="record/metadata/schede/*/LC/LDC/LDCC">
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCC)))))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CulturalInstituteOrSite/', arco-fn:arcofy(concat(normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCP)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCC)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCF)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCL)), normalize-space(lower-case(record/metadata/schede/*/LC/PVC/PVCI)), normalize-space(lower-case(record/metadata/schede/*/LC/LDC/LDCM)))))" />
									</xsl:otherwise>
								</xsl:choose>								
							</xsl:otherwise>
						</xsl:choose>
					</xsl:attribute>
					<owl:deprecated rdf:datatype="http://www.w3.org/2001/XMLSchema#boolean">true</owl:deprecated>
				</rdf:Description>
			</xsl:if>
			</xsl:if>
			<!-- Sample Collected (CMN) -->
			<xsl:for-each select="record/metadata/schede/*/MC/CMN">
			<rdf:Description>
				<xsl:attribute name="rdf:about">
					<xsl:value-of select="concat($NS, 'Sample/', $itemURI, '-', arco-fn:urify(normalize-space(./CMND)))" />
				</xsl:attribute>
				<rdf:type>
					<xsl:attribute name="rdf:resource">
			        	<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Sample'" />
					</xsl:attribute>
				</rdf:type>
				<rdfs:label>
					<xsl:value-of select="normalize-space(./CMND)" />
				</rdfs:label>
				<l0:name>
					<xsl:value-of select="normalize-space(./CMND)" />
				</l0:name>
				<xsl:if test="./CMNT">
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
		        			<xsl:value-of 	select="concat($NS, 'SampleType/', arco-fn:urify(./CMNT))" />
						</xsl:attribute>
					</arco-core:hasType>
				</xsl:if>						
				<xsl:if test="./CMNN">
					<arco-lite:localIdentifier>
		        			<xsl:value-of 	select="./CMNN" />
					</arco-lite:localIdentifier>
					<arco-core:hasIdentifier>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'SampleIdentifier/', $itemURI, arco-fn:arcofy(./CMNN))" />
						</xsl:attribute>
					</arco-core:hasIdentifier>
				</xsl:if>
				<xsl:if test="./CMNP">
					<arco-dd:positionOnCulturalProperty>
		        		<xsl:value-of 	select="./CMNP" />
					</arco-dd:positionOnCulturalProperty>
				</xsl:if>
			</rdf:Description>
			<!-- identifier -->
			<xsl:if test="./CMNN">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'SampleIdentifier/', $itemURI, arco-fn:arcofy(./CMNN))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/core/Identifier'" />
		                </xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
			                <xsl:value-of select="'https://w3id.org/arco/ontology/core/LocalIdentifier'" />
				        </xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="normalize-space(./CMNN)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(./CMNN)" />
					</l0:name>
					<arco-core:identifier>
						<xsl:value-of select="normalize-space(./CMNN)" />
					</arco-core:identifier>
					<arco-core:current>
						<xsl:value-of select="true()" />
					</arco-core:current>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="./CMNT">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
        		       	<xsl:value-of 	select="concat($NS, 'SampleType/', arco-fn:urify(./CMNT))" />
                	</xsl:attribute>
		            <rdf:type>
						<xsl:attribute name="rdf:resource">
	    		        	<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/SampleType'" />
						</xsl:attribute>
					</rdf:type>   
					<rdfs:label>
						<xsl:value-of select="./CMNT" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="./CMNT" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			</xsl:for-each>
			<!-- accessory -->
			<xsl:if test="record/metadata/schede/PST/OG/OGT/OGTA">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
       			       	<xsl:value-of select="concat($NS, 'Accessory/', $itemURI, '-', arco-fn:urify(normalize-space(record/metadata/schede/PST/OG/OGT/OGTA)))" />
			    	</xsl:attribute>
        		    <rdf:type>
						<xsl:attribute name="rdf:resource">
    		        		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Accessory'" />
						</xsl:attribute>
					</rdf:type>   
					<rdfs:label>
						<xsl:value-of select="record/metadata/schede/PST/OG/OGT/OGTA" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="record/metadata/schede/PST/OG/OGT/OGTA" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- accessory -->
			<xsl:for-each select="record/metadata/schede/*/AS/ASS" >
				<xsl:if test="./ASST">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
        			       	<xsl:value-of select="concat($NS, 'Accessory/', $itemURI, '-', arco-fn:urify(normalize-space(./ASST)))" />
            	    	</xsl:attribute>
		        	    <rdf:type>
							<xsl:attribute name="rdf:resource">
	    		        		<xsl:value-of select="'https://w3id.org/arco/ontology/denotative-description/Accessory'" />
							</xsl:attribute>
						</rdf:type>   
						<rdfs:label>
							<xsl:value-of select="./ASST" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="./ASST" />
						</l0:name>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AccessoryType/', arco-fn:urify(./ASST))" />
							</xsl:attribute>
						</arco-core:hasType>
						<xsl:if test="./ASSD">
							<arco-lite:hasRealizationDate>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ASSD)))" />
								</xsl:attribute>
							</arco-lite:hasRealizationDate>
							<arco-core:isInvolvedIn>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'Event/Accessory', $itemURI, '-creation')" />
								</xsl:attribute>
							</arco-core:isInvolvedIn>
						</xsl:if>
						<xsl:if test="./ASSE">
							<arco-core:description>
								<xsl:value-of select="normalize-space(./ASSE)" />
							</arco-core:description>
						</xsl:if>
					</rdf:Description>
					<!-- accessory type -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
        	        		<xsl:value-of select="concat($NS, 'AccessoryType/', arco-fn:urify(./ASST))" />
            	   		</xsl:attribute>
						<rdf:type rdf:resource="https://w3id.org/arco/ontology/context-description/AccessoryType" />
						<rdfs:label>
							<xsl:value-of select="normalize-space(./ASST)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(./ASST)" />
						</l0:name>
					</rdf:Description>
					<!-- Event as individual -->
					<xsl:if test="./ASSD">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
                        		<xsl:value-of select="concat($NS, 'Event/Accessory', $itemURI, '-creation')" />
                        	</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                		            <xsl:value-of select="'https://w3id.org/arco/ontology/core/EventOrSituationInTime'" />
                        		</xsl:attribute>
							</rdf:type>
							<rdfs:label xml:lang="it">
								<xsl:value-of select="'Realizzazione'" />
							</rdfs:label>
							<rdfs:label xml:lang="en">
								<xsl:value-of select="'Realization'" />
							</rdfs:label>
							<l0:name xml:lang="it">
								<xsl:value-of select="'Realizzazione'" />
							</l0:name>
							<l0:name xml:lang="en">
								<xsl:value-of select="'Realization'" />
							</l0:name>
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ASSD)))" />
                            	</xsl:attribute>
							</tiapit:atTime>
						</rdf:Description>
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./ASSD)))" />
							</xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
									<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<rdfs:label>
								<xsl:value-of select="normalize-space(./ASSD)" />
							</rdfs:label>
							<l0:name>
								<xsl:value-of select="normalize-space(./ASSD)" />
							</l0:name>
							<arco-arco:startTime>
								<xsl:value-of select="normalize-space(./ASSD)" />
							</arco-arco:startTime>
							<arco-arco:endTime>
								<xsl:value-of select="normalize-space(./ASSD)" />
							</arco-arco:endTime>
						</rdf:Description>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- collection membership -->
			<xsl:for-each select="record/metadata/schede/*/UB/COL">
				<xsl:if test="./*">
					<xsl:variable name="collection-membership-position">
						<xsl:value-of select="position()" />
					</xsl:variable>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                            <xsl:value-of select="concat($NS, 'CollectionMembership/', $itemURI, position())" />
                        </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                                <xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CollectionMembership'" />
                            </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a collezione ', position(), ' del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a collezione ', position(), ' del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Collection membership ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Collection membership ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<arco-cd:involvesMember>
							<xsl:attribute name="rdf:resource">
                        		<xsl:value-of select="$culturalProperty" />
                        	</xsl:attribute>
						</arco-cd:involvesMember>
						<arco-cd:involvesCollection>
							<xsl:attribute name="rdf:resource">
								<xsl:choose>
									<xsl:when test="./COLD and (not(starts-with(lower-case(normalize-space(./COLD)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLD)), 'n.r')))">
										<xsl:value-of select="concat($NS, 'CollectionCulEnt/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(./COLD)))" />
									</xsl:when>
									<xsl:otherwise>
										<xsl:value-of select="concat($NS, 'CollectionCulEnt/', $ldcm, '-', $pvcc, '-',  $collection-membership-position)" />
									</xsl:otherwise>
								</xsl:choose>
                        	</xsl:attribute>
						</arco-cd:involvesCollection>
						<xsl:if test="./COLM and (not(starts-with(lower-case(normalize-space(./COLM)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLM)), 'n.r')))">
							<arco-cd:collectionLeavingReason>
								<xsl:value-of select="normalize-space(./COLM)" />
							</arco-cd:collectionLeavingReason>
						</xsl:if>
						<xsl:if test="./COLI and (not(starts-with(lower-case(normalize-space(./COLI)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLI)), 'n.r')))">
							<l0:positionInSequence>
								<xsl:value-of select="normalize-space(./COLI)" />
							</l0:positionInSequence>
						</xsl:if>
						<xsl:if test="./COLU or ./COLA and (not(starts-with(lower-case(normalize-space(./COLU)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLU)), 'n.r')) and not(starts-with(lower-case(normalize-space(./COLA)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLA)), 'n.r')))">
							<tiapit:atTime>
								<xsl:attribute name="rdf:resource">
                        		<xsl:choose>
                        			<xsl:when test="./COLU and ./COLA">
                        				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./COLA)), '-', arco-fn:urify(normalize-space(./COLU)))" />
                        			</xsl:when>
                        			<xsl:when test="./COLU">
                        				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./COLU)))" />
                        			</xsl:when>
                        			<xsl:when test="./COLA">
                        				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./COLA)))" />
                        			</xsl:when>
                        			</xsl:choose>
                        		</xsl:attribute>
							</tiapit:atTime>
						</xsl:if>
					</rdf:Description>
					<!-- time interval of member of collection -->
					<xsl:if test="./COLU or ./COLA and (not(starts-with(lower-case(normalize-space(./COLU)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLU)), 'n.r')) and not(starts-with(lower-case(normalize-space(./COLA)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLA)), 'n.r')))">
						<rdf:Description>
							<xsl:attribute name="rdf:about">
								<xsl:choose>
		                        	<xsl:when test="./COLU and ./COLA">
        		                		<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./COLA)), '-', arco-fn:urify(normalize-space(./COLU)))" />
                		        	</xsl:when>
                        			<xsl:when test="./COLU">
                        				<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./COLU)))" />
		                        	</xsl:when>
        		                	<xsl:when test="./COLA">
                		        		<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(./COLA)))" />
                        			</xsl:when>
		                        </xsl:choose>
        		            </xsl:attribute>
							<rdf:type>
								<xsl:attribute name="rdf:resource">
                      				<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
								</xsl:attribute>
							</rdf:type>
							<xsl:if test="./COLA">
								<arco-arco:startTime>
									<xsl:value-of select="normalize-space(./COLA)" />
								</arco-arco:startTime>
							</xsl:if>
							<xsl:if test="./COLU">
								<arco-arco:endTime>
									<xsl:value-of select="normalize-space(./COLU)" />
								</arco-arco:endTime>
							</xsl:if>
						</rdf:Description>
					</xsl:if>
					<!-- collection of cultural entities -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:choose>
								<xsl:when test="./COLD and (not(starts-with(lower-case(normalize-space(./COLD)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLD)), 'n.r')))">
									<xsl:value-of select="concat($NS, 'CollectionCulEnt/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(./COLD)))" />
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="concat($NS, 'CollectionCulEnt/', $ldcm, '-', $pvcc, '-', $collection-membership-position)" />
								</xsl:otherwise>
							</xsl:choose>
	                	</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
                            	<xsl:value-of select="'http://dati.beniculturali.it/cis/CollectionCulEnt'" />
							</xsl:attribute>
						</rdf:type>
						<xsl:choose>
							<xsl:when test="./COLD and (not(starts-with(lower-case(normalize-space(./COLD)), 'nr')) and not(starts-with(lower-case(normalize-space(./COLD)), 'n.r')))">
								<rdfs:label>
									<xsl:value-of select="normalize-space(./COLD)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./COLD)" />
								</l0:name>
							</xsl:when>
							<xsl:otherwise>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Collezione ', position(), ' del bene: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Collezione ', position(), ' del bene: ', $itemURI)" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Collection ', position(), ' of cultural property: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Collection ', position(), ' of cultural property: ', $itemURI)" />
								</l0:name>
							</xsl:otherwise>
						</xsl:choose>		
						<xsl:if test="./COLS">
							<arco-core:note>
								<xsl:value-of select="normalize-space(./COLS)" />
							</arco-core:note>
						</xsl:if>
						<arco-lite:hasCollectionMember>
							<xsl:attribute name="rdf:resource">
                        		<xsl:value-of select="$culturalProperty" />
                        	</xsl:attribute>
						</arco-lite:hasCollectionMember>
						<xsl:if test="$sheetVersion='4.00' or $sheetVersion='4.00_ICCD0'">
							<xsl:if test="./COLN">
								<arco-lite:hasCollector>
									<xsl:attribute name="rdf:resource">
                    					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./COLN))" />
	                    			</xsl:attribute>
								</arco-lite:hasCollector>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-collector-', position())" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
						</xsl:if>
						<xsl:if test="not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0')">
							<xsl:if test="./COLC">
								<arco-lite:hasCollector>
									<xsl:attribute name="rdf:resource">
                    					<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./COLC))" />
	                    			</xsl:attribute>
								</arco-lite:hasCollector>
								<arco-core:hasAgentRole>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-collector-', position())" />
									</xsl:attribute>
								</arco-core:hasAgentRole>
							</xsl:if>
							<xsl:if test="./COLN">
								<arco-core:note>
                    					<xsl:value-of select="normalize-space(./COLN)" />
								</arco-core:note>
							</xsl:if>
						</xsl:if>
					</rdf:Description>
					<!-- collector of collection of cultural entities -->
					<xsl:if test="$sheetVersion='4.00' or $sheetVersion='4.00_ICCD0'">
						<xsl:if test="./COLN">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
		                       		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-collector-', position())" />
        		   	       		</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	                   	        		<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
			                       	</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Collezionista del bene culturale ', $itemURI, ': ', normalize-space(./COLN))" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Collezionista del bene culturale ', $itemURI, ': ', normalize-space(./COLN))" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Collector of cultural property ', $itemURI, ': ', normalize-space(./COLN))" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Collector of cultural property ', $itemURI, ': ', normalize-space(./COLN))" />
								</l0:name>
								<arco-core:hasRole>
									<xsl:attribute name="rdf:resource">
	    		           	            <xsl:value-of select="concat($NS, 'Role/Collector')" />
	            		       	    </xsl:attribute>
								</arco-core:hasRole>
								<arco-core:hasAgent>
									<xsl:attribute name="rdf:resource">
	       	    		                <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./COLN))" />
	           	        		    </xsl:attribute>
								</arco-core:hasAgent>
							</rdf:Description>
							<!-- Role as an individual -->
							<rdf:Description>
								<xsl:attribute name="rdf:about">
	           	        		    <xsl:value-of select="concat($NS, 'Role/Collector')" />
			               	    </xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
	                    		       	<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
		                       		</xsl:attribute>
								</rdf:type>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="'Collezionista'" />
								</rdfs:label>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="'Collector'" />
								</rdfs:label>
							</rdf:Description>
							<rdf:Description>
								<xsl:attribute name="rdf:about">
            	        			<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./COLN))" />
                	    		</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                            	    	<xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
									</xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(./COLN)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(./COLN)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
					<xsl:if test="not($sheetVersion='4.00' or $sheetVersion='4.00_ICCD0')">
						<xsl:if test="./COLC">
							<rdf:Description>
								<xsl:attribute name="rdf:about">
            	    				<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(./COLC))" />
                	    		</xsl:attribute>
								<rdf:type>
									<xsl:attribute name="rdf:resource">
                            		    <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
		                            </xsl:attribute>
								</rdf:type>
								<rdfs:label>
									<xsl:value-of select="arco-fn:name-cleaner(./COLC)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="arco-fn:name-cleaner(./COLC)" />
								</l0:name>
							</rdf:Description>
						</xsl:if>
					</xsl:if>
				</xsl:if>
			</xsl:for-each>
			<!-- archivalrecordset membership -->
			<xsl:if test="record/metadata/schede/*/UB/UBF/*">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ArchivalRecordSetMembership/', $itemURI)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CollectionMembership'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Appartenenza a unità archivistica complessa del bene: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Appartenenza a unità archivistica complessa del bene: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Archival record set membership of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Archival record set membership of cultural property: ', $itemURI)" />
					</l0:name>
					<arco-cd:involvesMember>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$culturalProperty" />
						</xsl:attribute>
					</arco-cd:involvesMember>
					<arco-cd:involvesCollection>
						<xsl:choose>
							<xsl:when test="record/metadata/schede/*/UB/UBF/UBFU">
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)))" />
							</xsl:when>
							<xsl:when test="record/metadata/schede/*/UB/UBF/UBFT">
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFT)))" />
							</xsl:when>
							<xsl:when test="record/metadata/schede/*/UB/UBF/UBFS">
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFS)))" />
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)))" />
							</xsl:otherwise>
						</xsl:choose>
					</arco-cd:involvesCollection>
					<xsl:if test="record/metadata/schede/*/UB/UBF/UBFC">
						<l0:positionInSequence>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFC)" />
						</l0:positionInSequence>
					</xsl:if>
					<xsl:if test="record/metadata/schede/*/UB/UBF/UBFQ">
						<arco-core:note>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFQ)" />
						</arco-core:note>
					</xsl:if>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/UB/UBF/UBFU and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ArchivalRecordSet'" />
						</xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'RecordSetType/ArchivalUnit')" />
						</xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFU)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFU)" />
					</l0:name>
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFT">
							<arco-core:isComponentOf>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFT)))" />
							</arco-core:isComponentOf>
						</xsl:when>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFS">
							<arco-core:isComponentOf>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFS)))" />
							</arco-core:isComponentOf>
						</xsl:when>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFP">
							<arco-core:isComponentOf>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)))" />
							</arco-core:isComponentOf>
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
					<arco-lite:hasCollectionMember>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$culturalProperty" />
						</xsl:attribute>
					</arco-lite:hasCollectionMember>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'RecordSetType/ArchivalUnit')" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RecordSetType'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="'Unità archivistica'" />
					</rdfs:label>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="'Archival unit'" />
					</rdfs:label>
					<l0:name  xml:lang="it">
						<xsl:value-of select="'Unità archivistica'" />
					</l0:name>
					<l0:name  xml:lang="en">
						<xsl:value-of select="'Archival unit'" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/UB/UBF/UBFT and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFT)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFT)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFT)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ArchivalRecordSet'" />
						</xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'RecordSetType/Subseries')" />
						</xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFT)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFT)" />
					</l0:name>
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFS">
							<arco-core:isComponentOf>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFS)))" />
							</arco-core:isComponentOf>
						</xsl:when>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFP">
							<arco-core:isComponentOf>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)))" />
							</arco-core:isComponentOf>
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
					<xsl:if test="record/metadata/schede/*/UB/UBF/UBFU and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)), 'n.r')))">
						<arco-core:hasComponent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)))" />
							</xsl:attribute>
						</arco-core:hasComponent>
					</xsl:if>
					<arco-lite:hasCollectionMember>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$culturalProperty" />
						</xsl:attribute>
					</arco-lite:hasCollectionMember>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'RecordSetType/Subseries')" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RecordSetType'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="'Sottoserie'" />
					</rdfs:label>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="'Subseries'" />
					</rdfs:label>
					<l0:name  xml:lang="it">
						<xsl:value-of select="'Sottoserie'" />
					</l0:name>
					<l0:name  xml:lang="en">
						<xsl:value-of select="'Subseries'" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<xsl:if test="record/metadata/schede/*/UB/UBF/UBFS and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFS)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFS)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFS)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ArchivalRecordSet'" />
						</xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'RecordSetType/Series')" />
						</xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFS)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFS)" />
					</l0:name>
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFT">
							<arco-core:hasComponent>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFT)))" />
							</arco-core:hasComponent>
						</xsl:when>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFU">
							<arco-core:hasComponent>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)))" />
							</arco-core:hasComponent>
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
					<xsl:if test="record/metadata/schede/*/UB/UBF/UBFP and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)), 'n.r')))">
						<arco-core:isComponentOf>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)))" />
							</xsl:attribute>
						</arco-core:isComponentOf>
					</xsl:if>
					<arco-lite:hasCollectionMember>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$culturalProperty" />
						</xsl:attribute>
					</arco-lite:hasCollectionMember>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'RecordSetType/Series')" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RecordSetType'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="'Serie'" />
					</rdfs:label>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="'Series'" />
					</rdfs:label>
					<l0:name  xml:lang="it">
						<xsl:value-of select="'Serie'" />
					</l0:name>
					<l0:name  xml:lang="en">
						<xsl:value-of select="'Series'" />
					</l0:name>
				</rdf:Description>
			</xsl:if>			
			<xsl:if test="record/metadata/schede/*/UB/UBF/UBFP and (not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)), 'nr')) and not(starts-with(lower-case(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)), 'n.r')))">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFP)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ArchivalRecordSet'" />
						</xsl:attribute>
					</rdf:type>
					<arco-core:hasType>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'RecordSetType/Fonds')" />
						</xsl:attribute>
					</arco-core:hasType>
					<rdfs:label>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFP)" />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="normalize-space(record/metadata/schede/*/UB/UBF/UBFP)" />
					</l0:name>
					<xsl:choose>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFS">
							<arco-core:hasComponent>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFS)))" />
							</arco-core:hasComponent>
						</xsl:when>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFT">
							<arco-core:hasComponent>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFT)))" />
							</arco-core:hasComponent>
						</xsl:when>
						<xsl:when test="record/metadata/schede/*/UB/UBF/UBFU">
							<arco-core:hasComponent>
								<xsl:value-of select="concat($NS, 'ArchivalRecordSet/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(record/metadata/schede/*/UB/UBF/UBFU)))" />
							</arco-core:hasComponent>
						</xsl:when>
						<xsl:otherwise></xsl:otherwise>
					</xsl:choose>
					<arco-lite:hasCollectionMember>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="$culturalProperty" />
						</xsl:attribute>
					</arco-lite:hasCollectionMember>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'RecordSetType/Fonds')" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RecordSetType'" />
						</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="'Fondo'" />
					</rdfs:label>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="'Fonds'" />
					</rdfs:label>
					<l0:name  xml:lang="it">
						<xsl:value-of select="'Fondo'" />
					</l0:name>
					<l0:name  xml:lang="en">
						<xsl:value-of select="'Fonds'" />
					</l0:name>
				</rdf:Description>
			</xsl:if>
			<!-- photographic series membership -->
			<xsl:if test="record/metadata/schede/F/PD/SFI/*">
				<xsl:for-each select="record/metadata/schede/F/PD/SFI">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'PhotographicSeriesMembership/', $itemURI, position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CollectionMembership'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a serie fotografica ', position(), ' del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a serie fotografica ', position(), ' del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Photographic series membership ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Photographic series membership ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./SFIN">
							<l0:positionInSequence>
								<xsl:value-of select="normalize-space(./SFIN)" />
							</l0:positionInSequence>
						</xsl:if>
						<arco-cd:involvesCollection>
							<xsl:choose>
								<xsl:when test="./SFIT">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'PhotographicSeries/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(./SFIT)))" />
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'PhotographicSeries/', $ldcm, '-', $pvcc, '-', position())" />
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
						</arco-cd:involvesCollection>
						<arco-cd:involvesMember>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$culturalProperty" />
							</xsl:attribute>
						</arco-cd:involvesMember>
					</rdf:Description>
					<!-- photographic series -->
					<rdf:Description>
						<xsl:choose>
							<xsl:when test="./SFIT">
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'PhotographicSeries/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(./SFIT)))" />
								</xsl:attribute>
							</xsl:when>
							<xsl:otherwise>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'PhotographicSeries/', $ldcm, '-', $pvcc, '-', position())" />
								</xsl:attribute>
							</xsl:otherwise>
						</xsl:choose>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PhotographicRecordSet'" />
							</xsl:attribute>
						</rdf:type>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'RecordSetType/Series')" />
							</xsl:attribute>
						</arco-core:hasType>
						<xsl:choose>
							<xsl:when test="./SFIT">
								<rdfs:label>
									<xsl:value-of select="normalize-space(./SFIT)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./SFIT)" />
								</l0:name>
							</xsl:when>
							<xsl:otherwise>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Serie fotografica ', position(), ' del bene: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Serie fotografica ', position(), ' del bene: ', $itemURI)" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Photographic series ', position(), ' of cultural property: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Photographic series ', position(), ' of cultural property: ', $itemURI)" />
								</l0:name>
							</xsl:otherwise>
						</xsl:choose>
						<xsl:if test="./SFIP">
							<arco-core:specifications>
								<xsl:value-of select="concat('Titolo prallelo: ', ./SFIP)" />
							</arco-core:specifications>
						</xsl:if>
						<xsl:if test="./SFIS">
							<arco-core:specifications>
								<xsl:value-of select="normalize-space(./SFIS)" />
							</arco-core:specifications>
						</xsl:if>
						<arco-lite:hasCollectionMember>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$culturalProperty" />
							</xsl:attribute>
						</arco-lite:hasCollectionMember>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RecordSetType/Series')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RecordSetType'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Serie'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Series'" />
						</rdfs:label>
						<l0:name  xml:lang="it">
							<xsl:value-of select="'Serie'" />
						</l0:name>
						<l0:name  xml:lang="en">
							<xsl:value-of select="'Series'" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<xsl:if test="record/metadata/schede/F/PD/SSI/*">
				<xsl:for-each select="record/metadata/schede/F/PD/SSI">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'PhotographicSubseriesMembership/', $itemURI, position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/CollectionMembership'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a sottoserie fotografica ', position(), ' del bene: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Appartenenza a sottoserie fotografica ', position(), ' del bene: ', $itemURI)" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Photographic subseries membership ', position(), ' of cultural property: ', $itemURI)" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Photographic subseries membership ', position(), ' of cultural property: ', $itemURI)" />
						</l0:name>
						<xsl:if test="./SFIN">
							<l0:positionInSequence>
								<xsl:value-of select="normalize-space(./SSIN)" />
							</l0:positionInSequence>
						</xsl:if>
						<arco-cd:involvesCollection>
							<xsl:choose>
								<xsl:when test="./SSIT">
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'PhotographicSubseries/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(./SSIT)))" />
									</xsl:attribute>
								</xsl:when>
								<xsl:otherwise>
									<xsl:attribute name="rdf:resource">
										<xsl:value-of select="concat($NS, 'PhotographicSubseries/', $ldcm, '-', $pvcc, '-', position())" />
									</xsl:attribute>
								</xsl:otherwise>
							</xsl:choose>
						</arco-cd:involvesCollection>
						<arco-cd:involvesMember>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$culturalProperty" />
							</xsl:attribute>
						</arco-cd:involvesMember>
					</rdf:Description>
					<!-- photographic series -->
					<rdf:Description>
						<xsl:choose>
							<xsl:when test="./SSIT">
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'PhotographicSubseries/', $ldcm, '-', $pvcc, '-', arco-fn:urify(normalize-space(./SSIT)))" />
								</xsl:attribute>
							</xsl:when>
							<xsl:otherwise>
								<xsl:attribute name="rdf:about">
									<xsl:value-of select="concat($NS, 'PhotographicSubseries/', $ldcm, '-', $pvcc, '-', position())" />
								</xsl:attribute>
							</xsl:otherwise>
						</xsl:choose>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/PhotographicSeries'" />
							</xsl:attribute>
						</rdf:type>
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'RecordSetType/Subseries')" />
							</xsl:attribute>
						</arco-core:hasType>
						<xsl:choose>
							<xsl:when test="./SSIT">
								<rdfs:label>
									<xsl:value-of select="normalize-space(./SSIT)" />
								</rdfs:label>
								<l0:name>
									<xsl:value-of select="normalize-space(./SSIT)" />
								</l0:name>
							</xsl:when>
							<xsl:otherwise>
								<rdfs:label xml:lang="it">
									<xsl:value-of select="concat('Sottoserie fotografica ', position(), ' del bene: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="it">
									<xsl:value-of select="concat('Sottoserie fotografica ', position(), ' del bene: ', $itemURI)" />
								</l0:name>
								<rdfs:label xml:lang="en">
									<xsl:value-of select="concat('Photographic subseries ', position(), ' of cultural property: ', $itemURI)" />
								</rdfs:label>
								<l0:name xml:lang="en">
									<xsl:value-of select="concat('Photographic subseries ', position(), ' of cultural property: ', $itemURI)" />
								</l0:name>
							</xsl:otherwise>
						</xsl:choose>
						<arco-lite:hasCollectionMember>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="$culturalProperty" />
							</xsl:attribute>
						</arco-lite:hasCollectionMember>
						<xsl:if test="./SSIP">
							<arco-core:specifications>
								<xsl:value-of select="concat('Titolo prallelo: ', ./SSIP)" />
							</arco-core:specifications>
						</xsl:if>
						<xsl:if test="./SSIS">
							<arco-core:specifications>
								<xsl:value-of select="concat('Titolo prallelo: ', ./SSIS)" />
							</arco-core:specifications>
						</xsl:if>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'RecordSetType/Subseries')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/RecordSetType'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Sottoserie'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Subseries'" />
						</rdfs:label>
						<l0:name  xml:lang="it">
							<xsl:value-of select="'Sottoserie'" />
						</l0:name>
						<l0:name  xml:lang="en">
							<xsl:value-of select="'Subseries'" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<!-- SCAN -->
			<xsl:if test="record/metadata/schede/SCAN/DA/CAM">
			<rdf:Description>
				<xsl:attribute name="rdf:about">
	    	   		<xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-current')" />
				</xsl:attribute>
				<arco-location:hasNaturalEnvironment>
					<xsl:attribute name="rdf:resource">
						<xsl:value-of select="concat($NS, 'NaturalEnvironment/', $itemURI)" />
					</xsl:attribute>
				</arco-location:hasNaturalEnvironment>
			</rdf:Description>
			<rdf:Description>
				<xsl:attribute name="rdf:about">
        			<xsl:value-of select="concat($NS, 'NaturalEnvironment/', $itemURI)" />
				</xsl:attribute>
				<rdf:type>
					<xsl:attribute name="rdf:resource">
						<xsl:value-of select="'https://w3id.org/arco/ontology/location/NaturalEnvironment'" />
					</xsl:attribute>
				</rdf:type>
				<rdfs:label xml:lang="it">
					<xsl:value-of select="concat('Ambiente naturale relativo al bene ', $itemURI)" />
				</rdfs:label>
				<l0:name xml:lang="it">
					<xsl:value-of select="concat('Ambiente naturale relativo al bene ', $itemURI)" />
				</l0:name>
				<rdfs:label xml:lang="en">
					<xsl:value-of select="concat('Natural environment of cultural property ', $itemURI)" />
				</rdfs:label>
				<l0:name xml:lang="en">
					<xsl:value-of select="concat('Natural environment of cultural property ', $itemURI)" />
				</l0:name>
				<arco-core:description>
					<xsl:value-of select="normalize-space(record/metadata/schede/SCAN/DA/CAM)" />
				</arco-core:description>
			</rdf:Description>
		</xsl:if>			
			<xsl:if test="record/metadata/schede/SCAN/BI/RIL">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
              			<xsl:value-of select="concat($NS, 'ObservationSurvey/', $itemURI)" />
              		</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
               				<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ObservationSurvey'" />
               			</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Observation survey of cultural property ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Observation survey of cultural property ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Indagine di rilevamento del bene culturale ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Indagine di rilevamento del bene culturale ', $itemURI)" />
					</l0:name>
					<!-- Observation survey type -->
					<xsl:if test="record/metadata/schede/SCAN/BI/RIL/RILM">
						<arco-core:hasType>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'ObservationSurveyType/', arco-fn:urify(normalize-space(record/metadata/schede/SCAN/BI/RIL/RILM)))" />
							</xsl:attribute>
						</arco-core:hasType>
					</xsl:if>
					<!-- at time -->
					<xsl:for-each select="record/metadata/schede/SCAN/BI/RIL/RILD">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(.)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:for-each>
					<xsl:if test="record/metadata/schede/SCAN/BI/RIL/RILN">
						<arco-core:note>
							<xsl:value-of select="normalize-space(record/metadata/schede/SCAN/BI/RIL/RILN)" />
						</arco-core:note>
					</xsl:if>
					<!-- has agent role -->
					<xsl:for-each select="record/metadata/schede/SCAN/BI/RIL/RILR">
						<arco-lite:hasOperator>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
            	   			</xsl:attribute>
						</arco-lite:hasOperator>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-observation-survey-activity-operator-', position())" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:for-each>
					<xsl:for-each select="record/metadata/schede/SCAN/BI/RIL/RILA">
						<arco-lite:involvesMainAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
            	   			</xsl:attribute>
						</arco-lite:involvesMainAgent>
						<arco-core:hasAgentRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-main-agent-', position())" />
							</xsl:attribute>
						</arco-core:hasAgentRole>
					</xsl:for-each>
				</rdf:Description>
				<xsl:if test="record/metadata/schede/SCAN/BI/RIL/RILM">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'ObservationSurveyType/', arco-fn:urify(normalize-space(record/metadata/schede/SCAN/BI/RIL/RILM)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/ObservationSurveyType'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/SCAN/BI/RIL/RILM)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="normalize-space(record/metadata/schede/SCAN/BI/RIL/RILM)" />
						</l0:name>
					</rdf:Description>
				</xsl:if>
				<xsl:for-each select="record/metadata/schede/SCAN/BI/RIL/RILD">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(normalize-space(.)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OC/OCD)" />
						</rdfs:label>
						<tiapit:startTime>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OC/OCD)" />
						</tiapit:startTime>
						<tiapit:endTime>
							<xsl:value-of select="normalize-space(record/metadata/schede/*/OC/OCD)" />
						</tiapit:endTime>
					</rdf:Description>
				</xsl:for-each>
				<xsl:for-each select="record/metadata/schede/SCAN/BI/RIL/RILR">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
                      		<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-observation-survey-activity-operator', position())" />
                  		</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                           <xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
	                       </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Ente operatore del rilevamento del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="it">
							<xsl:value-of select="concat('Ente operatore del rilevamento del bene culturale ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Operator of obervation activity of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</rdfs:label>
						<l0:name xml:lang="en">
							<xsl:value-of select="concat('Operator of obervation activity  of cultural property ', $itemURI, ': ', normalize-space(.))" />
						</l0:name>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
	    						<xsl:value-of select="concat($NS, 'Role/Operator')" />
	        				</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
	                           <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                       </xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<!-- Role as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                       <xsl:value-of select="concat($NS, 'Role/Operator')" />
	                   </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                           <xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
	                       </xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Operatore'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Operator'" />
						</rdfs:label>
					</rdf:Description>
					<!-- Agent as an individual -->
					<rdf:Description>
						<xsl:attribute name="rdf:about">
	                       <xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
	                   </xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
	                           <xsl:value-of select="'https://w3id.org/italia/onto/l0/Agent'" />
	                       </xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="arco-fn:name-cleaner(.)" />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
				<xsl:for-each select="record/metadata/schede/SCAN/BI/RIL/RILA">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'AgentRole/', $itemURI, '-main-agent-', position())" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/arco/ontology/core/AgentRole'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="concat('Agente principale ', position(), ' del bene ', $itemURI, ': ', .)" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="concat('Main agent ', position(), ' of cultural property ', $itemURI, ': ', .)" />
						</rdfs:label>
						<arco-core:hasRole>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Role/MainAgent')" />
							</xsl:attribute>
						</arco-core:hasRole>
						<arco-core:hasAgent>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
							</xsl:attribute>
						</arco-core:hasAgent>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Role/MainAgent')" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/RO/Role'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label xml:lang="it">
							<xsl:value-of select="'Agente principale'" />
						</rdfs:label>
						<rdfs:label xml:lang="en">
							<xsl:value-of select="'Main agent'" />
						</rdfs:label>
					</rdf:Description>
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'Agent/', arco-fn:arcofy(.))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/COV/Group'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="." />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="." />
						</l0:name>
					</rdf:Description>
				</xsl:for-each>
			</xsl:if>
			<xsl:for-each select="record/metadata/schede/SCAN/BI/DTC/DTCO">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'Circumstance/', $itemURI, arco-fn:urify(.))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/context-description/Circumstance'" />
    	                </xsl:attribute>
					</rdf:type>
					<rdfs:label>
						<xsl:value-of select="." />
					</rdfs:label>
					<l0:name>
						<xsl:value-of select="." />
					</l0:name>
				</rdf:Description>
			</xsl:for-each>
			<xsl:if test="record/metadata/schede/SCAN/BI/DTC/DTCP">				
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'RecurrentSituationSeries/', $itemURI)" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/cultural-event/RecurrentSituationSeries'" />
    					</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Evento ricorrente relativo al bene ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Recurrent situation related to cultural property ', $itemURI)" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Evento ricorrente relativo al bene ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Recurrent situation related to cultural property ', $itemURI)" />
					</rdfs:label>
					<xsl:if test="record/metadata/schede/SCAN/BI/DTC/DTCN">
						<arco-core:note>
							<xsl:value-of select="record/metadata/schede/SCAN/BI/DTC/DTCN" />
						</arco-core:note>
					</xsl:if>
					<!-- recurrent time period -->
					<arco-ce:hasRecurrentTimePeriod>
						<xsl:attribute name="rdf:resource">
            	    		<xsl:value-of select="concat($NS, 'RecurrentTimePeriod/', arco-fn:urify(normalize-space(record/metadata/schede/SCAN/BI/DTC/DTCP)))" />
                		</xsl:attribute>
					</arco-ce:hasRecurrentTimePeriod>
				</rdf:Description>
				<!-- recurrent time period -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
						<xsl:value-of select="concat($NS, 'RecurrentTimePeriod/', arco-fn:urify(normalize-space(record/metadata/schede/SCAN/BI/DTC/DTCP)))" />
					</xsl:attribute>
					<rdf:type>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="'https://w3id.org/arco/ontology/cultural-event/RecurrentTimePeriod'" />
    					</xsl:attribute>
					</rdf:type>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Periodo di tempo ricorrente ', normalize-space(record/metadata/schede/SCAN/BI/DTC/DTCP))" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Recurrent time period ', normalize-space(record/metadata/schede/SCAN/BI/DTC/DTCP))" />
					</l0:name>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Periodo di tempo ricorrente ', normalize-space(record/metadata/schede/SCAN/BI/DTC/DTCP))" />
					</l0:name>
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Recurrent situation related to cultural property ', $itemURI)" />
					</rdfs:label>
					<xsl:if test="record/metadata/schede/SCAN/BI/DTC/DTCI">
						<tiapit:atTime>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(concat(record/metadata/schede/SCAN/BI/DTC/DTCI, '-',  record/metadata/schede/SCAN/BI/DTC/DTCF)))" />
							</xsl:attribute>
						</tiapit:atTime>
					</xsl:if>
				</rdf:Description>
				<!-- Time interval as an individual -->
				<xsl:if test="record/metadata/schede/SCAN/BI/DTC/DTCI">
					<rdf:Description>
						<xsl:attribute name="rdf:about">
							<xsl:value-of select="concat($NS, 'TimeInterval/', arco-fn:urify(concat(record/metadata/schede/SCAN/BI/DTC/DTCI, '-',  record/metadata/schede/SCAN/BI/DTC/DTCF)))" />
						</xsl:attribute>
						<rdf:type>
							<xsl:attribute name="rdf:resource">
								<xsl:value-of select="'https://w3id.org/italia/onto/TI/TimeInterval'" />
							</xsl:attribute>
						</rdf:type>
						<rdfs:label>
							<xsl:value-of select="concat(record/metadata/schede/SCAN/BI/DTC/DTCI, ' - ', record/metadata/schede/SCAN/BI/DTC/DTCF)" />
						</rdfs:label>
						<l0:name>
							<xsl:value-of select="concat(record/metadata/schede/SCAN/BI/DTC/DTCI, ' - ', record/metadata/schede/SCAN/BI/DTC/DTCF)" />
						</l0:name>
						<xsl:if test="record/metadata/schede/SCAN/BI/DTC/DTCI">
							<arco-arco:startTime>
								<xsl:value-of select="record/metadata/schede/SCAN/BI/DTC/DTCI" />
							</arco-arco:startTime>
						</xsl:if>
						<xsl:if test="record/metadata/schede/SCAN/BI/DTC/DTCF">
							<arco-arco:endTime>
								<xsl:value-of select="record/metadata/schede/SCAN/BI/DTC/DTCF" />
							</arco-arco:endTime>
						</xsl:if>
					</rdf:Description>
				</xsl:if>
			</xsl:if>
			<!-- Natural Environment as individual -->
			<xsl:if test="record/metadata/schede/MODI/CA/CAT">
				<rdf:Description>
					<xsl:attribute name="rdf:about">
	    		   		<xsl:value-of select="concat($NS, 'TimeIndexedTypedLocation/', $itemURI, '-current')" />
					</xsl:attribute>
					<arco-location:hasNaturalEnvironment>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'NaturalEnvironment/', $itemURI)" />
						</xsl:attribute>
					</arco-location:hasNaturalEnvironment>
				</rdf:Description>
				<rdf:Description>
					<xsl:attribute name="rdf:about">
		       			<xsl:value-of select="concat($NS, 'NaturalEnvironment/', $itemURI)" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/NaturalEnvironment" />
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Environment of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Environment of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Ambiente del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Ambiente del bene culturale: ', $itemURI)" />
					</l0:name>
					<arco-location:hasClimateSituation>
						<xsl:attribute name="rdf:resource">
							<xsl:value-of select="concat($NS, 'ClimateSituation/', $itemURI, '-', position())" />
						</xsl:attribute>
					</arco-location:hasClimateSituation>
				</rdf:Description>
				<!-- Climate situation as individual -->
				<rdf:Description>
					<xsl:attribute name="rdf:about">
	       				<xsl:value-of select="concat($NS, 'ClimateSituation/', $itemURI, '-', position())" />
					</xsl:attribute>
					<rdf:type rdf:resource="https://w3id.org/arco/ontology/location/ClimateSituation" />
					<rdfs:label xml:lang="en">
						<xsl:value-of select="concat('Climate situation ', position(), ' of cultural property: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="en">
						<xsl:value-of select="concat('Climate situation ', position(), ' of cultural property: ', $itemURI)" />
					</l0:name>
					<rdfs:label xml:lang="it">
						<xsl:value-of select="concat('Situazione climatica ', position(), ' del bene culturale: ', $itemURI)" />
					</rdfs:label>
					<l0:name xml:lang="it">
						<xsl:value-of select="concat('Situazione climatica ', position(), ' del bene culturale: ', $itemURI)" />
					</l0:name>
					<arco-core:description>
						<xsl:value-of select="record/metadata/schede/MODI/CA/CAT" />
					</arco-core:description>
				</rdf:Description>
			</xsl:if>
			<!-- xsl:apply-templates select="record/metadata/schede/*/MT/MIS" / -->
		</xsl:if>
		</rdf:RDF>
	</xsl:template>
</xsl:stylesheet>